{"version":3,"mappings":"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","names":["_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","__default__","linkUrl","computed","toClickToSearchUrl","props","autolinkText","text","contentAsArray","getDisplayText","content","_a","_b","__read","o","n","m","i","r","ar","e","error","__spreadArray","to","from","pack","l","generateArrayOfNodes","target","shave","maxHeight","opts","els","character","classname","_c","initialSpaces","_d","charclassname","_e","link","spaces","isLink","shavedTextElType","el","styles","span","textProp","fullText","words","heightStyle","maxHeightStyle","textContent","shavedTextEl","shavedTextElAttributes","property","linkProperty","max","min","pivot","diff","shavedText","elWithShavedText","show","ref","truncateText","isTruncated","debouncedShave","useDebounceFn","updateShave","onMounted","dateString","outputString","recursiveSort","inputObject","skip","outputArray","key","uniqueValues","inputArray","value","index","self","organizedSelectCategories","makeSafeForTitle","title","contentsUpToCategory","targetCategory","returnValue","category","handleAccordionToggle","isOpen","emit","Map","defineAsyncComponent","__vitePreload","MapMarker","lat","lng","lngStr","latStr","mapCenter","locationLabel","hasLocation","assetStore","useAssetStore","isFileActive","fileId","getTitleFromCacheItem","relatedAssetCacheItem","useAsset","assetIdRef","templateRef","assetRef","getAssetTitle","onAssetIdChange","api","asset","template","isActiveObject","assetUrl","getAssetUrl","widgetType","CollapsedInlineRelatedAssetWidgetItem","ThumbnailRelatedAssetWidgetItem","AccordionRelatedAssetWidgetItem","LinkedRelatedAssetWidgetItem","contentsWithAssetId","item","widgetContents","getWidgetContents","widgetMap","TextWidget","SelectWidget","CheckBoxWidget","TextAreaWidget","DateWidget","MultiSelectWidget","LocationWidget","UploadWidget","TagWidget","RelatedAssetWidget","getWidgetComponentByType","type","widgets","getWidgetsForDisplay","_openBlock","isFileInfoOpen","fileMetaData","isFileMetaDataReady","handleInfoButtonClick","downloadFileInfo","isDownloadFileInfoReady","handleDownloadFileClick","toRef","useClipboard","valueRef","removeExtraWhitespace","str","linkValue","config","embedValue","inlineResultsList","numOfSeeMoreResults","isShowingFullListOfResults","moreLikeThisItems","watch","assetTitle","isObjectDetailsOpen","permitDrawerToggle","useMediaQuery","isSpace","isQuote","TAG_START","TAG_END","ENCODED_TAG_START","ENCODED_TAG_END","InPlaintextState","options","transition","InTagNameState","InTagState","InCommentState","tagName","mode","InQuotedStringInTagState","quoteCharacter","DefaultStateMachineOptions","StateMachine","partialOptions","next","outputBuffer","striptags","isMetaDataOnly","isPageLoaded","route","useRoute","objectId","pageTitle","usePageTitle","onBeforeRouteLeave"],"sources":["../../src/icons/CircleIcon.vue","../../src/icons/DownloadIcon.vue","../../src/icons/ShareIcon.vue","../../src/components/Tuple/Tuple.vue","../../src/components/ClickToSearchLink/ClickToSearchLink.vue","../../src/components/Widget/TextWidget/TextWidget.vue","../../src/components/Widget/SelectWidget/SelectItem.vue","../../node_modules/shave/dist/shave.es.js","../../src/components/Widget/TextAreaWidget/TextAreaItem.vue","../../src/components/Widget/DateWidget/DateWidgetItem.vue","../../src/components/Widget/MultiSelectWidget/MultiSelectWidget.ts","../../src/components/Widget/MultiSelectWidget/MultiSelectItem.vue","../../src/components/Accordion/Accordion.vue","../../src/components/Widget/LocationWidget/LocationItem.vue","../../src/components/Widget/UploadWidget/UploadWidget.vue","../../src/components/Widget/RelatedAssetWidget/getTitleFromCacheItem.ts","../../src/components/Widget/RelatedAssetWidget/AccordionRelatedAssetWidgetItem.vue","../../src/helpers/useAsset.ts","../../src/components/Widget/RelatedAssetWidget/CollapsedInlineRelatedAssetWidgetItem.vue","../../src/components/Widget/RelatedAssetWidget/ThumbnailRelatedAssetWidgetItem.vue","../../src/components/Widget/RelatedAssetWidget/LinkedRelatedAssetWidgetItem.vue","../../src/components/Widget/RelatedAssetWidget/RelatedAssetWidget.vue","../../src/components/Widget/Widget.vue","../../src/components/WidgetList/WidgetList.vue","../../src/components/ActiveFileViewToolbar/ActiveFileViewButton.vue","../../src/components/ActiveFileViewToolbar/MoreFileInfoButton.vue","../../src/components/ActiveFileViewToolbar/DownloadFileButton.vue","../../src/components/CopyableTextArea/CopyableTextArea.vue","../../src/components/ActiveFileViewToolbar/ShareButton.vue","../../src/components/ObjectDetailsDrawer/ObjectDetailsDrawer.vue","../../src/components/MoreLikeThis/CountChip.vue","../../src/components/MoreLikeThis/MoreLikeThis.vue","../../src/components/AssetDetailsDrawer/AssetDetailsDrawer.vue","../../src/pages/AssetViewPage/AssetView.vue","../../src/pages/AssetViewPage/MetaDataOnlyView.vue","../../node_modules/striptags/dist/es6/striptags.js","../../src/pages/AssetViewPage/AssetViewPage.vue"],"sourcesContent":["<template>\n  <svg\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"1.5\"\n    class=\"w-6 h-6\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"9\" />\n  </svg>\n</template>\n<script setup lang=\"ts\"></script>\n<style scoped></style>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    class=\"w-5 h-5\"\n  >\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3\"\n    />\n  </svg>\n</template>\n<script setup lang=\"ts\"></script>\n<style scoped></style>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"currentColor\"\n    class=\"w-5 h-5\"\n  >\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      d=\"M7.217 10.907a2.25 2.25 0 100 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186l9.566-5.314m-9.566 7.5l9.566 5.314m0 0a2.25 2.25 0 103.935 2.186 2.25 2.25 0 00-3.935-2.186zm0-12.814a2.25 2.25 0 103.933-2.185 2.25 2.25 0 00-3.933 2.185z\"\n    />\n  </svg>\n</template>\n<script setup lang=\"ts\"></script>\n<style scoped></style>\n","<template>\n  <div\n    class=\"tuple\"\n    :class=\"{\n      'w-full': variant === 'stacked',\n      'inline-flex items-baseline gap-2': variant === 'inline',\n    }\"\n  >\n    <div class=\"tuple__label\">\n      <slot name=\"label\">\n        <span\n          class=\"text-xs block uppercase leading-none mb-1 tracking-wide\"\n          :class=\"{\n            'font-bold': variant === 'stacked',\n            'sr-only': variant === 'value-only',\n          }\"\n          >{{ label }}</span\n        >\n      </slot>\n    </div>\n    <span class=\"tuple__value block\" v-bind=\"$attrs\">\n      <slot> - </slot>\n    </span>\n  </div>\n</template>\n<script setup lang=\"ts\">\nwithDefaults(\n  defineProps<{\n    label: string;\n    variant?: \"stacked\" | \"inline\" | \"value-only\";\n  }>(),\n  {\n    variant: \"stacked\",\n  }\n);\n</script>\n<script lang=\"ts\">\nexport default {\n  inheritAttrs: false,\n};\n</script>\n\n<style scoped>\n.tuple__label {\n  color: var(--app-tuple-label-textColor);\n}\n\n.tuple__value {\n  color: var(--app-tuple-value-textColor);\n}\n</style>\n","<template>\n  <span v-if=\"props.widget.clickToSearch\">\n    <a :href=\"linkUrl\">\n      <slot />\n    </a>\n  </span>\n  <span v-else>\n    <slot />\n  </span>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport { WidgetProps } from \"@/types\";\nimport { toClickToSearchUrl } from \"@/helpers/displayUtils\";\n\ninterface Props {\n  linkText: string;\n  widget: WidgetProps;\n}\n\nconst props = defineProps<Props>();\n\nconst linkUrl = computed((): string =>\n  toClickToSearchUrl(props.linkText, props.widget)\n);\n</script>\n","<template>\n  <ul>\n    <li v-for=\"(content, key) in contents\" :key=\"key\">\n      <ClickToSearchLink :widget=\"widget\" :linkText=\"content.fieldContents\"\n        ><span v-html=\"autolinkText(content.fieldContents)\"></span\n      ></ClickToSearchLink>\n    </li>\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport ClickToSearchLink from \"@/components/ClickToSearchLink/ClickToSearchLink.vue\";\nimport { TextWidgetProps, TextWidgetContent } from \"@/types\";\n\ndefineProps<{\n  widget: TextWidgetProps;\n  contents: TextWidgetContent[];\n}>();\n\nfunction autolinkText(text: string): string {\n  const textWithStrippedTags = text.replace(/(<([^>]+)>)/gi, \"\");\n  // if this text contains tags, just leave it as is\n  if (textWithStrippedTags != text) {\n    return text;\n  } else {\n    //otherwise, try to autolink urls\n    return text.replace(\n      /(https?:\\/\\/[a-zA-Z0-9\\-_.:@!~*'(¥);/?&=+$,%#]+)/g,\n      '<a href=\"$1\" target=\"_blank\">$1</a>'\n    );\n  }\n}\n</script>\n","<template>\n  <li v-for=\"(content, key) in contentAsArray\" :key=\"key\">\n    <ClickToSearch :widget=\"widget\" :linkText=\"getDisplayText(content)\">\n      <div v-html=\"getDisplayText(content)\" />\n    </ClickToSearch>\n  </li>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport ClickToSearch from \"@/components/ClickToSearchLink/ClickToSearchLink.vue\";\nimport { SelectWidgetProps, SelectWidgetContent } from \"@/types\";\n\nconst props = defineProps<{\n  selectValues: SelectWidgetContent;\n  widget: SelectWidgetProps;\n}>();\n\nconst contentAsArray = computed(() => {\n  if (typeof props.selectValues.fieldContents === \"string\") {\n    return [props.selectValues.fieldContents];\n  } else {\n    return props.selectValues.fieldContents;\n  }\n});\n\nfunction getDisplayText(content: string): string {\n  if (props.widget.fieldData.selectGroup?.hasOwnProperty(content)) {\n    return props.widget.fieldData?.selectGroup[content];\n  } else {\n    return content;\n  }\n}\n</script>\n","/**\n  shave - Shave is a javascript plugin that truncates multi-line text within a html element based on set max height\n  @version v5.0.0\n  @link https://github.com/yowainwright/shave#readme\n  @author Jeff Wainwright <yowainwright@gmail.com> (jeffry.in)\n  @license MIT\n**/\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nfunction generateArrayOfNodes(target) {\n    if (typeof target === 'string') {\n        return __spreadArray([], __read(document.querySelectorAll(target)), false);\n    }\n    else if ('length' in target) {\n        return __spreadArray([], __read(target), false);\n    }\n    else {\n        return [target];\n    }\n}\nfunction shave(target, maxHeight, opts) {\n    if (opts === void 0) { opts = {}; }\n    if (typeof maxHeight === 'undefined' || isNaN(maxHeight)) {\n        throw Error('maxHeight is required');\n    }\n    var els = generateArrayOfNodes(target);\n    if (!els.length) {\n        return;\n    }\n    var _a = opts.character, character = _a === void 0 ? '…' : _a, _b = opts.classname, classname = _b === void 0 ? 'js-shave' : _b, _c = opts.spaces, initialSpaces = _c === void 0 ? true : _c, _d = opts.charclassname, charclassname = _d === void 0 ? 'js-shave-char' : _d, _e = opts.link, link = _e === void 0 ? {} : _e;\n    /**\n     * @notes\n     * the initialSpaces + spaces variable definition below fixes\n     * a previous bug where spaces being a boolean type wasn't clear\n     * meaning people were using (a string, in example—which is truthy)\n     * hence, doing it this way is a non-breaking change\n     */\n    var spaces = typeof initialSpaces === 'boolean' ? initialSpaces : true;\n    /**\n     * @notes\n     * - create a span or anchor element and assign properties to it\n     * - JSON.stringify is used to support IE8+\n     * - if link.href is not provided, link object properties are ignored\n     */\n    var isLink = link && JSON.stringify(link) !== '{}' && link.href;\n    var shavedTextElType = isLink ? 'a' : 'span';\n    for (var i = 0; i < els.length; i += 1) {\n        var el = els[i];\n        var styles = el.style;\n        var span = el.querySelector('.' + classname);\n        var textProp = el.textContent === undefined ? 'innerText' : 'textContent';\n        // If element text has already been shaved\n        if (span) {\n            // Remove the ellipsis to recapture the original text\n            el.removeChild(el.querySelector('.' + charclassname));\n            el[textProp] = el[textProp]; // eslint-disable-line\n            // nuke span, recombine text\n        }\n        var fullText = el[textProp];\n        var words = spaces ? fullText.split(' ') : fullText;\n        // If 0 or 1 words, we're done\n        if (words.length < 2) {\n            continue;\n        }\n        // Temporarily remove any CSS height for text height calculation\n        var heightStyle = styles.height;\n        styles.height = 'auto';\n        var maxHeightStyle = styles.maxHeight;\n        styles.maxHeight = 'none';\n        // If already short enough, we're done\n        if (el.offsetHeight <= maxHeight) {\n            styles.height = heightStyle;\n            styles.maxHeight = maxHeightStyle;\n            continue;\n        }\n        var textContent = isLink && link.textContent ? link.textContent : character;\n        var shavedTextEl = document.createElement(shavedTextElType);\n        var shavedTextElAttributes = {\n            className: charclassname,\n            textContent: textContent,\n        };\n        for (var property in shavedTextElAttributes) {\n            shavedTextEl[property] = shavedTextElAttributes[property];\n            shavedTextEl.textContent = character;\n        }\n        if (isLink) {\n            for (var linkProperty in link) {\n                shavedTextEl[linkProperty] = link[linkProperty];\n            }\n        }\n        // Binary search for number of words which can fit in allotted height\n        var max = words.length - 1;\n        var min = 0;\n        var pivot = void 0;\n        while (min < max) {\n            pivot = (min + max + 1) >> 1; // eslint-disable-line no-bitwise\n            el[textProp] = spaces\n                ? words.slice(0, pivot).join(' ')\n                : words.slice(0, pivot);\n            el.insertAdjacentElement('beforeend', shavedTextEl);\n            if (el.offsetHeight > maxHeight) {\n                max = pivot - 1;\n            }\n            else {\n                min = pivot;\n            }\n        }\n        el[textProp] = spaces ? words.slice(0, max).join(' ') : words.slice(0, max);\n        el.insertAdjacentElement('beforeend', shavedTextEl);\n        var diff = spaces\n            ? \" \".concat(words.slice(max).join(' '))\n            : words.slice(max);\n        var shavedText = document.createTextNode(diff);\n        var elWithShavedText = document.createElement('span');\n        elWithShavedText.classList.add(classname);\n        elWithShavedText.style.display = 'none';\n        elWithShavedText.appendChild(shavedText);\n        el.insertAdjacentElement('beforeend', elWithShavedText);\n        styles.height = heightStyle;\n        styles.maxHeight = maxHeightStyle;\n    }\n}\n\nexport { shave as default };\n","<template>\n  <div v-if=\"!show\" ref=\"truncateText\" v-html=\"fieldContents\"></div>\n  <div v-if=\"show\" v-html=\"fieldContents\"></div>\n\n  <button\n    v-if=\"isTruncated\"\n    class=\"flex items-center uppercase text-xs text-blue-600\"\n    @click=\"show = !show\"\n  >\n    Show {{ show ? \"Less\" : \"More\" }}\n    <ChevronUpIcon v-if=\"show\" />\n    <ChevronDownIcon v-else />\n  </button>\n</template>\n<script setup lang=\"ts\">\nimport { WidgetProps } from \"@/types\";\nimport { ref, onMounted } from \"vue\";\nimport { useResizeObserver, useDebounceFn } from \"@vueuse/core\";\nimport shave from \"shave\";\nimport ChevronDownIcon from \"@/icons/ChevronDownIcon.vue\";\nimport ChevronUpIcon from \"@/icons/ChevronUpIcon.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    fieldContents: string;\n    widget: WidgetProps;\n    textTruncationLength?: number;\n  }>(),\n  {\n    textTruncationLength: 75,\n  }\n);\nconst show = ref(false);\nconst truncateText = ref<HTMLDivElement | null>(null);\nconst isTruncated = ref(false);\n\nconst debouncedShave = useDebounceFn(() => {\n  updateShave();\n}, 50);\n\nfunction updateShave() {\n  if (!truncateText.value) {\n    return;\n  }\n\n  shave(\n    [truncateText.value] as unknown as NodeList,\n    props.textTruncationLength\n  );\n  isTruncated.value =\n    truncateText.value.querySelector<HTMLElement>(\".js-shave\") !== null;\n}\n\nuseResizeObserver(truncateText, debouncedShave);\nonMounted(() => {\n  updateShave();\n});\n</script>\n","<template>\n  <ClickToSearchLink :widget=\"widget\" :linkText=\"dateString\">\n    <template v-if=\"dateContent.label\">\n      <Tuple :label=\"dateContent.label\" variant=\"inline\"\n        >{{ dateString }}\n      </Tuple>\n    </template>\n    <template v-else>\n      {{ dateString }}\n    </template>\n  </ClickToSearchLink>\n</template>\n\n<script setup lang=\"ts\">\nimport ClickToSearchLink from \"@/components/ClickToSearchLink/ClickToSearchLink.vue\";\nimport { computed } from \"vue\";\nimport { DateWidgetProps, DateWidgetContent } from \"@/types\";\nimport Tuple from \"@/components/Tuple/Tuple.vue\";\n\ninterface Props {\n  dateContent: DateWidgetContent;\n  widget: DateWidgetProps;\n}\n\nconst props = defineProps<Props>();\n\nconst dateString = computed(() => {\n  let outputString = \"\";\n  outputString += props.dateContent.start.text;\n  if (props.dateContent.range) {\n    outputString += \" - \" + props.dateContent.end.text;\n  }\n  return outputString;\n});\n</script>\n","export const recursiveSort = (inputObject: object, skip: boolean): string[] => {\n  let outputArray: string[] = [];\n  for (const key in inputObject) {\n    if (!skip) {\n      outputArray.push(key);\n    }\n    if (typeof inputObject[key] === \"object\") {\n      outputArray = outputArray.concat(recursiveSort(inputObject[key], !skip));\n    }\n  }\n  return outputArray.flat();\n};\n\nexport const uniqueValues = (inputArray: string[]) => {\n  return inputArray.filter((value, index, self) => {\n    return self.indexOf(value) === index;\n  });\n};\n","<template>\n  <ul>\n    <template v-for=\"category in organizedSelectCategories\" :key=\"category\">\n      <li v-if=\"content.fieldContents[category]\">\n        <ClickToSearchLink\n          :widget=\"widget\"\n          :linkText=\"contentsUpToCategory(category)\"\n          >{{ content.fieldContents[category] }}\n        </ClickToSearchLink>\n      </li>\n    </template>\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport { recursiveSort, uniqueValues } from \"./MultiSelectWidget\";\nimport { computed } from \"vue\";\nimport { MultiSelectWidgetContent, MultiSelectWidgetProps } from \"@/types\";\nimport ClickToSearchLink from \"@/components/ClickToSearchLink/ClickToSearchLink.vue\";\n\ninterface Props {\n  widget: MultiSelectWidgetProps;\n  content: MultiSelectWidgetContent;\n}\n\nconst props = defineProps<Props>();\n\nconst organizedSelectCategories = computed(() => {\n  return uniqueValues(recursiveSort(props.widget.fieldData, false)).map(\n    makeSafeForTitle\n  );\n});\n\nconst makeSafeForTitle = (title) => {\n  return title.replace(/[^a-zA-Z0-9]+/, \"\");\n};\n\nconst contentsUpToCategory = (targetCategory) => {\n  const returnValue: string[] = [];\n  for (const category of organizedSelectCategories.value) {\n    returnValue.push(props.content.fieldContents[category]);\n    if (category == targetCategory) {\n      return returnValue.join(\" : \");\n    }\n  }\n  return returnValue.join(\" : \");\n};\n</script>\n\n<style scoped>\nul {\n  display: inline;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\nul li {\n  display: inline;\n}\n\nul li + li:before {\n  content: \" : \";\n}\n</style>\n","<template>\n  <div class=\"accordion w-full mt-2 overflow-hidden rounded\">\n    <button\n      class=\"accordion__header flex items-center justify-between w-full gap-2 border-none rounded-b-none\"\n      :label=\"isOpen ? 'close' : 'open'\"\n      @click=\"handleAccordionToggle\"\n    >\n      <slot name=\"label\">\n        <span\n          class=\"flex-1 block p-4 text-left\"\n          :class=\"{\n            'font-bold ': isOpen,\n            'font-normal': !isOpen,\n          }\"\n          >{{ label }}</span\n        >\n      </slot>\n      <div class=\"place-items-center flex p-4\">\n        <slot name=\"label-icon\">\n          <ChevronUpIcon v-if=\"isOpen\" class=\"w-5 h-5\" />\n          <ChevronDownIcon v-else class=\"w-5 h-5\" />\n        </slot>\n      </div>\n    </button>\n    <div\n      v-if=\"isOpen\"\n      class=\"accordion__body flex flex-col gap-4 px-4 pt-2 pb-4 border-t\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport ChevronDownIcon from \"@/icons/ChevronDownIcon.vue\";\nimport ChevronUpIcon from \"@/icons/ChevronUpIcon.vue\";\n\nwithDefaults(\n  defineProps<{\n    label?: string;\n  }>(),\n  {\n    label: \"-\",\n  }\n);\n\nconst emit = defineEmits<{\n  (eventName: \"toggle\");\n  (eventName: \"open\");\n}>();\n\nconst isOpen = ref(false);\n\nfunction handleAccordionToggle() {\n  isOpen.value = !isOpen.value;\n  emit(\"toggle\");\n  if (isOpen.value) emit(\"open\");\n}\n</script>\n<style scoped>\n.accordion {\n  color: var(--app-accordion-textColor);\n  border: var(--app-accordion-outer-borderWidth) solid\n    var(--app-accordion-outer-borderColor);\n}\n.accordion__header {\n  background: var(--app-accordion-header-backgroundColor);\n  color: var(--app-accordion-header-textColor);\n}\n\n.accordion__body {\n  background: var(--app-accordion-body-backgroundColor);\n  color: var(--app-accordion-body-textColor);\n  border-top: var(--app-accordion-inner-borderWidth) solid\n    var(--app-accordion-inner-borderColor);\n}\n</style>\n","<template>\n  <Accordion>\n    <template #label>\n      <div v-if=\"!locationLabel\" class=\"flex gap-6 p-4\">\n        <Tuple label=\"Latitude\" class=\"w-auto\" variant=\"inline\">{{\n          latStr\n        }}</Tuple>\n        <Tuple label=\"Longitude\" class=\"w-auto\" variant=\"inline\">{{\n          lngStr\n        }}</Tuple>\n      </div>\n      <span v-else class=\"p-4\">{{ locationLabel }}</span>\n    </template>\n    <div v-if=\"locationLabel\" class=\"w-min flex gap-4 my-4\">\n      <Tuple label=\"Latitude\" class=\"w-auto\">{{ latStr }}</Tuple>\n      <Tuple label=\"Longitude\" class=\"w-auto\">{{ lngStr }}</Tuple>\n    </div>\n    <Button\n      v-if=\"hasLocation\"\n      icon=\"map\"\n      iconPosition=\"start\"\n      @click=\"isOpen = true\"\n      >Show Location</Button\n    >\n  </Accordion>\n\n  <Modal :isOpen=\"isOpen\" :label=\"locationLabel\" @close=\"isOpen = false\">\n    <Map\n      :center=\"mapCenter\"\n      :zoom=\"10\"\n      mapStyle=\"streets\"\n      :apiKey=\"config.arcgis.apiKey\"\n      class=\"bg-neutral-100 p-1 rounded\"\n    >\n      <MapMarker :lng=\"mapCenter.lng\" :lat=\"mapCenter.lat\" />\n    </Map>\n    <div class=\"w-min flex gap-4 my-4\">\n      <Tuple label=\"Latitude\" class=\"w-auto\">{{ latStr }}</Tuple>\n      <Tuple label=\"Longitude\" class=\"w-auto\">{{ lngStr }}</Tuple>\n    </div>\n  </Modal>\n</template>\n\n<script setup lang=\"ts\">\nimport { LocationWidgetProps, LocationWidgetContent, LngLat } from \"@/types\";\nimport { computed, ref, defineAsyncComponent } from \"vue\";\nimport Modal from \"@/components/Modal/Modal.vue\";\nimport config from \"@/config\";\nimport Tuple from \"@/components/Tuple/Tuple.vue\";\nimport Button from \"@/components/Button/Button.vue\";\nimport Accordion from \"@/components/Accordion/Accordion.vue\";\n\nconst Map = defineAsyncComponent(() => import(\"@/components/Map/Map.vue\"));\nconst MapMarker = defineAsyncComponent(\n  () => import(\"@/components/MapMarker/MapMarker.vue\")\n);\n\ninterface Props {\n  locationContent: LocationWidgetContent;\n  widget: LocationWidgetProps;\n}\n\nconst props = defineProps<Props>();\n\nconst lat = computed((): number => {\n  return props.locationContent.loc?.coordinates?.[1] ?? 0;\n});\n\nconst lng = computed((): number => {\n  return props.locationContent.loc?.coordinates?.[0] ?? 0;\n});\n\nconst lngStr = computed((): string => (lng.value ? lng.value.toFixed(4) : \"-\"));\nconst latStr = computed((): string => (lat.value ? lat.value.toFixed(4) : \"-\"));\n\nconst mapCenter = computed(\n  () =>\n    ({\n      lng: lng.value,\n      lat: lat.value,\n    } as LngLat)\n);\n\nconst locationLabel = computed(\n  () =>\n    (props.locationContent.locationLabel || props.locationContent.address) ??\n    null\n);\n\nconst hasLocation = computed(() => {\n  return lng.value !== 0 && lat.value !== 0;\n});\n\nconst isOpen = ref(false);\n</script>\n","<!-- todo need to fix all the hover state stuff, decide if that matters-->\n<template>\n  <div class=\"upload-widget flex gap-2 flex-wrap\">\n    <button\n      v-for=\"(content, key) in contents\"\n      :key=\"key\"\n      @click=\"assetStore.activeFileObjectId = content.fileId\"\n    >\n      <ThumbnailImage\n        :src=\"`${config.instance.base.url}/fileManager/tinyImageByFileId/${content.fileId}/true`\"\n        :alt=\"content.fileDescription\"\n        :isActive=\"isFileActive(content.fileId)\"\n        iconOnHover=\"arrow_forward\"\n      />\n    </button>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { UploadWidgetProps, UploadWidgetContent } from \"@/types\";\nimport config from \"@/config\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport ThumbnailImage from \"@/components/ThumbnailImage/ThumbnailImage.vue\";\n\ndefineProps<{\n  widget: UploadWidgetProps;\n  contents: UploadWidgetContent[];\n}>();\n\nconst assetStore = useAssetStore();\n\nconst isFileActive = (fileId: string) =>\n  assetStore.activeFileObjectId === fileId;\n</script>\n","import { RelatedAssetCacheItem } from \"@/types\";\n\nexport function getTitleFromCacheItem(\n  relatedAssetCacheItem: RelatedAssetCacheItem | null\n): string {\n  return relatedAssetCacheItem?.relatedAssetTitle?.[0] ?? \"(No Title)\";\n}\n","<template>\n  <div class=\"accordion-related-asset-widget-item w-full max-w-lg\">\n    <Accordion :label=\"title\">\n      <template v-if=\"assetCache?.primaryHandler\" #label>\n        <div\n          v-if=\"assetCache?.primaryHandler\"\n          class=\"flex items-center flex-1 w-full gap-4 py-2 pl-2 pr-4\"\n        >\n          <img\n            v-if=\"assetCache.primaryHandler\"\n            :src=\"getTinyURL(assetCache.primaryHandler)\"\n            :alt=\"title\"\n            class=\"aspect-square h-10 overflow-hidden rounded\"\n            loading=\"lazy\"\n          />\n          <h3>{{ title }}</h3>\n        </div>\n      </template>\n      <WidgetList :assetId=\"assetId\" />\n      <slot />\n    </Accordion>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport Accordion from \"@/components/Accordion/Accordion.vue\";\nimport WidgetList from \"@/components/WidgetList/WidgetList.vue\";\nimport { RelatedAssetCacheItem } from \"@/types\";\nimport { getTitleFromCacheItem } from \"./getTitleFromCacheItem\";\nimport { getTinyURL } from \"@/helpers/displayUtils\";\n\nconst props = defineProps<{\n  assetId: string;\n  assetCache: RelatedAssetCacheItem | null;\n}>();\n\nconst title = computed(() => getTitleFromCacheItem(props.assetCache));\n</script>\n<style scoped></style>\n","import { Asset, Template } from \"@/types\";\nimport { Ref, ref, watch, computed } from \"vue\";\nimport api from \"../api\";\nimport { getAssetTitle } from \"./displayUtils\";\n\nexport function useAsset(assetIdRef: Ref<string | null>) {\n  const assetRef = ref<Asset | null>(null);\n  const templateRef = ref<Template | null>(null);\n  const title = computed((): string =>\n    assetRef.value ? getAssetTitle(assetRef.value) : \"\"\n  );\n\n  async function onAssetIdChange() {\n    const { asset, template } = await api.getAssetWithTemplate(\n      assetIdRef.value\n    );\n    assetRef.value = asset;\n    templateRef.value = template;\n  }\n\n  watch(assetIdRef, onAssetIdChange, { immediate: true });\n\n  return { asset: assetRef, template: templateRef, title };\n}\n","<template>\n  <section\n    v-if=\"asset\"\n    class=\"collapsed-inline-related-asset-widget-item flex flex-col\"\n  >\n    <h3>{{ title }}</h3>\n    <WidgetList :assetId=\"assetId\" />\n  </section>\n</template>\n<script setup lang=\"ts\">\nimport WidgetList from \"@/components/WidgetList/WidgetList.vue\";\nimport { computed } from \"vue\";\nimport type { RelatedAssetCacheItem } from \"@/types\";\nimport { getTitleFromCacheItem } from \"./getTitleFromCacheItem\";\nimport { useAsset } from \"@/helpers/useAsset\";\n\nconst props = defineProps<{\n  assetId: string;\n  assetCache: RelatedAssetCacheItem | null;\n}>();\n\nconst title = computed(() => getTitleFromCacheItem(props.assetCache));\nconst assetIdRef = computed(() => props.assetId);\nconst { asset } = useAsset(assetIdRef);\n</script>\n<style scoped>\n.collapsed-inline-related-asset-widget-item {\n  gap: var(--app-panel-body-items-gap);\n}\n</style>\n","<template>\n  <RouterLink\n    :title=\"title\"\n    class=\"thumbnail-related-asset-widget-image inline-flex\"\n    :to=\"`#${assetId}`\"\n  >\n    <ThumbnailImage\n      v-if=\"assetCache.primaryHandler\"\n      :src=\"getTinyURL(assetCache.primaryHandler)\"\n      :alt=\"title\"\n      :isActive=\"isActiveObject\"\n      iconOnHover=\"arrow_forward\"\n    />\n    <ThumbnailGeneric v-else :isActive=\"isActiveObject\">\n      {{ title }}\n    </ThumbnailGeneric>\n  </RouterLink>\n</template>\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport { getTinyURL } from \"@/helpers/displayUtils\";\nimport type { RelatedAssetCacheItem } from \"@/types\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport { getTitleFromCacheItem } from \"./getTitleFromCacheItem\";\nimport ThumbnailImage from \"@/components/ThumbnailImage/ThumbnailImage.vue\";\nimport ThumbnailGeneric from \"@/components/ThumbnailGeneric/ThumbnailGeneric.vue\";\n\nconst props = defineProps<{\n  assetId: string;\n  assetCache: RelatedAssetCacheItem;\n}>();\n\nconst assetStore = useAssetStore();\n\nconst title = computed((): string => getTitleFromCacheItem(props.assetCache));\n\nconst isActiveObject = computed(\n  (): boolean => assetStore.activeObjectId === props.assetId\n);\n</script>\n<style scoped>\n.thumbnail-related-asset-widget-image {\n  background: var(--app-thumbnailImage-backgroundColor);\n  color: var(--app-thumbnailImage-textColor);\n}\n</style>\n","<template>\n  <div class=\"linked-related-asset-widget-item\">\n    <Link :to=\"assetUrl\">{{ title }}</Link>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport type { RelatedAssetCacheItem } from \"@/types\";\nimport { getTitleFromCacheItem } from \"./getTitleFromCacheItem\";\nimport { getAssetUrl } from \"@/helpers/displayUtils\";\nimport Link from \"@/components/Link/Link.vue\";\n\nconst props = defineProps<{\n  assetId: string;\n  assetCache: RelatedAssetCacheItem | null;\n}>();\n\nconst title = computed((): string => getTitleFromCacheItem(props.assetCache));\nconst assetUrl = computed((): string => getAssetUrl(props.assetId));\n</script>\n<style scoped></style>\n","<template>\n  <div class=\"related-asset-widget gap-2 flex flex-wrap w-full\">\n    <component\n      :is=\"widgetType\"\n      v-for=\"relatedAsset in contentsWithAssetId\"\n      :key=\"relatedAsset.targetAssetId\"\n      :assetId=\"relatedAsset.targetAssetId\"\n      :assetCache=\"asset.relatedAssetCache?.[relatedAsset.targetAssetId]\"\n      :label=\"relatedAsset.label ?? ''\"\n    >\n      <div class=\"flex items-center justify-end gap-2\">\n        <ArrowButton :to=\"`/asset/viewAsset/${relatedAsset.targetAssetId}`\" />\n      </div>\n    </component>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { type Component, computed } from \"vue\";\nimport {\n  Asset,\n  RelatedAssetWidgetProps,\n  RelatedAssetWidgetContent,\n} from \"@/types\";\nimport AccordionRelatedAssetWidgetItem from \"./AccordionRelatedAssetWidgetItem.vue\";\nimport CollapsedInlineRelatedAssetWidgetItem from \"./CollapsedInlineRelatedAssetWidgetItem.vue\";\nimport ThumbnailRelatedAssetWidgetItem from \"./ThumbnailRelatedAssetWidgetItem.vue\";\nimport LinkedRelatedAssetWidgetItem from \"./LinkedRelatedAssetWidgetItem.vue\";\nimport ArrowButton from \"@/components/ArrowButton/ArrowButton.vue\";\n\nconst props = defineProps<{\n  widget: RelatedAssetWidgetProps;\n  contents: RelatedAssetWidgetContent[];\n  asset: Asset;\n}>();\n\ntype WithTargetAssetId<T> = T & { targetAssetId: string };\n\nconst widgetType = computed((): Component => {\n  if (props.widget.fieldData.collapseNestedChildren) {\n    return CollapsedInlineRelatedAssetWidgetItem;\n  }\n\n  if (props.widget.fieldData.thumbnailView) {\n    return ThumbnailRelatedAssetWidgetItem;\n  }\n\n  if (!props.widget.fieldData.nestData) {\n    return LinkedRelatedAssetWidgetItem;\n  }\n\n  return AccordionRelatedAssetWidgetItem;\n});\n\nconst contentsWithAssetId = computed(() =>\n  props.contents.filter(\n    (item): item is WithTargetAssetId<RelatedAssetWidgetContent> =>\n      !!item.targetAssetId\n  )\n);\n</script>\n<style scoped></style>\n","<template>\n  <Tuple :label=\"widget.label\">\n    <component\n      :is=\"getWidgetComponentByType(widget.type)\"\n      v-if=\"getWidgetComponentByType(widget.type)\"\n      :widget=\"widget\"\n      :contents=\"widgetContents\"\n      :asset=\"asset\"\n    >\n    </component>\n  </Tuple>\n</template>\n<script setup lang=\"ts\">\nimport { type Component, computed } from \"vue\";\nimport type { Asset, WidgetProps } from \"@/types\";\nimport { WidgetType } from \"@/types\";\nimport Tuple from \"@/components/Tuple/Tuple.vue\";\nimport TextWidget from \"@/components/Widget/TextWidget/TextWidget.vue\";\nimport SelectWidget from \"@/components/Widget/SelectWidget/SelectWidget.vue\";\nimport CheckBoxWidget from \"@/components/Widget/CheckBoxWidget/CheckBoxWidget.vue\";\nimport TextAreaWidget from \"@/components/Widget/TextAreaWidget/TextAreaWidget.vue\";\nimport DateWidget from \"@/components/Widget/DateWidget/DateWidget.vue\";\nimport MultiSelectWidget from \"@/components/Widget/MultiSelectWidget/MultiSelectWidget.vue\";\nimport LocationWidget from \"@/components/Widget/LocationWidget/LocationWidget.vue\";\nimport UploadWidget from \"@/components/Widget/UploadWidget/UploadWidget.vue\";\nimport TagWidget from \"@/components/Widget/TagWidget/TagWidget.vue\";\nimport RelatedAssetWidget from \"@/components/Widget/RelatedAssetWidget/RelatedAssetWidget.vue\";\nimport { getWidgetContents } from \"@/helpers/displayUtils\";\n\nconst props = defineProps<{\n  widget: WidgetProps;\n  asset: Asset;\n}>();\n\nconst widgetContents = computed(() =>\n  getWidgetContents({ asset: props.asset, widget: props.widget })\n);\n\n// map widgetTypeToComponent\nconst widgetMap: Record<WidgetType, Component> = {\n  text: TextWidget,\n  select: SelectWidget,\n  checkbox: CheckBoxWidget,\n  \"text area\": TextAreaWidget,\n  date: DateWidget,\n  multiselect: MultiSelectWidget,\n  location: LocationWidget,\n  upload: UploadWidget,\n  \"tag list\": TagWidget,\n  \"related asset\": RelatedAssetWidget,\n};\n\nfunction getWidgetComponentByType(type: string) {\n  return widgetMap[type] || null;\n}\n</script>\n<style scoped></style>\n","<template>\n  <Transition name=\"fade\">\n    <div v-if=\"asset && template\" class=\"widget-list flex flex-col\">\n      <Widget\n        v-for=\"widget in widgets\"\n        :key=\"widget.widgetId\"\n        :widget=\"widget\"\n        :asset=\"asset\"\n      />\n    </div>\n  </Transition>\n</template>\n<script setup lang=\"ts\">\n/**\n * lists all the asset's widget as defined by the asset\n * template\n */\nimport { computed } from \"vue\";\nimport { getWidgetsForDisplay } from \"@/helpers/displayUtils\";\n\nimport Widget from \"@/components/Widget/Widget.vue\";\nimport { useAsset } from \"@/helpers/useAsset\";\n\nconst props = defineProps<{\n  assetId: string;\n}>();\n\nconst assetIdRef = computed(() => props.assetId);\nconst { asset, template } = useAsset(assetIdRef);\nconst widgets = computed(() =>\n  getWidgetsForDisplay({ asset: asset.value, template: template.value })\n);\n</script>\n<style scoped>\n.widget-list {\n  gap: var(--app-widgetList-gap);\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: all 0.5s ease;\n}\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n","<template>\n  <button class=\"p-2 flex items-center\">\n    <slot />\n  </button>\n</template>\n<script setup lang=\"ts\"></script>\n<style scoped></style>\n","<template>\n  <ActiveFileViewButton @click=\"handleInfoButtonClick\">\n    <InfoIcon />\n  </ActiveFileViewButton>\n  <Modal\n    label=\"File Info\"\n    :isOpen=\"isFileInfoOpen\"\n    class=\"max-w-4xl m-auto\"\n    @close=\"isFileInfoOpen = false\"\n  >\n    <div v-if=\"!isFileMetaDataReady\">\n      <Skeleton v-for=\"index in 10\" :key=\"index\" />\n    </div>\n\n    <div v-if=\"isFileMetaDataReady\">\n      <span v-if=\"!fileMetaData\">No meta data found.</span>\n\n      <section v-if=\"fileMetaData?.exif\" class=\"flex flex-col gap-6\">\n        <Tuple label=\"File Type\">\n          {{ fileMetaData.exif.File.FileType }}\n        </Tuple>\n        <Tuple label=\"Original Name\">\n          {{ fileMetaData.sourcefile }}\n        </Tuple>\n        <Tuple label=\"File Size\">\n          {{ fileMetaData.exif.File.FileSize }}\n        </Tuple>\n        <Tuple label=\"Image Size\">\n          {{ fileMetaData.width }}x{{ fileMetaData.height }}\n        </Tuple>\n        <Tuple v-if=\"fileMetaData.coordinates\" label=\"Location\">\n          <div class=\"bg-neutral-200 p-4 rounded-xl\">\n            <Map\n              :center=\"{\n                lng: fileMetaData.coordinates[0],\n                lat: fileMetaData.coordinates[1],\n              }\"\n              :zoom=\"10\"\n              mapStyle=\"streets\"\n              :apiKey=\"config.arcgis.apiKey\"\n              class=\"\"\n            >\n              <MapMarker\n                :lng=\"fileMetaData.coordinates[0]\"\n                :lat=\"fileMetaData.coordinates[1]\"\n              />\n            </Map>\n          </div>\n        </Tuple>\n\n        <h2 class=\"text-xl font-bold mt-6 border-t pt-6\">EXIF Details</h2>\n        <Accordion\n          v-for=\"(exifSectionProps, exifSectionLabel) in fileMetaData.exif\"\n          :key=\"exifSectionLabel\"\n          :label=\"exifSectionLabel\"\n          class=\"border mt-6\"\n        >\n          <Tuple\n            v-for=\"(value, key) in exifSectionProps\"\n            :key=\"key\"\n            :label=\"key\"\n          >\n            {{ value }}\n          </Tuple>\n        </Accordion>\n      </section>\n      <section v-else>\n        <div v-for=\"(value, key) in fileMetaData\" :key=\"key\" class=\"my-6\">\n          <Tuple :label=\"key\">\n            {{ value }}\n          </Tuple>\n        </div>\n      </section>\n    </div>\n  </Modal>\n</template>\n<script setup lang=\"ts\">\nimport { ref, defineAsyncComponent } from \"vue\";\nimport ActiveFileViewButton from \"./ActiveFileViewButton.vue\";\nimport Modal from \"../Modal/Modal.vue\";\nimport { FileMetaData } from \"@/types/FileMetaDataTypes\";\nimport api from \"@/api\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport Skeleton from \"../Skeleton/Skeleton.vue\";\nimport { computed } from \"vue\";\nimport Tuple from \"../Tuple/Tuple.vue\";\nimport Accordion from \"../Accordion/Accordion.vue\";\nimport config from \"@/config\";\nimport InfoIcon from \"@/icons/InfoIcon.vue\";\n\nconst Map = defineAsyncComponent(() => import(\"@/components/Map/Map.vue\"));\nconst MapMarker = defineAsyncComponent(\n  () => import(\"@/components/MapMarker/MapMarker.vue\")\n);\n\nconst isFileInfoOpen = ref(false);\nconst fileMetaData = ref<FileMetaData | null | undefined>(undefined);\nconst isFileMetaDataReady = computed(() => fileMetaData.value !== undefined);\n\nconst assetStore = useAssetStore();\n\nasync function handleInfoButtonClick() {\n  isFileInfoOpen.value = !isFileInfoOpen.value;\n  fileMetaData.value = undefined;\n  fileMetaData.value = await api.getFileMetaData(assetStore.activeFileObjectId);\n}\n</script>\n<style scoped></style>\n","<template>\n  <ActiveFileViewButton @click=\"handleDownloadFileClick\">\n    <DownloadIcon />\n  </ActiveFileViewButton>\n  <Modal\n    label=\"File Downloads\"\n    :isOpen=\"isOpen\"\n    class=\"max-w-sm\"\n    @close=\"isOpen = false\"\n  >\n    <div v-if=\"isDownloadFileInfoReady\">\n      <span v-if=\"!downloadFileInfo\">No Downloads available</span>\n      <ul v-else class=\"max-w-sm\">\n        <template v-for=\"download in downloadFileInfo\" :key=\"download.filetype\">\n          <a\n            v-if=\"download.isReady || download.filetype === 'original'\"\n            :href=\"download.url\"\n            class=\"py-2 hover:bg-transparent-black-50 border-t last:border-b block hover:no-underline group\"\n          >\n            <li class=\"flex justify-between\">\n              <span class=\"group-hover:underline\">{{ download.filetype }}</span>\n              <Chip class=\"group-hover:bg-blue-100 group-hover:text-blue-600\">\n                {{ download.extension }}\n              </Chip>\n            </li>\n          </a>\n        </template>\n      </ul>\n    </div>\n  </Modal>\n</template>\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\";\nimport ActiveFileViewButton from \"./ActiveFileViewButton.vue\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport { FileDownloadNormalized } from \"@/types\";\nimport DownloadIcon from \"@/icons/DownloadIcon.vue\";\nimport api from \"@/api\";\nimport Modal from \"@/components/Modal/Modal.vue\";\nimport Chip from \"@/components/Chip/Chip.vue\";\nimport { getColorClassesForString } from \"@/helpers/getColorClassesForString\";\n\nconst assetStore = useAssetStore();\nconst isOpen = ref(false);\nconst downloadFileInfo = ref<FileDownloadNormalized[] | null | undefined>(\n  undefined\n);\nconst isDownloadFileInfoReady = computed(\n  () => downloadFileInfo.value !== undefined\n);\n\nasync function handleDownloadFileClick() {\n  isOpen.value = true;\n  downloadFileInfo.value = undefined; // undef means we're fetching\n  downloadFileInfo.value = await api.getFileDownloadInfo(\n    assetStore.activeFileObjectId,\n    assetStore.activeAssetId\n  );\n}\n</script>\n<style scoped></style>\n","<template>\n  <TextArea :label=\"label\" :value=\"value\" :placeholder=\"placeholder\">\n    <template #corner>\n      <Button\n        :icon=\"copied ? 'check' : 'content_copy'\"\n        variant=\"tertiary\"\n        @click=\"copy()\"\n      >\n        <!-- eslint-disable-next-line vue/no-textarea-mustache-->\n        {{ copied ? \"Copied\" : \"Copy\" }}\n      </Button>\n    </template>\n  </TextArea>\n</template>\n<script setup lang=\"ts\">\nimport { toRef } from \"vue\";\nimport { useClipboard } from \"@vueuse/core\";\nimport TextArea from \"../TextArea/TextArea.vue\";\nimport Button from \"../Button/Button.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    label: string;\n    value: string;\n    placeholder?: string;\n  }>(),\n  {\n    placeholder: \"\",\n  }\n);\n\nconst valueRef = toRef(props, \"value\");\n\nconst { copy, copied } = useClipboard({\n  source: valueRef,\n  copiedDuring: 3000,\n});\n</script>\n<style scoped></style>\n","<template>\n  <ActiveFileViewButton @click=\"isOpen = !isOpen\">\n    <ShareIcon />\n  </ActiveFileViewButton>\n  <Modal\n    label=\"Share\"\n    :isOpen=\"isOpen\"\n    class=\"max-w-xl mx-auto\"\n    @close=\"isOpen = false\"\n  >\n    <div class=\"flex flex-col gap-4\">\n      <CopyableTextArea label=\"Embed\" :value=\"embedValue\" />\n      <CopyableTextArea label=\"Link\" :value=\"linkValue\" />\n      <Button\n        icon=\"open_in_new\"\n        label=\"Open in New Window\"\n        :href=\"linkValue\"\n        target=\"_blank\"\n        >Open Viewer in New Window</Button\n      >\n    </div>\n  </Modal>\n</template>\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport ActiveFileViewButton from \"./ActiveFileViewButton.vue\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport config from \"@/config\";\nimport Modal from \"../Modal/Modal.vue\";\nimport CopyableTextArea from \"../CopyableTextArea/CopyableTextArea.vue\";\nimport Button from \"../Button/Button.vue\";\nimport ShareIcon from \"@/icons/ShareIcon.vue\";\n\nconst assetStore = useAssetStore();\nconst removeExtraWhitespace = (str: string) => str.replace(/\\s+/g, \" \").trim();\n\nconst isOpen = ref(false);\nconst linkValue = computed(\n  () =>\n    `${config.instance.base.url}/asset/getEmbed/${assetStore.activeFileObjectId}/null/true`\n);\n\nconst embedValue = computed(() => {\n  return removeExtraWhitespace(`\n  <iframe width=\"560\" height=\"480\" src=\"${linkValue.value}\" frameborder=\"0\" allowfullscreen></iframe>`);\n});\n</script>\n<style scoped></style>\n","<template>\n  <div class=\"object-details\">\n    <div v-if=\"!objectId\" class=\"h-full flex justify-end\">\n      <ActiveFileViewToolbar />\n    </div>\n    <Drawer\n      v-else\n      label=\"Details\"\n      variant=\"secondary\"\n      :isOpen=\"isOpen\"\n      :showToggle=\"showToggle\"\n      class=\"h-full\"\n      @toggle=\"$emit('toggle')\"\n    >\n      <template #header-utils>\n        <ActiveFileViewToolbar />\n      </template>\n\n      <WidgetList v-if=\"objectId\" :assetId=\"objectId\" />\n\n      <footer v-if=\"objectId\" class=\"flex gap-2\">\n        <ArrowButton v-if=\"assetUrl\" :to=\"assetUrl\" />\n      </footer>\n    </Drawer>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\nimport Drawer from \"@/components/Drawer/Drawer.vue\";\nimport WidgetList from \"@/components/WidgetList/WidgetList.vue\";\nimport { getAssetUrl } from \"@/helpers/displayUtils\";\nimport ActiveFileViewToolbar from \"@/components/ActiveFileViewToolbar/ActiveFileViewToolbar.vue\";\nimport ArrowButton from \"../ArrowButton/ArrowButton.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    objectId: string | null;\n    isOpen: boolean;\n    showToggle?: boolean;\n  }>(),\n  {\n    isOpen: false,\n    showToggle: true,\n  }\n);\n\ndefineEmits<{\n  (eventName: \"toggle\");\n}>();\n\nconst assetUrl = computed(() =>\n  props.objectId ? getAssetUrl(props.objectId) : null\n);\n</script>\n\n<style scoped></style>\n","<template>\n  <span\n    class=\"more-like-this__count inline-flex items-center px-2 py-1 text-xs font-bold rounded-full\"\n  >\n    <slot />\n  </span>\n</template>\n<script setup lang=\"ts\"></script>\n<style scoped>\n.more-like-this__count {\n  background-color: var(--app-mediaCard-backgroundColor);\n  border: var(--app-mediaCard-borderWidth) solid\n    var(--app-mediaCard-borderColor);\n  color: var(--app-mediaCard-title-textColor);\n}\n</style>\n","<template>\n  <section v-if=\"items.length\" class=\"more-like-this\">\n    <div v-if=\"inlineResultsList.length\" class=\"pt-6 mt-6\">\n      <h3\n        class=\"more-like-this__title flex flex-wrap items-center gap-2 mb-4 text-xl font-bold\"\n      >\n        <span>More Like This</span>\n        <CountChip>{{ items.length }}</CountChip>\n      </h3>\n\n      <div class=\"flex flex-col gap-2\">\n        <SearchResultCard\n          v-for=\"searchMatch in inlineResultsList\"\n          :key=\"searchMatch.objectId\"\n          :searchMatch=\"searchMatch\"\n        />\n      </div>\n    </div>\n    <ButtonWithCount\n      v-if=\"numOfSeeMoreResults\"\n      :count=\"numOfSeeMoreResults\"\n      class=\"my-4\"\n      @click=\"isShowingFullListOfResults = true\"\n    >\n      {{\n        config.moreLikeThis.maxInlineResults ? \"Show More\" : \"More Like This\"\n      }}\n    </ButtonWithCount>\n\n    <Modal\n      label=\"More Like This\"\n      :isOpen=\"isShowingFullListOfResults\"\n      @close=\"isShowingFullListOfResults = false\"\n    >\n      <template #label>\n        <span>More Like This</span>\n        <CountChip class=\"ml-2\">{{ items.length }}</CountChip>\n      </template>\n      <div class=\"grid grid-cols-3 gap-2\">\n        <SearchResultCard\n          v-for=\"searchMatch in items\"\n          :key=\"searchMatch.objectId\"\n          :searchMatch=\"searchMatch\"\n        />\n      </div>\n    </Modal>\n  </section>\n</template>\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport { SearchResultMatch } from \"@/types\";\nimport SearchResultCard from \"../SearchResultCard/SearchResultCard.vue\";\nimport config from \"@/config\";\nimport Modal from \"../Modal/Modal.vue\";\nimport ButtonWithCount from \"./ButtonWithCount.vue\";\nimport CountChip from \"./CountChip.vue\";\n\nconst props = defineProps<{\n  items: SearchResultMatch[];\n}>();\n\nconst inlineResultsList = computed(() => {\n  return props.items.slice(0, config.moreLikeThis.maxInlineResults);\n});\n\nconst numOfSeeMoreResults = computed(() => {\n  return props.items.length - inlineResultsList.value.length;\n});\n\nconst isShowingFullListOfResults = ref(false);\n</script>\n<style scoped>\n.more-like-this__title {\n  color: var(--app-mediaCard-title-textColor);\n}\n</style>\n","<template>\n  <div class=\"asset-details\">\n    <Drawer\n      :label=\"assetTitle\"\n      :isOpen=\"isOpen\"\n      :showToggle=\"showToggle\"\n      class=\"h-full py-4 md:py-0\"\n      @toggle=\"$emit('toggle')\"\n    >\n      <template #header-label>\n        <DrawerLabel\n          :label=\"assetTitle || '(No Title)'\"\n          :class=\"{\n            'text-2xl': isOpen,\n          }\"\n        />\n      </template>\n      <WidgetList v-if=\"assetId\" :assetId=\"assetId\" class=\"py-4 md:py-0\" />\n      <MoreLikeThis v-if=\"assetId\" :items=\"moreLikeThisItems\" />\n    </Drawer>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed, ref, watch } from \"vue\";\nimport Drawer from \"@/components/Drawer/Drawer.vue\";\nimport WidgetList from \"@/components/WidgetList/WidgetList.vue\";\nimport { getAssetTitle } from \"@/helpers/displayUtils\";\nimport { useAsset } from \"@/helpers/useAsset\";\nimport MoreLikeThis from \"../MoreLikeThis/MoreLikeThis.vue\";\nimport DrawerLabel from \"../Drawer/DrawerLabel.vue\";\nimport api from \"@/api\";\nimport { SearchResultMatch } from \"@/types\";\n\nconst props = withDefaults(\n  defineProps<{\n    assetId: string | null;\n    isOpen?: boolean;\n    showToggle?: boolean;\n  }>(),\n  {\n    isOpen: true,\n    showToggle: true,\n  }\n);\n\ndefineEmits<{\n  (eventName: \"toggle\");\n}>();\n\nconst assetIdRef = computed(() => props.assetId);\nconst { asset } = useAsset(assetIdRef);\nconst moreLikeThisItems = ref<SearchResultMatch[]>([]);\n\nwatch(\n  assetIdRef,\n  async () => {\n    moreLikeThisItems.value = await api.getMoreLikeThis(assetIdRef.value);\n  },\n  { immediate: true }\n);\n\nconst assetTitle = computed(() =>\n  asset.value ? getAssetTitle(asset.value) : \"\"\n);\n</script>\n<style scoped></style>\n","<template>\n  <div class=\"asset-view h-full relative\">\n    <ObjectViewer\n      class=\"asset-view__object-viewer h-[75vh] md:h-auto md:absolute md:top-0 border-t-0 border-b-asset-view\"\n      :class=\"{\n        'md:top-0 md:bottom-1/2 md:left-sm md:right-0 border-l-asset-view':\n          isAssetDetailsOpen && isObjectDetailsOpen, // both open\n        'md:top-0 md:bottom-16 md:left-sm md:right-0 border-l-asset-view':\n          isAssetDetailsOpen && !isObjectDetailsOpen, // just asset details\n\n        'md:top-0 md:bottom-16 md:left-0 md:right-sm border-r-asset-view':\n          !isAssetDetailsOpen && isObjectDetailsOpen, // just object details\n        'md:top-0 md:bottom-16 md:left-0 md:right-0':\n          !isAssetDetailsOpen && !isObjectDetailsOpen, // neither open\n      }\"\n      :fileHandlerId=\"assetStore.activeFileObjectId\"\n    />\n    <AssetDetailsDrawer\n      class=\"asset-view__asset-panel md:absolute\"\n      :class=\"{\n        'asset-view__asset-panel--open': isAssetDetailsOpen,\n        'md:bottom-0 md:left-0 md:top-0 md:w-sm': isAssetDetailsOpen, // both open + asset details open\n        'md:bottom-0 md:left-0 md:h-16 md:right-sm border-r-asset-view':\n          !isAssetDetailsOpen && isObjectDetailsOpen, // just obj panel\n        'md:bottom-0 md:left-0 md:h-16 md:w-1/2':\n          !isAssetDetailsOpen && !isObjectDetailsOpen, //neither open\n      }\"\n      :showToggle=\"permitDrawerToggle\"\n      :assetId=\"assetStore.activeAssetId\"\n      :isOpen=\"permitDrawerToggle ? isAssetDetailsOpen : true\"\n      @toggle=\"isAssetDetailsOpen = !isAssetDetailsOpen\"\n    />\n    <ObjectDetailsDrawer\n      class=\"asset-view__details-panel md:absolute\"\n      :class=\"{\n        'asset-view__details-panel--open': isObjectDetailsOpen,\n        'border-l-asset-view': !isObjectDetailsOpen,\n        'md:bottom-0 md:right-0 md:h-16 md:left-sm':\n          !isObjectDetailsOpen && isAssetDetailsOpen, // just asset open\n        'md:bottom-0 md:right-0 md:h-1/2 md:left-sm border-l-asset-view':\n          isObjectDetailsOpen && isAssetDetailsOpen, // both panels open\n        'md:bottom-0 md:right-0 md:top-0 md:w-sm':\n          isObjectDetailsOpen && !isAssetDetailsOpen, // just object open\n        'md:bottom-0 md:right-0 md:h-16 md:w-1/2':\n          !isObjectDetailsOpen && !isAssetDetailsOpen, // neither panels open\n      }\"\n      :showToggle=\"permitDrawerToggle\"\n      :objectId=\"assetStore.activeObjectId\"\n      :isOpen=\"permitDrawerToggle ? isObjectDetailsOpen : true\"\n      @toggle=\"isObjectDetailsOpen = !isObjectDetailsOpen\"\n    />\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport ObjectViewer from \"@/components/ObjectViewer/ObjectViewer.vue\";\nimport ObjectDetailsDrawer from \"@/components/ObjectDetailsDrawer/ObjectDetailsDrawer.vue\";\nimport AssetDetailsDrawer from \"@/components/AssetDetailsDrawer/AssetDetailsDrawer.vue\";\nimport { useMediaQuery } from \"@vueuse/core\";\n\ndefineProps<{\n  assetId: string | null;\n  objectId?: string | null;\n}>();\n\nconst isAssetDetailsOpen = ref(true);\nconst isObjectDetailsOpen = ref(false);\nconst assetStore = useAssetStore();\n\nconst permitDrawerToggle = useMediaQuery(\"(min-width: 768px)\");\n</script>\n<style scoped lang=\"postcss\">\n@media (min-width: 48rem) {\n  .border-r-asset-view {\n    border-right: var(--app-panel-borderWidth) solid\n      var(--app-panel-borderColor);\n  }\n  .border-l-asset-view {\n    border-left: var(--app-panel-borderWidth) solid var(--app-panel-borderColor);\n  }\n  .border-x-asset-view {\n    @apply border-r-asset-view border-l-asset-view;\n  }\n}\n\n.border-b-asset-view {\n  border-bottom: var(--app-panel-borderWidth) solid var(--app-panel-borderColor);\n}\n.border-t-asset-view {\n  border-top: var(--app-panel-borderWidth) solid var(--app-panel-borderColor);\n}\n</style>\n","<template>\n  <div class=\"meta-data-only-view h-full sm:p-8\">\n    <article\n      class=\"meta-data-only-view__article m-auto sm:max-w-3xl h-full overflow-auto p-4 sm:p-12 rounded shadow sm:px-12\"\n    >\n      <h2\n        class=\"text-3xl mb-12 sm:text-5xl font-bold py-8 after:content-[''] after:w-8 after:h-2 after:block relative after:absolute after:bottom-0 after:left-0\"\n      >\n        {{ assetTitle || \"(No Title)\" }}\n      </h2>\n\n      <WidgetList v-if=\"assetId\" :assetId=\"assetId\" />\n      <MoreLikeThis v-if=\"assetId\" :items=\"moreLikeThisItems\" />\n    </article>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { computed, ref, watch } from \"vue\";\nimport { getAssetTitle } from \"@/helpers/displayUtils\";\nimport WidgetList from \"@/components/WidgetList/WidgetList.vue\";\nimport { useAsset } from \"@/helpers/useAsset\";\nimport { SearchResultMatch } from \"@/types\";\nimport MoreLikeThis from \"@/components/MoreLikeThis/MoreLikeThis.vue\";\nimport api from \"@/api\";\n\nconst props = defineProps<{\n  assetId: string | null;\n}>();\n\nconst assetIdRef = computed(() => props.assetId);\nconst { asset } = useAsset(assetIdRef);\nconst assetTitle = computed(() =>\n  asset.value ? getAssetTitle(asset.value) : \"Unknown\"\n);\nconst moreLikeThisItems = ref<SearchResultMatch[]>([]);\n\nwatch(\n  assetIdRef,\n  async () => {\n    moreLikeThisItems.value = await api.getMoreLikeThis(assetIdRef.value);\n  },\n  { immediate: true }\n);\n</script>\n<style scoped>\n.meta-data-only-view {\n  background: var(--app-metaDataOnlyView-backgroundColor);\n}\n.meta-data-only-view__article {\n  background: var(--app-metaDataOnlyView-contentViewer-backgroundColor);\n  color: var(--app-metaDataOnlyView-contentViewer-textColor);\n}\n\n.meta-data-only-view__article h2:after {\n  background: var(--app-metaDataOnlyView-contentViewer-textColor);\n}\n</style>\n","function isSpace(character) {\n    return character == \" \" || character == \"\\n\" || character == \"\\r\" || character == \"\\t\";\n}\nfunction isQuote(character) {\n    return character == '\"' || character == \"'\";\n}\nconst TAG_START = \"<\";\nconst TAG_END = \">\";\nconst ENCODED_TAG_START = \"&lt;\";\nconst ENCODED_TAG_END = \"&gt;\";\nclass InPlaintextState {\n    constructor(options) {\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == TAG_START) {\n            transition(new InTagNameState(this.options));\n            return \"\";\n        }\n        else if (character == TAG_END && this.options.encodePlaintextTagDelimiters) {\n            return ENCODED_TAG_END;\n        }\n        return character;\n    }\n}\nclass InTagNameState {\n    constructor(options) {\n        this.options = options;\n        this.nameBuffer = \"\";\n        this.isClosingTag = false;\n    }\n    consume(character, transition) {\n        if (this.nameBuffer.length == 0) {\n            if (isSpace(character)) {\n                transition(new InPlaintextState(this.options));\n                return ((this.options.encodePlaintextTagDelimiters ? ENCODED_TAG_START : \"<\") +\n                    character);\n            }\n            if (character == \"/\") {\n                this.isClosingTag = true;\n                return \"\";\n            }\n        }\n        if (isSpace(character)) {\n            if (this.isNameBufferAnAllowedTag()) {\n                transition(new InTagState(0 /* Allowed */, this.options));\n                return TAG_START + (this.isClosingTag ? \"/\" : \"\") + this.nameBuffer + character;\n            }\n            else {\n                transition(new InTagState(1 /* Disallowed */, this.options));\n                return this.options.tagReplacementText;\n            }\n        }\n        if (character == TAG_START) {\n            this.nameBuffer += ENCODED_TAG_START;\n            return \"\";\n        }\n        if (character == TAG_END) {\n            transition(new InPlaintextState(this.options));\n            if (this.isNameBufferAnAllowedTag()) {\n                return TAG_START + (this.isClosingTag ? \"/\" : \"\") + this.nameBuffer + character;\n            }\n            else {\n                return this.options.tagReplacementText;\n            }\n        }\n        if (character == \"-\" && this.nameBuffer == \"!-\") {\n            transition(new InCommentState(this.options));\n            return \"\";\n        }\n        this.nameBuffer += character;\n        return \"\";\n    }\n    isNameBufferAnAllowedTag() {\n        const tagName = this.nameBuffer.toLowerCase();\n        if (this.options.allowedTags) {\n            return this.options.allowedTags.has(tagName);\n        }\n        else if (this.options.disallowedTags) {\n            return !this.options.disallowedTags.has(tagName);\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass InTagState {\n    constructor(mode, options) {\n        this.mode = mode;\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == TAG_END) {\n            transition(new InPlaintextState(this.options));\n        }\n        else if (isQuote(character)) {\n            transition(new InQuotedStringInTagState(this.mode, character, this.options));\n        }\n        if (this.mode == 1 /* Disallowed */) {\n            return \"\";\n        }\n        if (character == TAG_START) {\n            return ENCODED_TAG_START;\n        }\n        else {\n            return character;\n        }\n    }\n}\nclass InQuotedStringInTagState {\n    constructor(mode, quoteCharacter, options) {\n        this.mode = mode;\n        this.quoteCharacter = quoteCharacter;\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == this.quoteCharacter) {\n            transition(new InTagState(this.mode, this.options));\n        }\n        if (this.mode == 1 /* Disallowed */) {\n            return \"\";\n        }\n        if (character == TAG_START) {\n            return ENCODED_TAG_START;\n        }\n        else if (character == TAG_END) {\n            return ENCODED_TAG_END;\n        }\n        else {\n            return character;\n        }\n    }\n}\nclass InCommentState {\n    constructor(options) {\n        this.options = options;\n        this.consecutiveHyphens = 0;\n    }\n    consume(character, transition) {\n        if (character == \">\" && this.consecutiveHyphens >= 2) {\n            transition(new InPlaintextState(this.options));\n        }\n        else if (character == \"-\") {\n            this.consecutiveHyphens++;\n        }\n        else {\n            this.consecutiveHyphens = 0;\n        }\n        return \"\";\n    }\n}\n\nconst DefaultStateMachineOptions = {\n    tagReplacementText: \"\",\n    encodePlaintextTagDelimiters: true,\n};\nclass StateMachine {\n    constructor(partialOptions = {}) {\n        this.state = new InPlaintextState(Object.assign(Object.assign({}, DefaultStateMachineOptions), partialOptions));\n        this.transitionFunction = ((next) => {\n            this.state = next;\n        }).bind(this);\n    }\n    consume(text) {\n        let outputBuffer = \"\";\n        for (const character of text) {\n            outputBuffer += this.state.consume(character, this.transitionFunction);\n        }\n        return outputBuffer;\n    }\n}\nfunction striptags(text, options = {}) {\n    return new StateMachine(options).consume(text);\n}\n\nexport default striptags;\nexport { DefaultStateMachineOptions, StateMachine, striptags };\n","<template>\n  <NoScrollLayout class=\"overflow-x-hidden\">\n    <template v-if=\"isPageLoaded\">\n      <MetaDataOnlyView\n        v-if=\"isMetaDataOnly\"\n        :assetId=\"assetStore.activeAssetId\"\n      />\n      <AssetView\n        v-else\n        :assetId=\"assetStore.activeAssetId\"\n        :objectId=\"assetStore.activeObjectId\"\n      />\n    </template>\n  </NoScrollLayout>\n</template>\n<script setup lang=\"ts\">\nimport { ref, watch, computed } from \"vue\";\nimport { useAssetStore } from \"@/stores/assetStore\";\nimport { useRoute, onBeforeRouteLeave } from \"vue-router\";\nimport NoScrollLayout from \"@/layouts/NoScrollLayout.vue\";\nimport AssetView from \"./AssetView.vue\";\nimport MetaDataOnlyView from \"./MetaDataOnlyView.vue\";\nimport { getAssetTitle } from \"@/helpers/displayUtils\";\nimport { usePageTitle } from \"@/helpers/usePageTitle\";\nimport { striptags } from \"striptags\";\n\nconst assetStore = useAssetStore();\nconst isMetaDataOnly = computed(() => !assetStore.activeFileObjectId);\nconst isPageLoaded = ref(false);\nconst route = useRoute();\nconst props = withDefaults(\n  defineProps<{\n    assetId: string;\n    objectId?: string | null;\n  }>(),\n  { objectId: null }\n);\n\nconst objectId = computed(\n  () => route.hash?.substring(1) || props.objectId || null\n);\n\nconst pageTitle = usePageTitle();\n\nasync function onAssetIdChange() {\n  // to prevent page format from shifting from MetaDataOnlyPage\n  // to the normal AssetViewPage, we need to track the page status\n  // to begin, whenever the assetId changes, the page is a `loading` state\n  // once the asset is loaded, we can determine if this should be a\n  // `metadata-only-page` or a `asset-with-viewer-page`\n  isPageLoaded.value = false;\n  const asset = await assetStore.setActiveAsset(props.assetId, objectId.value);\n\n  // if there's no asset we're done\n  if (!asset) {\n    pageTitle.value = \"Asset not found\";\n    isPageLoaded.value = true;\n    return;\n  }\n\n  // if there's an asset, set the page title\n  const assetTitle = getAssetTitle(asset);\n  pageTitle.value = striptags(assetTitle);\n  isPageLoaded.value = true;\n}\n\nwatch([() => props.assetId, () => route.params?.assetId], onAssetIdChange, {\n  immediate: true,\n});\n\nwatch([() => props.objectId, () => route.hash], async () => {\n  await assetStore.setActiveObject(objectId.value);\n});\n\nonBeforeRouteLeave(() => {\n  // clear the active asset so that the next page (e.g. Home Page)\n  // doesn't show editing controls for this asset\n  assetStore.setActiveAsset(null);\n});\n</script>\n<style scoped></style>\n"],"file":"assets/AssetViewPage.js"}