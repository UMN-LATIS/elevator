{"version":3,"sources":["assetAutocompleter.js"],"names":["relatedAssetPreview","relatedAssetId","targetContainer","targetParent","length","source","$","html","template","Handlebars","compile","self","get","basePath","data","jsonObject","parseJSON","e","alert","responseObject","base_url","closest","find","show","attr","buildAssetAutocomplete","each","index","value","val","autocomplete","request","response","searchRequest","searchText","term","templateId","post","searchQuery","JSON","stringify","suppressRecent","showHidden","success","matches","objectId","splice","fail","readyState","messages","noResults","results","close","event","ui","undefined","which","hasClass","select","item","this","trigger","_renderItem","ul","appendTo"],"mappings":"AACA,IAAIA,oBAAsB,SAASC,EAAgBC,EAAiBC,GACnE,GAAGF,EAAeG,OAAS,EAAG,CAC7B,IAAIC,EAAWC,EAAE,2BAA2BC,OACxCC,EAAWC,WAAWC,QAAQL,GAC9BM,EAAOT,EACXI,EAAEM,IAAKC,SAAW,yBAA2BZ,GAAiB,SAAUa,GACvE,IACCC,WAAaT,EAAEU,UAAUF,GAE1B,MAAMG,GAEL,YADAC,MAAMD,EAAI,IAAMH,GAGjB,GAAGC,WAAY,CACd,IAAII,EAAiBJ,WACrBI,EAAeC,SAAWP,SAC1B,IAAIN,EAAOC,EAASW,GACpBb,EAAEK,GAAMU,QAAQlB,GAAcmB,KAAK,wBAAwBC,OAC3DjB,EAAEK,GAAMU,QAAQlB,GAAcmB,KAAK,qBAAqBC,OACxDjB,EAAEK,GAAMU,QAAQlB,GAAcmB,KAAK,iBAAiBC,OACpDjB,EAAEK,GAAMU,QAAQlB,GAAcmB,KAAK,iBAAiBf,KAAKA,GACzDD,EAAEK,GAAMU,QAAQlB,GAAcmB,KAAK,mBAAmBE,KAAK,YAAY,SAatEC,uBAAyB,SAASvB,GACrC,IAAIG,EAAWC,EAAE,2BAA2BC,OACzCC,EAAWC,WAAWC,QAAQL,GAE9BC,EAAE,yBAAyBF,QAC7BE,EAAE,yBAAyBoB,MAAK,SAASC,EAAOC,GAC5CtB,EAAEsB,GAAOC,MAAMzB,OAAO,IACxBE,EAAEsB,GAAOP,QAAQnB,GAAiBoB,KAAK,wBAAwBC,OAC/DjB,EAAEsB,GAAOP,QAAQnB,GAAiBoB,KAAK,qBAAqBC,OAC5DjB,EAAEsB,GAAOP,QAAQnB,GAAiBoB,KAAK,iBAAiBC,OACxDjB,EAAEsB,GAAOP,QAAQnB,GAAiBoB,KAAK,mBAAmBE,KAAK,YAAW,IAE3ElB,EAAEsB,GAAOE,aAAa,CACrBzB,OAAQ,SAAS0B,EAASC,GACzB,IAAIC,EAAgB,CAAEC,WAAcH,EAAQI,MACxCC,EAAa9B,EAAEsB,GAAOP,QAAQnB,GAAiBoB,KAAK,yBAAyBO,MAEjFvB,EAAE+B,KAAMxB,SAAW,wBAAyB,CAACyB,YAAYC,KAAKC,UAAUP,GAAgBG,WAAYA,EAAYK,gBAAe,EAAMC,YAAW,IAAO,SAAU5B,GAChK,IACCC,WAAaD,EAEd,MAAMG,GAEL,YADAC,MAAMD,EAAI,IAAMH,IAIS,IAAvBC,WAAW4B,UACbrC,EAAEoB,KAAKX,WAAW6B,SAAS,SAASjB,EAAOC,GAC1C,IAAIA,GAASA,EAAMiB,UAAYvC,EAAE,kBAAkBuB,MAElD,OADAd,WAAW6B,QAAQE,OAAOnB,EAAM,IACzB,EAERC,EAAMA,MAAQA,EAAMiB,SACpB9B,WAAW6B,QAAQjB,GAASC,KAG7BI,EAASjB,WAAW6B,aAEnBG,MAAK,SAAU9B,GACbA,EAAE+B,WAAa,GAClB9B,MAAMqB,KAAKC,UAAUvB,QAKxBgC,SAAU,CACTC,UAAW,GACXC,QAAS,cAEVC,MAAO,SAASC,EAAOC,QACHC,IAAhBF,EAAMG,QAEJlD,EAAEsB,GAAO6B,SAAS,6BACrBnD,EAAEsB,GAAOC,IAAI,MAMhB6B,OAAQ,SAASL,EAAOC,GACvBhD,EAAEsB,GAAOP,QAAQnB,GAAiBoB,KAAK,6BAA6BO,IAAIyB,EAAGK,KAAKd,UAChF,IAAItC,EAAOC,EAAS8C,EAAGK,MACvBrD,EAAEsD,MAAMC,QAAQ,UAChBvD,EAAEsD,MAAMvC,QAAQnB,GAAiBoB,KAAK,wBAAwBC,OAC9DjB,EAAEsD,MAAMvC,QAAQnB,GAAiBoB,KAAK,qBAAqBC,OAC3DjB,EAAEsD,MAAMvC,QAAQnB,GAAiBoB,KAAK,iBAAiBC,OACvDjB,EAAEsD,MAAMvC,QAAQnB,GAAiBoB,KAAK,mBAAmBE,KAAK,YAAW,GACzElB,EAAEsD,MAAMvC,QAAQnB,GAAiBoB,KAAK,iBAAiBf,KAAKA,MAE3DO,KAAK,mBAAmBgD,YAAc,SAAUC,EAAIJ,GACtDA,EAAKvC,SAAWP,SAChB,IAAIN,EAAOC,EAASmD,GACpB,OAAOrD,EAAEC,GAAMyD,SAASD","file":"assetAutocompleter.min.js","sourcesContent":["\nvar relatedAssetPreview = function(relatedAssetId, targetContainer, targetParent) {\n\tif(relatedAssetId.length > 0) {\n\t\tvar source   = $(\"#autocompleter-template\").html();\n\t\tvar template = Handlebars.compile(source);\n\t\tvar self = targetContainer;\n\t\t$.get( basePath + \"asset/getAssetPreview/\" + relatedAssetId,  function( data ) {\n\t\t\ttry{\n\t\t\t\tjsonObject = $.parseJSON(data);\n\t\t\t}\n\t\t\tcatch(e){\n\t\t\t\talert(e + \" \" + data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(jsonObject) {\n\t\t\t\tvar responseObject = jsonObject;\n\t\t\t\tresponseObject.base_url = basePath;\n\t\t\t\tvar html = template(responseObject);\n\t\t\t\t$(self).closest(targetParent).find(\".autocompletePreview\").show();\n\t\t\t\t$(self).closest(targetParent).find(\".autocompleteEdit\").show();\n\t\t\t\t$(self).closest(targetParent).find(\".clearRelated\").show();\n\t\t\t\t$(self).closest(targetParent).find(\".assetPreview\").html(html);\n\t\t\t\t$(self).closest(targetParent).find(\".newAssetButton\").attr(\"disabled\", true);\n\n\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * special autocompleter that does full text search\n */\n\n\n var buildAssetAutocomplete = function(targetContainer) {\n \tvar source   = $(\"#autocompleter-template\").html();\n\tvar template = Handlebars.compile(source);\n\n \tif($(\".tryAutocompleteAsset\").length) {\n \t\t$(\".tryAutocompleteAsset\").each(function(index, value) {\n \t\t\tif($(value).val().length>0) {\n \t\t\t\t$(value).closest(targetContainer).find(\".autocompletePreview\").show();\n \t\t\t\t$(value).closest(targetContainer).find(\".autocompleteEdit\").show();\n \t\t\t\t$(value).closest(targetContainer).find(\".clearRelated\").show();\n \t\t\t\t$(value).closest(targetContainer).find(\".newAssetButton\").attr(\"disabled\",true);\n \t\t\t}\n \t\t\t$(value).autocomplete({\n \t\t\t\tsource: function(request, response) {\n \t\t\t\t\tvar searchRequest = { \"searchText\": request.term};\n \t\t\t\t\tvar templateId = $(value).closest(targetContainer).find(\".matchAgainstSelector\").val();\n\t\t\t\t\t// todo: there's no reason this should be saving a new search query teach time to begin with\n \t\t\t\t\t$.post( basePath + \"search/searchResults/\", {searchQuery:JSON.stringify(searchRequest), templateId: templateId, suppressRecent:true, showHidden:true}, function( data ) {\n \t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tjsonObject = data;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tcatch(e){\n \t\t\t\t\t\t\talert(e + \" \" + data);\n \t\t\t\t\t\t\treturn;\n \t\t\t\t\t\t}\n\n \t\t\t\t\t\tif(jsonObject.success === true) {\n \t\t\t\t\t\t\t$.each(jsonObject.matches, function(index, value) {\n \t\t\t\t\t\t\t\tif(!value || value.objectId == $(\"#inputObjectId\").val()) {\n \t\t\t\t\t\t\t\t\tjsonObject.matches.splice(index,1);\n \t\t\t\t\t\t\t\t\treturn true;\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\tvalue.value = value.objectId;\n \t\t\t\t\t\t\t\tjsonObject.matches[index] = value;\n \t\t\t\t\t\t\t});\n\n \t\t\t\t\t\t\tresponse(jsonObject.matches);\n \t\t\t\t\t\t}\n \t\t\t\t\t}).fail(function (e) {\n \t\t\t\t\t\tif (e.readyState > 0) {\n \t\t\t\t\t\t\talert(JSON.stringify(e));\n \t\t\t\t\t\t}\n\n \t\t\t\t\t});\n \t\t\t\t},\n \t\t\t\tmessages: {\n \t\t\t\t\tnoResults: '',\n \t\t\t\t\tresults: function() {}\n \t\t\t\t},\n \t\t\t\tclose: function(event, ui){\n \t\t\t\t\tif(event.which !== undefined) {\n \t\t\t\t\t\t// if we're not using the same field to query and store the id, clear the query field\n \t\t\t\t\t\tif(!$(value).hasClass(\"relatedAssetSelectedItem\")) {\n \t\t\t\t\t\t\t$(value).val('');\t\n \t\t\t\t\t\t}\n \t\t\t\t\t\t\n \t\t\t\t\t}\n\n \t\t\t\t},\n \t\t\t\tselect: function(event, ui){\n \t\t\t\t\t$(value).closest(targetContainer).find(\".relatedAssetSelectedItem\").val(ui.item.objectId);\n \t\t\t\t\tvar html = template(ui.item);\n \t\t\t\t\t$(this).trigger(\"change\");\n \t\t\t\t\t$(this).closest(targetContainer).find(\".autocompletePreview\").show();\n \t\t\t\t\t$(this).closest(targetContainer).find(\".autocompleteEdit\").show();\n \t\t\t\t\t$(this).closest(targetContainer).find(\".clearRelated\").show();\n \t\t\t\t\t$(this).closest(targetContainer).find(\".newAssetButton\").attr(\"disabled\",true);\n \t\t\t\t\t$(this).closest(targetContainer).find(\".assetPreview\").html(html);\n \t\t\t\t}\n \t\t\t}).data(\"ui-autocomplete\")._renderItem = function( ul, item ) {\n \t\t\t\titem.base_url = basePath;\n \t\t\t\tvar html = template(item);\n \t\t\t\treturn $(html).appendTo(ul);\n \t\t\t};\n \t\t});\n \t}\n };"]}