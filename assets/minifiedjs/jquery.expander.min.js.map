{"version":3,"sources":["jquery.expander.js"],"names":["factory","define","amd","module","exports","jQuery","$","expander","version","defaults","slicePoint","sliceOn","preserveWords","normalizeWhitespace","showWordCount","wordCountText","widow","expandText","expandPrefix","expandAfterSummary","wordEnd","summaryClass","detailClass","moreClass","lessClass","moreLinkClass","lessLinkClass","collapseTimer","expandEffect","expandSpeed","collapseEffect","collapseSpeed","userCollapse","userCollapseText","userCollapsePrefix","onSlice","beforeExpand","afterExpand","onCollapse","afterCollapse","fn","options","buildHTML","o","blocks","el","summary","closingTagParts","rLastCloseTag","exec","closingTag","toLowerCase","replace","moreLabel","test","details","join","buildMoreLabel","detailText","ret","rOpenCloseTag","match","length","backup","txt","lastIndexOf","slice","rAmpWordEnd","trim","reCollapse","stop","prevMore","prev","show","parent","children","find","call","delayCollapse","option","$collapseEl","thisEl","delayedCollapse","setTimeout","isFunction","changeSlicePoint","info","sliceOnTemp","summaryTextClean","summaryText","text","sliceOnIndexClean","indexOf","sliceOnIndexHtml","allHtml","meth","opts","extend","rSelfClose","rOpenTag","rCloseTag","rTagPlus","rMultiSpace","removeSpaces","str","methods","init","this","each","i","l","tmp","newChar","summTagless","summOpens","summCloses","lastCloseTag","detailTagless","html","expand","$thisDetails","$readMore","slicePointChanged","openTagsForDetails","closeTagsForsummaryText","strayChars","defined","$this","$summEl","data","meta","hasDetails","hasBlocks","filter","display","css","detailSelector","moreSelector","split","lessSelector","index","val","charAt","push","thisTagName","closePosition","inArray","splice","reverse","remove","pop","empty","append","is","event","preventDefault","hide","zoom","unbind","bind","clearTimeout","$detailsCollapsed","closest","destroy","contents","removeData","after"],"mappings":"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","file":"jquery.expander.min.js","sourcesContent":["/*!\n * jQuery Expander Plugin - v1.6.1 - 2015-11-15\n * http://plugins.learningjquery.com/expander/\n * Copyright (c) 2015 Karl Swedberg\n * Licensed MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory;\n  } else {\n    factory(jQuery);\n  }\n})(function($) {\n  $.expander = {\n    version: '1.6.1',\n    defaults: {\n      // the number of characters at which the contents will be sliced into two parts.\n      slicePoint: 100,\n\n      // a string of characters at which to slice the contents into two parts,\n      // but only if the string appears before slicePoint\n      // Useful for slicing at the first line break, e.g. {sliceOn: '<br'}\n      sliceOn: null,\n\n      // whether to keep the last word of the summary whole (true) or let it slice in the middle of a word (false)\n      preserveWords: true,\n\n      // whether to normalize the whitespace in the data to display (true) or not (false)\n      normalizeWhitespace: true,\n\n      // whether to count and display the number of words inside the collapsed text\n      showWordCount: false,\n\n      // What to display around the counted number of words, set to '{{count}}' to show only the number\n      wordCountText: ' ({{count}} words)',\n\n      // a threshold of sorts for whether to initially hide/collapse part of the element's contents.\n      // If after slicing the contents in two there are fewer words in the second part than\n      // the value set by widow, we won't bother hiding/collapsing anything.\n      widow: 4,\n\n      // text displayed in a link instead of the hidden part of the element.\n      // clicking this will expand/show the hidden/collapsed text\n      expandText: 'read more',\n      expandPrefix: '&hellip; ',\n\n      expandAfterSummary: false,\n\n      // Possible word endings to test against for when preserveWords: true\n      wordEnd: /(&(?:[^;]+;)?|[0-9a-zA-Z\\u00C0-\\u0100]+|[^\\u0000-\\u007F]+)$/,\n\n      // class names for summary element and detail element\n      summaryClass: 'summary',\n      detailClass: 'details',\n\n      // class names for <span> around \"read-more\" link and \"read-less\" link\n      moreClass: 'read-more',\n      lessClass: 'read-less',\n\n      // class names for <a> around \"read-more\" link and \"read-less\" link\n      moreLinkClass: 'more-link',\n      lessLinkClass: 'less-link',\n\n      // number of milliseconds after text has been expanded at which to collapse the text again.\n      // when 0, no auto-collapsing\n      collapseTimer: 0,\n\n      // effects for expanding and collapsing\n      expandEffect: 'slideDown',\n      expandSpeed: 250,\n      collapseEffect: 'slideUp',\n      collapseSpeed: 200,\n\n      // allow the user to re-collapse the expanded text.\n      userCollapse: true,\n\n      // text to use for the link to re-collapse the text\n      userCollapseText: 'read less',\n      userCollapsePrefix: ' ',\n\n\n      // all callback functions have the this keyword mapped to the element in the jQuery set when .expander() is called\n\n      onSlice: null, // function() {}\n      beforeExpand: null, // function() {},\n      afterExpand: null, // function() {},\n      onCollapse: null, // function(byUser) {}\n      afterCollapse: null // function() {}\n    }\n  };\n\n  $.fn.expander = function(options) {\n    var meth = 'init';\n\n    if (typeof options === 'string') {\n      meth = options;\n      options = {};\n    }\n\n    var opts = $.extend({}, $.expander.defaults, options),\n        rSelfClose = /^<(?:area|br|col|embed|hr|img|input|link|meta|param).*>$/i,\n        rAmpWordEnd = opts.wordEnd,\n        rOpenCloseTag = /<\\/?(\\w+)[^>]*>/g,\n        rOpenTag = /<(\\w+)[^>]*>/g,\n        rCloseTag = /<\\/(\\w+)>/g,\n        rLastCloseTag = /(<\\/([^>]+)>)\\s*$/,\n        rTagPlus = /^(<[^>]+>)+.?/,\n        rMultiSpace = /\\s\\s+/g,\n        delayedCollapse;\n\n    var removeSpaces = function(str) {\n      return opts.normalizeWhitespace ? $.trim( str || '' ).replace(rMultiSpace, ' ') : str;\n    };\n\n    var methods = {\n      init: function() {\n        this.each(function() {\n          var i, l, tmp, newChar, summTagless, summOpens, summCloses,\n              lastCloseTag, detailText, detailTagless, html, expand,\n              $thisDetails, $readMore,\n              slicePointChanged,\n              openTagsForDetails = [],\n              closeTagsForsummaryText = [],\n              strayChars = '',\n              defined = {},\n              thisEl = this,\n              $this = $(this),\n              $summEl = $([]),\n              o = $.extend({}, opts, $this.data('expander') || $.meta && $this.data() || {}),\n              hasDetails = !!$this.find('.' + o.detailClass).length,\n              hasBlocks = !!$this.find('*').filter(function() {\n                var display = $(this).css('display');\n                return (/^block|table|list/).test(display);\n              }).length,\n              el = hasBlocks ? 'div' : 'span',\n              detailSelector = el + '.' + o.detailClass,\n              moreClass = o.moreClass + '',\n              lessClass = o.lessClass + '',\n              expandSpeed = o.expandSpeed || 0,\n              allHtml = removeSpaces( $this.html() ),\n              summaryText = allHtml.slice(0, o.slicePoint);\n\n          // allow multiple classes for more/less links\n          o.moreSelector = 'span.' + moreClass.split(' ').join('.');\n          o.lessSelector = 'span.' + lessClass.split(' ').join('.');\n          // bail out if we've already set up the expander on this element\n          if ( $.data(this, 'expanderInit') ) {\n            return;\n          }\n\n          $.data(this, 'expanderInit', true);\n          $.data(this, 'expander', o);\n          // determine which callback functions are defined\n          $.each(['onSlice','beforeExpand', 'afterExpand', 'onCollapse', 'afterCollapse'], function(index, val) {\n            defined[val] = $.isFunction(o[val]);\n          });\n\n          // back up if we're in the middle of a tag or word\n          summaryText = backup(summaryText);\n\n          // summary text sans tags length\n          summTagless = summaryText.replace(rOpenCloseTag, '').length;\n\n          // add more characters to the summary, one for each character in the tags\n          while (summTagless < o.slicePoint) {\n            newChar = allHtml.charAt(summaryText.length);\n            if (newChar === '<') {\n              newChar = allHtml.slice(summaryText.length).match(rTagPlus)[0];\n            }\n            summaryText += newChar;\n            summTagless++;\n          }\n\n          // SliceOn script, Closes #16, resolves #59\n          // Original SliceEarlierAt code (since modfied): Sascha Peilicke @saschpe\n          if (o.sliceOn) {\n            slicePointChanged = changeSlicePoint({\n              sliceOn: o.sliceOn,\n              slicePoint: o.slicePoint,\n              allHtml: allHtml,\n              summaryText: summaryText\n            });\n\n            summaryText = slicePointChanged.summaryText;\n          }\n\n          summaryText = backup(summaryText, o.preserveWords && allHtml.slice(summaryText.length).length);\n\n          // separate open tags from close tags and clean up the lists\n          summOpens = summaryText.match(rOpenTag) || [];\n          summCloses = summaryText.match(rCloseTag) || [];\n\n          // filter out self-closing tags\n          tmp = [];\n          $.each(summOpens, function(index, val) {\n            if ( !rSelfClose.test(val) ) {\n              tmp.push(val);\n            }\n          });\n          summOpens = tmp;\n\n          // strip close tags to just the tag name\n          l = summCloses.length;\n          for (i = 0; i < l; i++) {\n            summCloses[i] = summCloses[i].replace(rCloseTag, '$1');\n          }\n          // tags that start in summary and end in detail need:\n          // a). close tag at end of summary\n          // b). open tag at beginning of detail\n          $.each(summOpens, function(index, val) {\n            var thisTagName = val.replace(rOpenTag, '$1');\n            var closePosition = $.inArray(thisTagName, summCloses);\n\n            if (closePosition === -1) {\n              openTagsForDetails.push(val);\n              closeTagsForsummaryText.push('</' + thisTagName + '>');\n\n            } else {\n              summCloses.splice(closePosition, 1);\n            }\n          });\n\n          // reverse the order of the close tags for the summary so they line up right\n          closeTagsForsummaryText.reverse();\n\n          // create necessary summary and detail elements if they don't already exist\n          if ( !hasDetails ) {\n\n            // end script if there is no detail text or if detail has fewer words than widow option\n            detailText = allHtml.slice(summaryText.length);\n            detailTagless = $.trim( detailText.replace(rOpenCloseTag, '') );\n\n            if ( detailTagless === '' || detailTagless.split(/\\s+/).length < o.widow ) {\n              return;\n            }\n            // otherwise, continue...\n            lastCloseTag = closeTagsForsummaryText.pop() || '';\n            summaryText += closeTagsForsummaryText.join('');\n            detailText = openTagsForDetails.join('') + detailText;\n          } else {\n            // assume that even if there are details, we still need readMore/readLess/summary elements\n            // (we already bailed out earlier when readMore el was found)\n            // but we need to create els differently\n\n            // remove the detail from the rest of the content\n            detailText = $this.find(detailSelector).remove().html();\n\n            // The summary is what's left\n            summaryText = $this.html();\n\n            // allHtml is the summary and detail combined (this is needed when content has block-level elements)\n            allHtml = summaryText + detailText;\n\n            lastCloseTag = '';\n          }\n          o.moreLabel = $this.find(o.moreSelector).length ? '' : buildMoreLabel(o, detailText);\n\n          if (hasBlocks) {\n            detailText = allHtml;\n            //Fixes issue #89; Tested by 'split html escapes'\n          } else if (summaryText.charAt(summaryText.length-1) === '&') {\n            strayChars = /^[#\\w\\d\\\\]+;/.exec(detailText);\n            if (strayChars) {\n              detailText = detailText.slice(strayChars[0].length);\n              summaryText += strayChars[0];\n            }\n          }\n          summaryText += lastCloseTag;\n\n          // onSlice callback\n          o.summary = summaryText;\n          o.details = detailText;\n          o.lastCloseTag = lastCloseTag;\n\n          if (defined.onSlice) {\n            // user can choose to return a modified options object\n            // one last chance for user to change the options. sneaky, huh?\n            // but could be tricky so use at your own risk.\n            tmp = o.onSlice.call(thisEl, o);\n\n          // so, if the returned value from the onSlice function is an object with a details property, we'll use that!\n            o = tmp && tmp.details ? tmp : o;\n          }\n\n          // build the html with summary and detail and use it to replace old contents\n          html = buildHTML(o, hasBlocks);\n\n          $this.empty().append(html);\n\n          // set up details and summary for expanding/collapsing\n          $thisDetails = $this.find(detailSelector);\n          $readMore = $this.find(o.moreSelector);\n\n          // Hide details span using collapseEffect unless\n          // expandEffect is NOT slideDown and collapseEffect IS slideUp.\n          // The slideUp effect sets span's \"default\" display to\n          // inline-block. This is necessary for slideDown, but\n          // problematic for other \"showing\" animations.\n          // Fixes #46\n          if (o.collapseEffect === 'slideUp' && o.expandEffect !== 'slideDown' || $this.is(':hidden')) {\n            $thisDetails.css({display: 'none'});\n          } else {\n            $thisDetails[o.collapseEffect](0);\n          }\n\n          $summEl = $this.find('div.' + o.summaryClass);\n\n          expand = function(event) {\n            event.preventDefault();\n            $readMore.hide();\n            $summEl.hide();\n            if (defined.beforeExpand) {\n              o.beforeExpand.call(thisEl);\n            }\n\n            $thisDetails.stop(false, true)[o.expandEffect](expandSpeed, function() {\n              $thisDetails.css({zoom: ''});\n              if (defined.afterExpand) {o.afterExpand.call(thisEl);}\n              delayCollapse(o, $thisDetails, thisEl);\n            });\n          };\n\n          $readMore.find('a').unbind('click.expander').bind('click.expander', expand);\n\n          if ( o.userCollapse && !$this.find(o.lessSelector).length ) {\n            $this\n            .find(detailSelector)\n            .append('<span class=\"' + o.lessClass + '\">' + o.userCollapsePrefix + '<a href=\"#\" class=\"'+ o.lessLinkClass +'\">' + o.userCollapseText + '</a></span>');\n          }\n\n          $this\n          .find(o.lessSelector + ' a')\n          .unbind('click.expander')\n          .bind('click.expander', function(event) {\n            event.preventDefault();\n            clearTimeout(delayedCollapse);\n            var $detailsCollapsed = $(this).closest(detailSelector);\n            reCollapse(o, $detailsCollapsed);\n            if (defined.onCollapse) {\n              o.onCollapse.call(thisEl, true);\n            }\n          });\n\n        }); // this.each\n      },\n      destroy: function() {\n\n        this.each(function() {\n          var o, details,\n              $this = $(this);\n\n          if ( !$this.data('expanderInit') ) {\n            return;\n          }\n\n          o = $.extend({}, $this.data('expander') || {}, opts);\n          details = $this.find('.' + o.detailClass).contents();\n\n          $this.removeData('expanderInit');\n          $this.removeData('expander');\n\n          $this.find(o.moreSelector).remove();\n          $this.find('.' + o.summaryClass).remove();\n          $this.find('.' + o.detailClass).after(details).remove();\n          $this.find(o.lessSelector).remove();\n\n        });\n      }\n    };\n\n    // run the methods (almost always \"init\")\n    if ( methods[meth] ) {\n      methods[ meth ].call(this);\n    }\n\n    // utility functions\n    function buildHTML(o, blocks) {\n      var el = 'span',\n          summary = o.summary,\n          closingTagParts = rLastCloseTag.exec(summary),\n          closingTag = closingTagParts ? closingTagParts[2].toLowerCase() : '';\n      if ( blocks ) {\n        el = 'div';\n\n        // if summary ends with a close tag, tuck the moreLabel inside it\n        if ( closingTagParts && closingTag !== 'a' && !o.expandAfterSummary ) {\n          summary = summary.replace(rLastCloseTag, o.moreLabel + '$1');\n        } else {\n        // otherwise (e.g. if ends with self-closing tag) just add moreLabel after summary\n        // fixes #19\n          summary += o.moreLabel;\n        }\n\n        // and wrap it in a div\n        summary = '<div class=\"' + o.summaryClass + '\">' + summary + '</div>';\n      } else {\n        if (!/^\\s*</.test(summary)) {\n          // summary = '<span>' + summary + '</span>';\n        }\n        summary += o.moreLabel;\n      }\n\n      return [\n        summary,\n        ' <',\n        el + ' class=\"' + o.detailClass + '\"',\n        '>',\n        o.details,\n        '</' + el + '>'\n      ].join('');\n    }\n\n    function buildMoreLabel(o, detailText) {\n      var ret = '<span class=\"' + o.moreClass + '\">' + o.expandPrefix;\n\n      if (o.showWordCount) {\n\n        o.wordCountText = o.wordCountText.replace(/\\{\\{count\\}\\}/, detailText.replace(rOpenCloseTag, '').replace(/\\&(?:amp|nbsp);/g, '').replace(/(?:^\\s+|\\s+$)/, '').match(/\\w+/g).length);\n\n      } else {\n        o.wordCountText = '';\n      }\n      ret += '<a href=\"#\" class=\"' + o.moreLinkClass + '\">' + o.expandText + o.wordCountText + '</a></span>';\n      return ret;\n    }\n\n    function backup(txt, preserveWords) {\n      if ( txt.lastIndexOf('<') > txt.lastIndexOf('>') ) {\n        txt = txt.slice( 0, txt.lastIndexOf('<') );\n      }\n      if (preserveWords) {\n        txt = txt.replace(rAmpWordEnd,'');\n      }\n\n      return $.trim(txt);\n    }\n\n    function reCollapse(o, el) {\n      el.stop(true, true)[o.collapseEffect](o.collapseSpeed, function() {\n        var prevMore = el.prev('span.' + o.moreClass).show();\n        if (!prevMore.length) {\n          el.parent().children('div.' + o.summaryClass).show()\n            .find('span.' + o.moreClass).show();\n        }\n        if (o.afterCollapse) {o.afterCollapse.call(el);}\n      });\n    }\n\n    function delayCollapse(option, $collapseEl, thisEl) {\n      if (option.collapseTimer) {\n        delayedCollapse = setTimeout(function() {\n          reCollapse(option, $collapseEl);\n          if ( $.isFunction(option.onCollapse) ) {\n            option.onCollapse.call(thisEl, false);\n          }\n        }, option.collapseTimer);\n      }\n    }\n\n    function changeSlicePoint(info) {\n      // Create placeholder string text\n      var sliceOnTemp = 'ExpandMoreHere374216623';\n\n      // Replace sliceOn with placeholder unaffected by .text() cleaning\n      // (in case sliceOn contains html)\n      var summaryTextClean = info.summaryText.replace(info.sliceOn, sliceOnTemp);\n      summaryTextClean = $('<div>' + summaryTextClean + '</div>').text();\n\n      // Find true location of sliceOn placeholder\n      var sliceOnIndexClean = summaryTextClean.indexOf(sliceOnTemp);\n\n      // Store location of html version too\n      var sliceOnIndexHtml = info.summaryText.indexOf(info.sliceOn);\n\n      // Base condition off of true sliceOn location...\n      if (sliceOnIndexClean !== -1 && sliceOnIndexClean < info.slicePoint) {\n        // ...but keep html in summaryText\n        info.summaryText = info.allHtml.slice(0, sliceOnIndexHtml);\n      }\n      return info;\n    }\n\n    return this;\n  };\n\n  // plugin defaults\n  $.fn.expander.defaults = $.expander.defaults;\n});\n"],"sourceRoot":"/source/"}