{"version":3,"file":"crocodoc.viewer.min.js","sources":["crocodoc.viewer.js"],"sourcesContent":["/*! Crocodoc Viewer - v0.10.6 | (c) 2015 Box */\n\n(function (window) {\n    /*global jQuery*/\n    /*jshint unused:false, undef:false*/\n    'use strict';\n    window.Crocodoc = (function(fn) {\n        if (typeof exports === 'object') {\n            // nodejs / browserify - export a function that accepts a jquery impl\n            module.exports = fn;\n        } else {\n            // normal browser environment\n            return fn(jQuery);\n        }\n    }(function($) {\n\nvar CSS_CLASS_PREFIX         = 'crocodoc-',\n    ATTR_SVG_VERSION         = 'data-svg-version',\n    CSS_CLASS_VIEWER         = CSS_CLASS_PREFIX + 'viewer',\n    CSS_CLASS_DOC            = CSS_CLASS_PREFIX + 'doc',\n    CSS_CLASS_VIEWPORT       = CSS_CLASS_PREFIX + 'viewport',\n    CSS_CLASS_LOGO           = CSS_CLASS_PREFIX + 'viewer-logo',\n    CSS_CLASS_DRAGGABLE      = CSS_CLASS_PREFIX + 'draggable',\n    CSS_CLASS_DRAGGING       = CSS_CLASS_PREFIX + 'dragging',\n    CSS_CLASS_TEXT_SELECTED  = CSS_CLASS_PREFIX + 'text-selected',\n    CSS_CLASS_TEXT_DISABLED  = CSS_CLASS_PREFIX + 'text-disabled',\n    CSS_CLASS_LINKS_DISABLED = CSS_CLASS_PREFIX + 'links-disabled',\n    CSS_CLASS_MOBILE         = CSS_CLASS_PREFIX + 'mobile',\n    CSS_CLASS_IELT9          = CSS_CLASS_PREFIX + 'ielt9',\n    CSS_CLASS_SUPPORTS_SVG   = CSS_CLASS_PREFIX + 'supports-svg',\n    CSS_CLASS_WINDOW_AS_VIEWPORT = CSS_CLASS_PREFIX + 'window-as-viewport',\n    CSS_CLASS_LAYOUT_PREFIX  = CSS_CLASS_PREFIX + 'layout-',\n    CSS_CLASS_CURRENT_PAGE   = CSS_CLASS_PREFIX + 'current-page',\n    CSS_CLASS_PRECEDING_PAGE = CSS_CLASS_PREFIX + 'preceding-page',\n    CSS_CLASS_PAGE           = CSS_CLASS_PREFIX + 'page',\n    CSS_CLASS_PAGE_INNER     = CSS_CLASS_PAGE + '-inner',\n    CSS_CLASS_PAGE_CONTENT   = CSS_CLASS_PAGE + '-content',\n    CSS_CLASS_PAGE_SVG       = CSS_CLASS_PAGE + '-svg',\n    CSS_CLASS_PAGE_TEXT      = CSS_CLASS_PAGE + '-text',\n    CSS_CLASS_PAGE_LINK      = CSS_CLASS_PAGE + '-link',\n    CSS_CLASS_PAGE_LINKS     = CSS_CLASS_PAGE + '-links',\n    CSS_CLASS_PAGE_AUTOSCALE = CSS_CLASS_PAGE + '-autoscale',\n    CSS_CLASS_PAGE_LOADING   = CSS_CLASS_PAGE + '-loading',\n    CSS_CLASS_PAGE_ERROR     = CSS_CLASS_PAGE + '-error',\n    CSS_CLASS_PAGE_VISIBLE   = CSS_CLASS_PAGE + '-visible',\n    CSS_CLASS_PAGE_AUTOSCALE = CSS_CLASS_PAGE + '-autoscale',\n    CSS_CLASS_PAGE_PREV      = CSS_CLASS_PAGE + '-prev',\n    CSS_CLASS_PAGE_NEXT      = CSS_CLASS_PAGE + '-next',\n    CSS_CLASS_PAGE_BEFORE    = CSS_CLASS_PAGE + '-before',\n    CSS_CLASS_PAGE_AFTER     = CSS_CLASS_PAGE + '-after',\n    CSS_CLASS_PAGE_BEFORE_BUFFER = CSS_CLASS_PAGE + '-before-buffer',\n    CSS_CLASS_PAGE_AFTER_BUFFER  = CSS_CLASS_PAGE + '-after-buffer',\n    PRESENTATION_CSS_CLASSES = [\n        CSS_CLASS_PAGE_NEXT,\n        CSS_CLASS_PAGE_AFTER,\n        CSS_CLASS_PAGE_PREV,\n        CSS_CLASS_PAGE_BEFORE,\n        CSS_CLASS_PAGE_BEFORE_BUFFER,\n        CSS_CLASS_PAGE_AFTER_BUFFER\n    ].join(' ');\n\n\nvar VIEWER_HTML_TEMPLATE =\n    '<div tabindex=\"-1\" class=\"' + CSS_CLASS_VIEWPORT + '\">' +\n        '<div class=\"' + CSS_CLASS_DOC + '\"></div>' +\n    '</div>' +\n    '<div class=\"' + CSS_CLASS_LOGO + '\"></div>';\n\nvar PAGE_HTML_TEMPLATE =\n    '<div class=\"' + CSS_CLASS_PAGE + ' ' + CSS_CLASS_PAGE_LOADING + '\" ' +\n        'style=\"width:{{w}}px; height:{{h}}px;\" data-width=\"{{w}}\" data-height=\"{{h}}\">' +\n        '<div class=\"' + CSS_CLASS_PAGE_INNER + '\">' +\n            '<div class=\"' + CSS_CLASS_PAGE_CONTENT + '\">' +\n                '<div class=\"' + CSS_CLASS_PAGE_SVG + '\"></div>' +\n                '<div class=\"' + CSS_CLASS_PAGE_AUTOSCALE + '\">' +\n                    '<div class=\"' + CSS_CLASS_PAGE_TEXT + '\"></div>' +\n                    '<div class=\"' + CSS_CLASS_PAGE_LINKS + '\"></div>' +\n                '</div>' +\n            '</div>' +\n        '</div>' +\n    '</div>';\n\n// the width to consider the 100% zoom level; zoom levels are calculated based\n// on this width relative to the actual document width\nvar DOCUMENT_100_PERCENT_WIDTH = 1024;\n\n\nvar ZOOM_FIT_WIDTH = 'fitwidth',\n    ZOOM_FIT_HEIGHT = 'fitheight',\n    ZOOM_AUTO = 'auto',\n    ZOOM_IN = 'in',\n    ZOOM_OUT = 'out',\n\n    SCROLL_PREVIOUS = 'previous',\n    SCROLL_NEXT = 'next',\n\n    LAYOUT_VERTICAL = 'vertical',\n    LAYOUT_VERTICAL_SINGLE_COLUMN = 'vertical-single-column',\n    LAYOUT_HORIZONTAL = 'horizontal',\n    LAYOUT_PRESENTATION = 'presentation',\n    LAYOUT_PRESENTATION_TWO_PAGE = 'presentation-two-page',\n    LAYOUT_TEXT = 'text',\n\n    PAGE_STATUS_CONVERTING = 'converting',\n    PAGE_STATUS_NOT_LOADED = 'not loaded',\n    PAGE_STATUS_LOADING = 'loading',\n    PAGE_STATUS_LOADED = 'loaded',\n    PAGE_STATUS_ERROR = 'error';\n\n\nvar STYLE_PADDING_PREFIX = 'padding-',\n    STYLE_PADDING_TOP = STYLE_PADDING_PREFIX + 'top',\n    STYLE_PADDING_RIGHT = STYLE_PADDING_PREFIX + 'right',\n    STYLE_PADDING_LEFT = STYLE_PADDING_PREFIX + 'left',\n    STYLE_PADDING_BOTTOM = STYLE_PADDING_PREFIX + 'bottom',\n    // threshold for removing similar zoom levels (closer to 1 is more similar)\n    ZOOM_LEVEL_SIMILARITY_THRESHOLD = 0.95,\n    // threshold for removing similar zoom presets (e.g., auto, fit-width, etc)\n    ZOOM_LEVEL_PRESETS_SIMILARITY_THRESHOLD = 0.99;\n\n\nvar PAGE_LOAD_INTERVAL = 100, //ms between initiating page loads\n    MAX_PAGE_LOAD_RANGE = 32,\n    MAX_PAGE_LOAD_RANGE_MOBILE = 8,\n    // the delay in ms to wait before triggering preloading after `ready`\n    READY_TRIGGER_PRELOADING_DELAY = 1000;\n\n/**\n * Creates a global method for loading svg text into the proxy svg object\n * @NOTE: this function should never be called directly in this context;\n * it's converted to a string and encoded into the proxy svg data:url\n * @returns {void}\n * @private\n */\nfunction PROXY_SVG() {\n    'use strict';\n    window.loadSVG = function (svgText) {\n        var domParser = new window.DOMParser(),\n            svgDoc = domParser.parseFromString(svgText, 'image/svg+xml'),\n            svgEl = document.importNode(svgDoc.documentElement, true);\n        // make sure the svg width/height are explicity set to 100%\n        svgEl.setAttribute('width', '100%');\n        svgEl.setAttribute('height', '100%');\n\n        if (document.body) {\n            document.body.appendChild(svgEl);\n        } else {\n            document.documentElement.appendChild(svgEl);\n        }\n    };\n}\n\n// @NOTE: MAX_DATA_URLS is the maximum allowed number of data-urls in svg\n// content before we give up and stop rendering them\nvar SVG_MIME_TYPE = 'image/svg+xml',\n    HTML_TEMPLATE = '<style>html,body{width:100%;height:100%;margin:0;overflow:hidden;}</style>',\n    SVG_CONTAINER_TEMPLATE = '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><script><![CDATA[('+PROXY_SVG+')()]]></script></svg>',\n\n    // Embed the svg in an iframe (initialized to about:blank), and inject\n    // the SVG directly to the iframe window using document.write()\n    // @NOTE: this breaks images in Safari because [?]\n    EMBED_STRATEGY_IFRAME_INNERHTML = 1,\n\n    // Embed the svg with a data-url\n    // @NOTE: ff allows direct script access to objects embedded with a data url,\n    //        and this method prevents a throbbing spinner because document.write\n    //        causes a spinner in ff\n    // @NOTE: NOT CURRENTLY USED - this breaks images in firefox because:\n    //        https://bugzilla.mozilla.org/show_bug.cgi?id=922433\n    EMBED_STRATEGY_DATA_URL = 2,\n\n    // Embed the svg directly in html via inline svg.\n    // @NOTE: NOT CURRENTLY USED -  seems to be slow everywhere, but I'm keeping\n    //        this here because it's very little extra code, and inline SVG might\n    //        be better some day?\n    EMBED_STRATEGY_INLINE_SVG = 3,\n\n    // Embed the svg directly with an object tag; don't replace linked resources\n    // @NOTE: NOT CURRENTLY USED - this is only here for testing purposes, because\n    //        it works in every browser; it doesn't support query string params\n    //        and causes a spinner\n    EMBED_STRATEGY_BASIC_OBJECT = 4,\n\n    // Embed the svg directly with an img tag; don't replace linked resources\n    // @NOTE: NOT CURRENTLY USED - this is only here for testing purposes\n    EMBED_STRATEGY_BASIC_IMG = 5,\n\n    // Embed a proxy svg script as an object tag via data:url, which exposes a\n    // loadSVG method on its contentWindow, then call the loadSVG method directly\n    // with the svg text as the argument\n    // @NOTE: only works in firefox because of its security policy on data:uri\n    EMBED_STRATEGY_DATA_URL_PROXY = 6,\n\n    // Embed in a way similar to the EMBED_STRATEGY_DATA_URL_PROXY, but in this\n    // method we use an iframe initialized to about:blank and embed the proxy\n    // script before calling loadSVG on the iframe's contentWindow\n    // @NOTE: this is a workaround for the image issue with EMBED_STRATEGY_IFRAME_INNERHTML\n    //        in safari; it also works in firefox\n    EMBED_STRATEGY_IFRAME_PROXY = 7,\n\n    // Embed in an img tag via data:url, downloading stylesheet separately, and\n    // injecting it into the data:url of SVG text before embedding\n    // @NOTE: this method seems to be more performant on IE\n    EMBED_STRATEGY_DATA_URL_IMG = 8;\n\n/*jshint unused:false*/\n\nif (typeof $ === 'undefined') {\n    throw new Error('jQuery is required');\n}\n\n/**\n * The one global object for Crocodoc JavaScript.\n * @namespace\n */\nvar Crocodoc = (function () {\n\n    'use strict';\n\n    var components = {},\n        utilities = {};\n\n    /**\n     * Find circular dependencies in component mixins\n     * @param   {string} componentName   The component name that is being added\n     * @param   {Array} dependencies  Array of component mixin dependencies\n     * @param   {void} path           String used to keep track of depencency graph\n     * @returns {void}\n     */\n    function findCircularDependencies(componentName, dependencies, path) {\n        var i;\n        path = path || componentName;\n        for (i = 0; i < dependencies.length; ++i) {\n            if (componentName === dependencies[i]) {\n                throw new Error('Circular dependency detected: ' + path + '->' + dependencies[i]);\n            } else if (components[dependencies[i]]) {\n                findCircularDependencies(componentName, components[dependencies[i]].mixins, path + '->' + dependencies[i]);\n            }\n        }\n    }\n\n    return {\n        // Zoom, scroll, page status, layout constants\n        ZOOM_FIT_WIDTH:                 ZOOM_FIT_WIDTH,\n        ZOOM_FIT_HEIGHT:                ZOOM_FIT_HEIGHT,\n        ZOOM_AUTO:                      ZOOM_AUTO,\n        ZOOM_IN:                        ZOOM_IN,\n        ZOOM_OUT:                       ZOOM_OUT,\n\n        SCROLL_PREVIOUS:                SCROLL_PREVIOUS,\n        SCROLL_NEXT:                    SCROLL_NEXT,\n\n        LAYOUT_VERTICAL:                LAYOUT_VERTICAL,\n        LAYOUT_VERTICAL_SINGLE_COLUMN:  LAYOUT_VERTICAL_SINGLE_COLUMN,\n        LAYOUT_HORIZONTAL:              LAYOUT_HORIZONTAL,\n        LAYOUT_PRESENTATION:            LAYOUT_PRESENTATION,\n        LAYOUT_PRESENTATION_TWO_PAGE:   LAYOUT_PRESENTATION_TWO_PAGE,\n        LAYOUT_TEXT:                    LAYOUT_TEXT,\n\n        // The number of times to retry loading an asset before giving up\n        ASSET_REQUEST_RETRIES: 1,\n\n        // templates exposed to allow more customization\n        viewerTemplate: VIEWER_HTML_TEMPLATE,\n        pageTemplate: PAGE_HTML_TEMPLATE,\n\n        // exposed for testing purposes only\n        // should not be accessed directly otherwise\n        components: components,\n        utilities: utilities,\n\n        /**\n         * Create and return a viewer instance initialized with the given parameters\n         * @param {string|Element|jQuery} el The element to bind the viewer to\n         * @param {Object} config            The viewer configuration parameters\n         * @returns {Object}                 The viewer instance\n         */\n        createViewer: function (el, config) {\n            return new Crocodoc.Viewer(el, config);\n        },\n\n        /**\n         * Get a viewer instance by id\n         * @param {number} id   The id\n         * @returns {Object}    The viewer instance\n         */\n        getViewer: function (id) {\n            return Crocodoc.Viewer.get(id);\n        },\n\n        /**\n         * Register a new component\n         * @param  {string} name      The (unique) name of the component\n         * @param  {Array} mixins     Array of component names to instantiate and pass as mixinable objects to the creator method\n         * @param  {Function} creator Factory function used to create an instance of the component\n         * @returns {void}\n         */\n        addComponent: function (name, mixins, creator) {\n            if (mixins instanceof Function) {\n                creator = mixins;\n                mixins = [];\n            }\n            // make sure this component won't cause a circular mixin dependency\n            findCircularDependencies(name, mixins);\n            components[name] = {\n                mixins: mixins,\n                creator: creator\n            };\n        },\n\n        /**\n         * Create and return an instance of the named component\n         * @param  {string} name The name of the component to create\n         * @param  {Crocodoc.Scope} scope The scope object to create the component on\n         * @returns {?Object}     The component instance or null if the component doesn't exist\n         */\n        createComponent: function (name, scope) {\n            var component = components[name];\n\n            if (component) {\n                var args = [];\n                for (var i = 0; i < component.mixins.length; ++i) {\n                    args.push(this.createComponent(component.mixins[i], scope));\n                }\n                args.unshift(scope);\n                return component.creator.apply(component.creator, args);\n            }\n\n            return null;\n        },\n\n        /**\n         * Register a new Crocodoc plugin\n         * @param  {string} name      The (unique) name of the plugin\n         * @param  {Function} creator Factory function used to create an instance of the plugin\n         * @returns {void}\n         */\n        addPlugin: function (name, creator) {\n            this.addComponent('plugin-' + name, creator);\n        },\n\n        /**\n         * Register a new Crocodoc data provider\n         * @param {string} modelName The model name this data provider provides\n         * @param {Function} creator Factory function used to create an instance of the data provider.\n         */\n        addDataProvider: function(modelName, creator) {\n            this.addComponent('data-provider-' + modelName, creator);\n        },\n\n        /**\n         * Register a new utility\n         * @param  {string} name    The (unique) name of the utility\n         * @param  {Function} creator Factory function used to create an instance of the utility\n         * @returns {void}\n         */\n        addUtility: function (name, creator) {\n            utilities[name] = {\n                creator: creator,\n                instance: null\n            };\n        },\n\n        /**\n         * Retrieve the named utility\n         * @param {string} name The name of the utility to retrieve\n         * @returns {?Object}    The utility or null if the utility doesn't exist\n         */\n        getUtility: function (name) {\n            var utility = utilities[name];\n\n            if (utility) {\n                if (!utility.instance) {\n                    utility.instance = utility.creator(this);\n                }\n\n                return utility.instance;\n            }\n\n            return null;\n        }\n    };\n})();\n\n(function () {\n\n    'use strict';\n\n    /**\n     * Scope class used for component scoping (creating, destroying, broadcasting messages)\n     * @constructor\n     */\n    Crocodoc.Scope = function Scope(config) {\n\n        //----------------------------------------------------------------------\n        // Private\n        //----------------------------------------------------------------------\n\n        var util = Crocodoc.getUtility('common');\n\n        var instances = [],\n            messageQueue = [],\n            dataProviders = {},\n            ready = false;\n\n        /**\n         * Broadcast a message to all components in this scope that have registered\n         * a listener for the named message type\n         * @param  {string} messageName The message name\n         * @param  {any} data The message data\n         * @returns {void}\n         * @private\n         */\n        function broadcast(messageName, data) {\n            var i, len, instance, messages;\n            for (i = 0, len = instances.length; i < len; ++i) {\n                instance = instances[i];\n                if (!instance) {\n                    continue;\n                }\n                messages = instance.messages || [];\n\n                if (util.inArray(messageName, messages) !== -1) {\n                    if (util.isFn(instance.onmessage)) {\n                        instance.onmessage.call(instance, messageName, data);\n                    }\n                }\n            }\n        }\n\n        /**\n         * Broadcasts any (pageavailable) messages that were queued up\n         * before the viewer was ready\n         * @returns {void}\n         * @private\n         */\n        function broadcastQueuedMessages() {\n            var message;\n            while (messageQueue.length) {\n                message = messageQueue.shift();\n                broadcast(message.name, message.data);\n            }\n            messageQueue = null;\n        }\n\n        /**\n         * Call the destroy method on a component instance if it exists and the\n         * instance has not already been destroyed\n         * @param   {Object} instance The component instance\n         * @returns {void}\n         */\n        function destroyComponent(instance) {\n            if (util.isFn(instance.destroy) && !instance._destroyed) {\n                instance.destroy();\n                instance._destroyed = true;\n            }\n        }\n\n        //----------------------------------------------------------------------\n        // Public\n        //----------------------------------------------------------------------\n\n        config.dataProviders = config.dataProviders || {};\n\n        /**\n         * Create and return an instance of the named component,\n         * and add it to the list of instances in this scope\n         * @param  {string} componentName The name of the component to create\n         * @returns {?Object}     The component instance or null if the component doesn't exist\n         */\n        this.createComponent = function (componentName) {\n            var instance = Crocodoc.createComponent(componentName, this);\n            if (instance) {\n                instance.componentName = componentName;\n                instances.push(instance);\n            }\n            return instance;\n        };\n\n        /**\n         * Remove and call the destroy method on a component instance\n         * @param  {Object} instance The component instance to remove\n         * @returns {void}\n         */\n        this.destroyComponent = function (instance) {\n            var i, len;\n\n            for (i = 0, len = instances.length; i < len; ++i) {\n                if (instance === instances[i]) {\n                    destroyComponent(instance);\n                    instances.splice(i, 1);\n                    break;\n                }\n            }\n        };\n\n        /**\n         * Remove and call the destroy method on all instances in this scope\n         * @returns {void}\n         */\n        this.destroy = function () {\n            var i, len, instance,\n                components = instances.slice();\n\n            for (i = 0, len = components.length; i < len; ++i) {\n                instance = components[i];\n                destroyComponent(instance);\n            }\n            instances = [];\n            dataProviders = {};\n        };\n\n        /**\n         * Broadcast a message or queue it until the viewer is ready\n         * @param   {string} name The name of the message\n         * @param   {*} data The message data\n         * @returns {void}\n         */\n        this.broadcast = function (messageName, data) {\n            if (ready) {\n                broadcast(messageName, data);\n            } else {\n                messageQueue.push({ name: messageName, data: data });\n            }\n        };\n\n        /**\n         * Passthrough method to the framework that retrieves utilities.\n         * @param {string} name The name of the utility to retrieve\n         * @returns {?Object}    An object if the utility is found or null if not\n         */\n        this.getUtility = function (name) {\n            return Crocodoc.getUtility(name);\n        };\n\n        /**\n         * Get the config object associated with this scope\n         * @returns {Object} The config object\n         */\n        this.getConfig = function () {\n            return config;\n        };\n\n        /**\n         * Tell the scope that the viewer is ready and broadcast queued messages\n         * @returns {void}\n         */\n        this.ready = function () {\n            if (!ready) {\n                ready = true;\n                broadcastQueuedMessages();\n            }\n        };\n\n        /**\n         * Get a model object from a data provider. If the objectType is listed\n         * in config.dataProviders, this will get the value from the data\n         * provider that is specified in that map instead.\n         * @param {string} objectType The type of object to retrieve ('page-svg', 'page-text', etc)\n         * @param {string} objectKey  The key of the object to retrieve\n         * @returns {$.Promise}\n         */\n        this.get = function(objectType, objectKey) {\n            var newObjectType = config.dataProviders[objectType] || objectType;\n\n            var provider = this.getDataProvider(newObjectType);\n            if (provider) {\n                return provider.get(objectType, objectKey);\n            }\n            return $.Deferred().reject('data-provider not found').promise();\n        };\n\n        /**\n         * Get an instance of a data provider. Ignores config.dataProviders\n         * overrides.\n         * @param {string} objectType The type of object to retrieve a data provider for ('page-svg', 'page-text', etc)\n         * @returns {Object} The data provider\n         */\n        this.getDataProvider = function (objectType) {\n            var provider;\n            if (dataProviders[objectType]) {\n                provider = dataProviders[objectType];\n            } else {\n                provider = this.createComponent('data-provider-' + objectType);\n                dataProviders[objectType] = provider;\n            }\n\n            return provider;\n        };\n    };\n})();\n\n(function () {\n    'use strict';\n\n    /**\n     * Build an event object for the given type and data\n     * @param   {string} type The event type\n     * @param   {Object} data The event data\n     * @returns {Object}      The event object\n     */\n    function buildEventObject(type, data) {\n        var isDefaultPrevented = false;\n        return {\n            type: type,\n            data: data,\n\n            /**\n             * Prevent the default action for this event\n             * @returns {void}\n             */\n            preventDefault: function () {\n                isDefaultPrevented = true;\n            },\n\n            /**\n             * Return true if preventDefault() has been called on this event\n             * @returns {Boolean}\n             */\n            isDefaultPrevented: function () {\n                return isDefaultPrevented;\n            }\n        };\n    }\n\n    /**\n     * An object that is capable of generating custom events and also\n     * executing handlers for events when they occur.\n     * @constructor\n     */\n    Crocodoc.EventTarget = function() {\n\n        /**\n         * Map of events to handlers. The keys in the object are the event names.\n         * The values in the object are arrays of event handler functions.\n         * @type {Object}\n         * @private\n         */\n        this._handlers = {};\n    };\n\n    Crocodoc.EventTarget.prototype = {\n\n        // restore constructor\n        constructor: Crocodoc.EventTarget,\n\n        /**\n         * Adds a new event handler for a particular type of event.\n         * @param {string} type The name of the event to listen for.\n         * @param {Function} handler The function to call when the event occurs.\n         * @returns {void}\n         */\n        on: function(type, handler) {\n            if (typeof this._handlers[type] === 'undefined') {\n                this._handlers[type] = [];\n            }\n\n            this._handlers[type].push(handler);\n        },\n\n        /**\n         * Fires an event with the given name and data.\n         * @param {string} type The type of event to fire.\n         * @param {Object} data An object with properties that should end up on\n         *      the event object for the given event.\n         * @returns {Object} The event object\n         */\n        fire: function(type, data) {\n            var handlers,\n                i,\n                len,\n                event = buildEventObject(type, data);\n\n            // if there are handlers for the event, call them in order\n            handlers = this._handlers[event.type];\n            if (handlers instanceof Array) {\n                // @NOTE: do a concat() here to create a copy of the handlers array,\n                // so that if another handler is removed of the same type, it doesn't\n                // interfere with the handlers array\n                handlers = handlers.concat();\n                for (i = 0, len = handlers.length; i < len; i++) {\n                    if (handlers[i]) {\n                        handlers[i].call(this, event);\n                    }\n                }\n            }\n\n            // call handlers for `all` event type\n            handlers = this._handlers.all;\n            if (handlers instanceof Array) {\n                // @NOTE: do a concat() here to create a copy of the handlers array,\n                // so that if another handler is removed of the same type, it doesn't\n                // interfere with the handlers array\n                handlers = handlers.concat();\n                for (i = 0, len = handlers.length; i < len; i++) {\n                    if (handlers[i]) {\n                        handlers[i].call(this, event);\n                    }\n                }\n            }\n\n            return event;\n        },\n\n        /**\n         * Removes an event handler from a given event.\n         * If the handler is not provided, remove all handlers of the given type.\n         * @param {string} type The name of the event to remove from.\n         * @param {Function} handler The function to remove as a handler.\n         * @returns {void}\n         */\n        off: function(type, handler) {\n            var handlers = this._handlers[type],\n                i,\n                len;\n\n            if (handlers instanceof Array) {\n                if (!handler) {\n                    handlers.length = 0;\n                    return;\n                }\n                for (i = 0, len = handlers.length; i < len; i++) {\n                    if (handlers[i] === handler || handlers[i].handler === handler) {\n                        handlers.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        },\n\n\n        /**\n         * Adds a new event handler that should be removed after it's been triggered once.\n         * @param {string} type The name of the event to listen for.\n         * @param {Function} handler The function to call when the event occurs.\n         * @returns {void}\n         */\n        one: function(type, handler) {\n            var self = this,\n                proxy = function (event) {\n                    self.off(type, proxy);\n                    handler.call(self, event);\n                };\n            proxy.handler = handler;\n            this.on(type, proxy);\n        }\n    };\n\n})();\n\n/**\n * The Crocodoc.Viewer namespace\n * @namespace\n */\n(function () {\n    'use strict';\n\n    var viewerInstanceCount = 0,\n        instances = {};\n\n    /**\n     * Crocodoc.Viewer constructor\n     * @param {jQuery|string|Element} el The element to wrap\n     * @param {Object} options           Configuration options\n     * @constructor\n     */\n    Crocodoc.Viewer = function (el, options) {\n        // call the EventTarget constructor to init handlers\n        Crocodoc.EventTarget.call(this);\n\n        var util = Crocodoc.getUtility('common');\n        var layout,\n            $el = $(el),\n            config = util.extend(true, {}, Crocodoc.Viewer.defaults, options),\n            scope = new Crocodoc.Scope(config),\n            viewerBase = scope.createComponent('viewer-base');\n\n        //Container exists?\n        if ($el.length === 0) {\n            throw new Error('Invalid container element');\n        }\n\n        this.id = config.id = ++viewerInstanceCount;\n        config.api = this;\n        config.$el = $el;\n        // register this instance\n        instances[this.id] = this;\n\n        function init() {\n            viewerBase.init();\n        }\n\n        //--------------------------------------------------------------------------\n        // Public\n        //--------------------------------------------------------------------------\n\n        /**\n         * Destroy the viewer instance\n         * @returns {void}\n         */\n        this.destroy = function () {\n            // unregister this instance\n            delete instances[config.id];\n\n            // broadcast a destroy message\n            scope.broadcast('destroy');\n\n            // destroy all components and plugins in this scope\n            scope.destroy();\n        };\n\n        /**\n         * Intiate loading of document assets\n         * @returns {void}\n         */\n        this.load = function () {\n            viewerBase.loadAssets();\n        };\n\n        /**\n         * Set the layout to the given mode, destroying and cleaning up the current\n         * layout if there is one\n         * @param  {string} mode The layout mode\n         * @returns {void}\n         */\n        this.setLayout = function (mode) {\n            // removing old reference to prevent errors when handling layoutchange message\n            layout = null;\n            layout = viewerBase.setLayout(mode);\n        };\n\n        /**\n         * Zoom to the given value\n         * @param  {float|string} val Numeric zoom level to zoom to or one of:\n         *                            Crocodoc.ZOOM_IN\n         *                            Crocodoc.ZOOM_OUT\n         *                            Crocodoc.ZOOM_AUTO\n         *                            Crocodoc.ZOOM_FIT_WIDTH\n         *                            Crocodoc.ZOOM_FIT_HEIGHT\n         * @returns {void}\n         */\n        this.zoom = function (val) {\n            // adjust for page scale if passed value is a number\n            var valFloat = parseFloat(val);\n            if (layout) {\n                if (valFloat) {\n                    val = valFloat / (config.pageScale || 1);\n                }\n                layout.setZoom(val);\n            }\n        };\n\n        /**\n         * Scroll to the given page\n         * @TODO: rename to scrollToPage when possible (and remove this for non-\n         * page-based viewers)\n         * @param  {int|string} page Page number or one of:\n         *                           Crocodoc.SCROLL_PREVIOUS\n         *                           Crocodoc.SCROLL_NEXT\n         * @returns {void}\n         */\n        this.scrollTo = function (page) {\n            if (layout && util.isFn(layout.scrollTo)) {\n                layout.scrollTo(page);\n            }\n        };\n\n        /**\n         * Scrolls by the given pixel amount from the current location\n         * @param  {int} left Left offset to scroll to\n         * @param  {int} top  Top offset to scroll to\n         * @returns {void}\n         */\n        this.scrollBy = function (left, top) {\n            if (layout) {\n                layout.scrollBy(left, top);\n            }\n        };\n\n        /**\n         * Focuses the viewport so it can be natively scrolled with the keyboard\n         * @returns {void}\n         */\n        this.focus = function () {\n            if (layout) {\n                layout.focus();\n            }\n        };\n\n        /**\n         * Enable text selection, loading text assets per page if necessary\n         * @returns {void}\n         */\n        this.enableTextSelection = function () {\n            $el.toggleClass(CSS_CLASS_TEXT_DISABLED, false);\n            if (!config.enableTextSelection) {\n                config.enableTextSelection = true;\n                scope.broadcast('textenabledchange', { enabled: true });\n            }\n        };\n\n        /**\n         * Disable text selection, hiding text layer on pages if it's already there\n         * and disabling the loading of new text assets\n         * @returns {void}\n         */\n        this.disableTextSelection = function () {\n            $el.toggleClass(CSS_CLASS_TEXT_DISABLED, true);\n            if (config.enableTextSelection) {\n                config.enableTextSelection = false;\n                scope.broadcast('textenabledchange', { enabled: false });\n            }\n        };\n\n        /**\n         * Enable links\n         * @returns {void}\n         */\n        this.enableLinks = function () {\n            if (!config.enableLinks) {\n                $el.removeClass(CSS_CLASS_LINKS_DISABLED);\n                config.enableLinks = true;\n            }\n        };\n\n        /**\n         * Disable links\n         * @returns {void}\n         */\n        this.disableLinks = function () {\n            if (config.enableLinks) {\n                $el.addClass(CSS_CLASS_LINKS_DISABLED);\n                config.enableLinks = false;\n            }\n        };\n\n        /**\n         * Force layout update\n         * @returns {void}\n         */\n        this.updateLayout = function () {\n            if (layout) {\n                layout.update();\n            }\n        };\n\n        init();\n    };\n\n    Crocodoc.Viewer.prototype = new Crocodoc.EventTarget();\n    Crocodoc.Viewer.prototype.constructor = Crocodoc.Viewer;\n\n    /**\n     * Get a viewer instance by id\n     * @param {number} id   The id\n     * @returns {Object}    The viewer instance\n     */\n    Crocodoc.Viewer.get = function (id) {\n        return instances[id];\n    };\n\n    // Global defaults\n    Crocodoc.Viewer.defaults = {\n        // the url to load the assets from (required)\n        url: null,\n\n        // document viewer layout\n        layout: LAYOUT_VERTICAL,\n\n        // initial zoom level\n        zoom: ZOOM_AUTO,\n\n        // page to start on\n        page: 1,\n\n        // enable/disable text layer\n        enableTextSelection: true,\n\n        // enable/disable links layer\n        enableLinks: true,\n\n        // enable/disable click-and-drag\n        enableDragging: false,\n\n        // query string parameters to append to all asset requests\n        queryParams: null,\n\n        // plugin configs\n        plugins: {},\n\n        // whether to use the browser window as the viewport into the document (this\n        // is useful when the document should take up the entire browser window, e.g.,\n        // on mobile devices)\n        useWindowAsViewport: false,\n\n        //--------------------------------------------------------------------------\n        // The following are undocumented, internal, or experimental options,\n        // which are very subject to change and likely to be broken.\n        // --\n        // USE AT YOUR OWN RISK!\n        //--------------------------------------------------------------------------\n\n        // whether or not the conversion is finished (eg., pages are ready to be loaded)\n        conversionIsComplete: true,\n\n        // template for loading assets... this should rarely (if ever) change\n        template: {\n            svg: 'page-{{page}}.svg',\n            img: 'page-{{page}}.png',\n            html: 'text-{{page}}.html',\n            css: 'stylesheet.css',\n            json: 'info.json'\n        },\n\n        // default data-providers\n        dataProviders: {\n            metadata: 'metadata',\n            stylesheet: 'stylesheet',\n            'page-svg': 'page-svg',\n            'page-text': 'page-text',\n            'page-img': 'page-img'\n        },\n\n        // page to start/end on (pages outside this range will not be shown)\n        pageStart: null,\n        pageEnd: null,\n\n        // whether or not to automatically load page one assets immediately (even\n        // if conversion is not yet complete)\n        autoloadFirstPage: true,\n\n        // zoom levels are relative to the viewport size,\n        // and the dynamic zoom levels (auto, fitwidth, etc) will be added into the mix\n        zoomLevels: [0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2.0, 3.0]\n    };\n})();\n\n\nCrocodoc.addDataProvider('metadata', function(scope) {\n    'use strict';\n\n    var ajax = scope.getUtility('ajax'),\n        util = scope.getUtility('common'),\n        config = scope.getConfig();\n\n    /**\n     * Process metadata json and return the result\n     * @param   {string} json The original JSON text\n     * @returns {string}      The processed JSON text\n     * @private\n     */\n    function processJSONContent(json) {\n        return util.parseJSON(json);\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        /**\n         * Retrieve the info.json asset from the server\n         * @returns {$.Promise} A promise with an additional abort() method that will abort the XHR request.\n         */\n        get: function() {\n            var url = this.getURL(),\n                $promise = ajax.fetch(url, Crocodoc.ASSET_REQUEST_RETRIES);\n\n            // @NOTE: promise.then() creates a new promise, which does not copy\n            // custom properties, so we need to create a futher promise and add\n            // an object with the abort method as the new target\n            return $promise.then(processJSONContent).promise({\n                abort: $promise.abort\n            });\n        },\n\n        /**\n         * Build and return the URL to the metadata JSON\n         * @returns {string}         The URL\n         */\n        getURL: function () {\n            var jsonPath = config.template.json;\n            return config.url + jsonPath + config.queryString;\n        }\n    };\n});\n\nCrocodoc.addDataProvider('page-img', function(scope) {\n    'use strict';\n\n    var util = scope.getUtility('common'),\n        config = scope.getConfig();\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        /**\n         * Retrieve the page image asset from the server\n         * @param {string} objectType The type of data being requested\n         * @param {number} pageNum The page number for which to request the page image\n         * @returns {$.Promise}    A promise with an additional abort() method that will abort the img request.\n         */\n        get: function(objectType, pageNum) {\n            var img = this.getImage(),\n                retries = Crocodoc.ASSET_REQUEST_RETRIES,\n                loaded = false,\n                url = this.getURL(pageNum),\n                $deferred = $.Deferred();\n\n            function loadImage() {\n                img.setAttribute('src', url);\n            }\n\n            function abortImage() {\n                img.removeAttribute('src');\n            }\n\n            // add load and error handlers\n            img.onload = function () {\n                loaded = true;\n                $deferred.resolve(img);\n            };\n\n            img.onerror = function () {\n                if (retries > 0) {\n                    retries--;\n                    abortImage();\n                    loadImage();\n                } else {\n                    img = null;\n                    loaded = false;\n                    $deferred.reject({\n                        error: 'image failed to load',\n                        resource: url\n                    });\n                }\n            };\n\n            // load the image\n            loadImage();\n\n            return $deferred.promise({\n                abort: function () {\n                    if (!loaded) {\n                        abortImage();\n                        $deferred.reject();\n                    }\n                }\n            });\n        },\n\n        /**\n         * Build and return the URL to the PNG asset for the specified page\n         * @param   {number} pageNum The page number\n         * @returns {string}         The URL\n         */\n        getURL: function (pageNum) {\n            var imgPath = util.template(config.template.img, { page: pageNum });\n            return config.url + imgPath + config.queryString;\n        },\n\n        /**\n         * Create and return a new image element (used for testing purporses)\n         * @returns {Image}\n         */\n        getImage: function () {\n            return new Image();\n        }\n    };\n});\n\nCrocodoc.addDataProvider('page-svg', function(scope) {\n    'use strict';\n\n    var MAX_DATA_URLS = 1000;\n\n    var util = scope.getUtility('common'),\n        ajax = scope.getUtility('ajax'),\n        browser = scope.getUtility('browser'),\n        subpx = scope.getUtility('subpx'),\n        config = scope.getConfig(),\n        destroyed = false,\n        cache = {},\n        // NOTE: there are cases where the stylesheet link tag will be self-\n        // closing, so check for both cases\n        inlineCSSRegExp = /<xhtml:link[^>]*>(\\s*<\\/xhtml:link>)?/i;\n\n    /**\n     * Interpolate CSS text into the SVG text\n     * @param   {string} text    The SVG text\n     * @param   {string} cssText The CSS text\n     * @returns {string}         The full SVG text\n     */\n    function interpolateCSSText(text, cssText) {\n        // CSS text\n        var stylesheetHTML = '<style>' + cssText + '</style>';\n\n        // If using Firefox with no subpx support, add \"text-rendering\" CSS.\n        // @NOTE(plai): We are not adding this to Chrome because Chrome supports \"textLength\"\n        // on tspans and because the \"text-rendering\" property slows Chrome down significantly.\n        // In Firefox, we're waiting on this bug: https://bugzilla.mozilla.org/show_bug.cgi?id=890692\n        // @TODO: Use feature detection instead (textLength)\n        if (browser.firefox && !subpx.isSubpxSupported()) {\n            stylesheetHTML += '<style>text { text-rendering: geometricPrecision; }</style>';\n        }\n\n        // inline the CSS!\n        text = text.replace(inlineCSSRegExp, stylesheetHTML);\n\n        return text;\n    }\n\n    /**\n     * Process SVG text and return the embeddable result\n     * @param   {string} text The original SVG text\n     * @returns {string}      The processed SVG text\n     * @private\n     */\n    function processSVGContent(text) {\n        if (destroyed) {\n            return;\n        }\n\n        var query = config.queryString.replace('&', '&#38;'),\n            dataUrlCount;\n\n        dataUrlCount = util.countInStr(text, 'xlink:href=\"data:image');\n        // remove data:urls from the SVG content if the number exceeds MAX_DATA_URLS\n        if (dataUrlCount > MAX_DATA_URLS) {\n            // remove all data:url images that are smaller than 5KB\n            text = text.replace(/<image[\\s\\w-_=\"]*xlink:href=\"data:image\\/[^\"]{0,5120}\"[^>]*>/ig, '');\n        }\n\n        // @TODO: remove this, because we no longer use any external assets in this way\n        // modify external asset urls for absolute path\n        text = text.replace(/href=\"([^\"#:]*)\"/g, function (match, group) {\n            return 'href=\"' + config.url + group + query + '\"';\n        });\n\n        return scope.get('stylesheet').then(function (cssText) {\n            return interpolateCSSText(text, cssText);\n        });\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        /**\n         * Retrieve a SVG asset from the server\n         * @param {string} objectType The type of data being requested\n         * @param {number} pageNum The page number for which to request the SVG\n         * @returns {$.Promise}    A promise with an additional abort() method that will abort the XHR request.\n         */\n        get: function(objectType, pageNum) {\n            var url = this.getURL(pageNum),\n                $promise;\n\n            if (cache[pageNum]) {\n                return cache[pageNum];\n            }\n\n            $promise = ajax.fetch(url, Crocodoc.ASSET_REQUEST_RETRIES);\n\n            // @NOTE: promise.then() creates a new promise, which does not copy\n            // custom properties, so we need to create a futher promise and add\n            // an object with the abort method as the new target\n            cache[pageNum] = $promise.then(processSVGContent).promise({\n                abort: function () {\n                    $promise.abort();\n                    if (cache) {\n                        delete cache[pageNum];\n                    }\n                }\n            });\n            return cache[pageNum];\n        },\n\n        /**\n         * Build and return the URL to the SVG asset for the specified page\n         * @param   {number} pageNum The page number\n         * @returns {string}         The URL\n         */\n        getURL: function (pageNum) {\n            var svgPath = util.template(config.template.svg, { page: pageNum });\n            return config.url + svgPath + config.queryString;\n        },\n\n        /**\n         * Cleanup the data-provider\n         * @returns {void}\n         */\n        destroy: function () {\n            destroyed = true;\n            util = ajax = subpx = browser = config = cache = null;\n        }\n    };\n});\n\nCrocodoc.addDataProvider('page-text', function(scope) {\n    'use strict';\n\n    var MAX_TEXT_BOXES = 256;\n\n    var util = scope.getUtility('common'),\n        ajax = scope.getUtility('ajax'),\n        config = scope.getConfig(),\n        destroyed = false,\n        cache = {};\n\n    /**\n     * Process HTML text and return the embeddable result\n     * @param   {string} text The original HTML text\n     * @returns {string}      The processed HTML text\n     * @private\n     */\n    function processTextContent(text) {\n        if (destroyed) {\n            return;\n        }\n\n        // in the text layer, divs are only used for text boxes, so\n        // they should provide an accurate count\n        var numTextBoxes = util.countInStr(text, '<div');\n        // too many textboxes... don't load this page for performance reasons\n        if (numTextBoxes > MAX_TEXT_BOXES) {\n            return '';\n        }\n\n        // remove reference to the styles\n        text = text.replace(/<link rel=\"stylesheet\".*/, '');\n\n        return text;\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        /**\n         * Retrieve a text asset from the server\n         * @param {string} objectType The type of data being requested\n         * @param {number} pageNum The page number for which to request the text HTML\n         * @returns {$.Promise}    A promise with an additional abort() method that will abort the XHR request.\n         */\n        get: function(objectType, pageNum) {\n            var url = this.getURL(pageNum),\n                $promise;\n\n            if (cache[pageNum]) {\n                return cache[pageNum];\n            }\n\n            $promise = ajax.fetch(url, Crocodoc.ASSET_REQUEST_RETRIES);\n\n            // @NOTE: promise.then() creates a new promise, which does not copy\n            // custom properties, so we need to create a futher promise and add\n            // an object with the abort method as the new target\n            cache[pageNum] = $promise.then(processTextContent).promise({\n                abort: function () {\n                    $promise.abort();\n                    if (cache) {\n                        delete cache[pageNum];\n                    }\n                }\n            });\n            return cache[pageNum];\n        },\n\n        /**\n         * Build and return the URL to the HTML asset for the specified page\n         * @param   {number} pageNum The page number\n         * @returns {string}         The URL\n         */\n        getURL: function (pageNum) {\n            var textPath = util.template(config.template.html, { page: pageNum });\n            return config.url + textPath + config.queryString;\n        },\n\n        /**\n         * Cleanup the data-provider\n         * @returns {void}\n         */\n        destroy: function () {\n            destroyed = true;\n            util = ajax = config = cache = null;\n        }\n    };\n});\n\nCrocodoc.addDataProvider('stylesheet', function(scope) {\n    'use strict';\n\n    var ajax = scope.getUtility('ajax'),\n        browser = scope.getUtility('browser'),\n        config = scope.getConfig(),\n        $cachedPromise;\n\n    /**\n     * Process stylesheet text and return the embeddable result\n     * @param   {string} text The original CSS text\n     * @returns {string}      The processed CSS text\n     * @private\n     */\n    function processStylesheetContent(text) {\n        // @NOTE: There is a bug in IE that causes the text layer to\n        // not render the font when loaded for a second time (i.e.,\n        // destroy and recreate a viewer for the same document), so\n        // namespace the font-family so there is no collision\n        if (browser.ie) {\n            text = text.replace(/font-family:[\\s\\\"\\']*([\\w-]+)\\b/g,\n                '$0-' + config.id);\n        }\n\n        return text;\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        /**\n         * Retrieve the stylesheet.css asset from the server\n         * @returns {$.Promise} A promise with an additional abort() method that will abort the XHR request.\n         */\n        get: function() {\n            if ($cachedPromise) {\n                return $cachedPromise;\n            }\n\n            var $promise = ajax.fetch(this.getURL(), Crocodoc.ASSET_REQUEST_RETRIES);\n\n            // @NOTE: promise.then() creates a new promise, which does not copy\n            // custom properties, so we need to create a futher promise and add\n            // an object with the abort method as the new target\n            $cachedPromise = $promise.then(processStylesheetContent).promise({\n                abort: function () {\n                    $promise.abort();\n                    $cachedPromise = null;\n                }\n            });\n            return $cachedPromise;\n        },\n\n        /**\n         * Build and return the URL to the stylesheet CSS\n         * @returns {string}         The URL\n         */\n        getURL: function () {\n            var cssPath = config.template.css;\n            return config.url + cssPath + config.queryString;\n        },\n\n        /**\n         * Cleanup the data-provider\n         * @returns {void}\n         */\n        destroy: function () {\n            ajax = browser = config = null;\n            $cachedPromise = null;\n        }\n    };\n});\n\nCrocodoc.addUtility('ajax', function (framework) {\n\n    'use strict';\n\n    var util = framework.getUtility('common'),\n        support = framework.getUtility('support'),\n        urlUtil = framework.getUtility('url');\n\n    /**\n     * Creates a request object to call the success/fail handlers on\n     * @param {XMLHttpRequest} req The request object to wrap\n     * @returns {Object} The request object\n     * @private\n     */\n    function createRequestWrapper(req) {\n        var status,\n            statusText,\n            responseText;\n        try {\n            status = req.status;\n            statusText = req.statusText;\n            responseText = req.responseText;\n        } catch (e) {\n            status = 0;\n            statusText = '';\n            responseText = null;\n        }\n        return {\n            status: status,\n            statusText: statusText,\n            responseText: responseText,\n            rawRequest: req\n        };\n    }\n\n    /**\n    * Returns true if the url is referencing a local file\n    * @param   {string}  url The URL\n    * @param   {Boolean}\n    */\n    function isRequestToLocalFile(url) {\n        return urlUtil.parse(url).protocol === 'file:';\n    }\n\n    /**\n     * Return true if the given status code looks successful\n     * @param   {number}  status The http status code\n     * @returns {Boolean}\n     */\n    function isSuccessfulStatusCode(status) {\n        return status >= 200 && status < 300 || status === 304;\n    }\n\n    /**\n     * Parse AJAX options\n     * @param   {Object} options The options\n     * @returns {Object}         The parsed options\n     */\n    function parseOptions(options) {\n        options = util.extend(true, {}, options || {});\n        options.method = options.method || 'GET';\n        options.headers = options.headers || [];\n        options.data = options.data || '';\n\n        if (typeof options.data !== 'string') {\n            options.data = $.param(options.data);\n            if (options.method !== 'GET') {\n                options.data = options.data;\n                options.headers.push(['Content-Type', 'application/x-www-form-urlencoded']);\n            }\n        }\n        return options;\n    }\n\n    /**\n     * Set XHR headers\n     * @param {XMLHttpRequest} req The request object\n     * @param {Array} headers      Array of headers to set\n     */\n    function setHeaders(req, headers) {\n        var i;\n        for (i = 0; i < headers.length; ++i) {\n            req.setRequestHeader(headers[i][0], headers[i][1]);\n        }\n    }\n\n    /**\n     * Make an XHR request\n     * @param   {string}   url     request URL\n     * @param   {string}   method  request method\n     * @param   {*}        data    request data to send\n     * @param   {Array}    headers request headers\n     * @param   {Function} success success callback function\n     * @param   {Function} fail    fail callback function\n     * @returns {XMLHttpRequest}   Request object\n     * @private\n     */\n    function doXHR(url, method, data, headers, success, fail) {\n        var req = support.getXHR();\n        req.open(method, url, true);\n        req.onreadystatechange = function () {\n            var status;\n            if (req.readyState === 4) { // DONE\n                // remove the onreadystatechange handler,\n                // because it could be called again\n                // @NOTE: we replace it with a noop function, because\n                // IE8 will throw an error if the value is not of type\n                // 'function' when using ActiveXObject\n                req.onreadystatechange = function () {};\n\n                try {\n                    status = req.status;\n                } catch (e) {\n                    // NOTE: IE (9?) throws an error when the request is aborted\n                    fail(req);\n                    return;\n                }\n\n                // status is 0 for successful local file requests, so assume 200\n                if (status === 0 && isRequestToLocalFile(url)) {\n                    status = 200;\n                }\n\n                if (isSuccessfulStatusCode(status)) {\n                    success(req);\n                } else {\n                    fail(req);\n                }\n            }\n        };\n        setHeaders(req, headers);\n        req.send(data);\n        return req;\n    }\n\n    /**\n     * Make an XDR request\n     * @param   {string}   url     request URL\n     * @param   {string}   method  request method\n     * @param   {*}        data    request data to send\n     * @param   {Function} success success callback function\n     * @param   {Function} fail    fail callback function\n     * @returns {XDomainRequest} Request object\n     * @private\n     */\n    function doXDR(url, method, data, success, fail) {\n        var req = support.getXDR();\n        try {\n            req.open(method, url);\n            req.onload = function () { success(req); };\n            // NOTE: IE (8/9) requires onerror, ontimeout, and onprogress\n            // to be defined when making XDR to https servers\n            req.onerror = function () { fail(req); };\n            req.ontimeout = function () { fail(req); };\n            req.onprogress = function () {};\n            req.send(data);\n        } catch (e) {\n            return fail({\n                status: 0,\n                statusText: e.message\n            });\n        }\n        return req;\n    }\n\n    return {\n        /**\n         * Make a raw AJAX request\n         * @param   {string}     url               request URL\n         * @param   {Object}     [options]         AJAX request options\n         * @param   {string}     [options.method]  request method, eg. 'GET', 'POST' (defaults to 'GET')\n         * @param   {Array}      [options.headers] request headers (defaults to [])\n         * @param   {*}          [options.data]    request data to send (defaults to null)\n         * @param   {Function}   [options.success] success callback function\n         * @param   {Function}   [options.fail]    fail callback function\n         * @returns {XMLHttpRequest|XDomainRequest} Request object\n         */\n        request: function (url, options) {\n            var opt = parseOptions(options),\n                method = opt.method,\n                data = opt.data,\n                headers = opt.headers;\n\n            if (method === 'GET' && data) {\n                url = urlUtil.appendQueryParams(url, data);\n                data = '';\n            }\n\n            /**\n             * Function to call on successful AJAX request\n             * @returns {void}\n             * @private\n             */\n            function ajaxSuccess(req) {\n                if (util.isFn(opt.success)) {\n                    opt.success.call(createRequestWrapper(req));\n                }\n                return req;\n            }\n\n            /**\n             * Function to call on failed AJAX request\n             * @returns {void}\n             * @private\n             */\n            function ajaxFail(req) {\n                if (util.isFn(opt.fail)) {\n                    opt.fail.call(createRequestWrapper(req));\n                }\n                return req;\n            }\n\n            // is XHR supported at all?\n            if (!support.isXHRSupported()) {\n                return opt.fail({\n                    status: 0,\n                    statusText: 'AJAX not supported'\n                });\n            }\n\n            // cross-domain request? check if CORS is supported...\n            if (urlUtil.isCrossDomain(url) && !support.isCORSSupported()) {\n                // the browser supports XHR, but not XHR+CORS, so (try to) use XDR\n                return doXDR(url, method, data, ajaxSuccess, ajaxFail);\n            } else {\n                // the browser supports XHR and XHR+CORS, so just do a regular XHR\n                return doXHR(url, method, data, headers, ajaxSuccess, ajaxFail);\n            }\n        },\n\n        /**\n         * Fetch an asset, retrying if necessary\n         * @param {string} url      A url for the desired asset\n         * @param {number} retries  The number of times to retry if the request fails\n         * @returns {$.Promise}     A promise with an additional abort() method that will abort the XHR request.\n         */\n        fetch: function (url, retries) {\n            var req,\n                aborted = false,\n                ajax = this,\n                $deferred = $.Deferred();\n\n            /**\n             * If there are retries remaining, make another attempt, otherwise\n             * give up and reject the deferred\n             * @param   {Object} error The error object\n             * @returns {void}\n             * @private\n             */\n            function retryOrFail(error) {\n                if (retries > 0) {\n                    // if we have retries remaining, make another request\n                    retries--;\n                    req = request();\n                } else {\n                    // finally give up\n                    $deferred.reject(error);\n                }\n            }\n\n            /**\n             * Make an AJAX request for the asset\n             * @returns {XMLHttpRequest|XDomainRequest} Request object\n             * @private\n             */\n            function request() {\n                return ajax.request(url, {\n                    success: function () {\n                        if (!aborted) {\n                            if (this.responseText) {\n                                $deferred.resolve(this.responseText);\n                            } else {\n                                // the response was empty, so consider this a\n                                // failed request\n                                retryOrFail({\n                                    error: 'empty response',\n                                    status: this.status,\n                                    resource: url\n                                });\n                            }\n                        }\n                    },\n                    fail: function () {\n                        if (!aborted) {\n                            retryOrFail({\n                                error: this.statusText,\n                                status: this.status,\n                                resource: url\n                            });\n                        }\n                    }\n                });\n            }\n\n            req = request();\n            return $deferred.promise({\n                abort: function() {\n                    aborted = true;\n                    req.abort();\n                }\n            });\n        }\n    };\n});\n\nCrocodoc.addUtility('browser', function () {\n\n    'use strict';\n\n    var ua = navigator.userAgent,\n        version,\n        browser = {},\n        ios = /ip(hone|od|ad)/i.test(ua),\n        android = /android/i.test(ua),\n        blackberry = /blackberry/i.test(ua),\n        webos = /webos/i.test(ua),\n        kindle = /silk|kindle/i.test(ua),\n        ie = /MSIE|Trident/i.test(ua);\n\n    if (ie) {\n        browser.ie = true;\n        if (/MSIE/i.test(ua)) {\n            version = /MSIE\\s+(\\d+\\.\\d+)/i.exec(ua);\n        } else {\n            version = /Trident.*rv[ :](\\d+\\.\\d+)/.exec(ua);\n        }\n        browser.version = version && parseFloat(version[1]);\n        browser.ielt9 = browser.version < 9;\n        browser.ielt10 = browser.version < 10;\n        browser.ielt11 = browser.version < 11;\n    }\n    if (ios) {\n        browser.ios = true;\n        version = (navigator.appVersion).match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n        browser.version = version && parseFloat(version[1] + '.' + version[2]);\n    }\n    browser.mobile = /mobile/i.test(ua) || ios || android || blackberry || webos || kindle;\n    browser.firefox = /firefox/i.test(ua);\n    if (/safari/i.test(ua)) {\n        browser.chrome = /chrome/i.test(ua);\n        browser.safari = !browser.chrome;\n    }\n    if (browser.safari) {\n        version = (navigator.appVersion).match(/Version\\/(\\d+(\\.\\d+)?)/);\n        browser.version = version && parseFloat(version[1]);\n    }\n\n    return browser;\n});\n\n/**\n * Common utility functions used throughout Crocodoc JS\n */\nCrocodoc.addUtility('common', function () {\n\n    'use strict';\n\n    var DEFAULT_PT2PX_RATIO = 1.33333;\n\n    var util = {};\n\n    util.extend = $.extend;\n    util.each = $.each;\n    util.map = $.map;\n    util.param = $.param;\n    util.parseJSON = $.parseJSON;\n    util.stringifyJSON = typeof window.JSON !== 'undefined' ?\n        window.JSON.stringify : // IE 8+\n        function () {\n            throw new Error('JSON.stringify not supported');\n        };\n\n    return $.extend(util, {\n\n        /**\n         * Left bistect of list, optionally of property of objects in list\n         * @param   {Array} list List of items to bisect\n         * @param   {number} x    The number to bisect against\n         * @param   {string} [prop] Optional property to check on list items instead of using the item itself\n         * @returns {int}      The index of the bisection\n         */\n        bisectLeft: function (list, x, prop) {\n            var val, mid, low = 0, high = list.length;\n            while (low < high) {\n                mid = Math.floor((low + high) / 2);\n                val = prop ? list[mid][prop] : list[mid];\n                if (val < x) {\n                    low = mid + 1;\n                } else {\n                    high = mid;\n                }\n            }\n            return low;\n        },\n\n        /**\n         * Right bistect of list, optionally of property of objects in list\n         * @param   {Array} list List of items to bisect\n         * @param   {number} x    The number to bisect against\n         * @param   {string} [prop] Optional property to check on list items instead of using the item itself\n         * @returns {int}      The index of the bisection\n         */\n        bisectRight: function (list, x, prop) {\n            var val, mid, low = 0, high = list.length;\n            while (low < high) {\n                mid = Math.floor((low + high) / 2);\n                val = prop ? list[mid][prop] : list[mid];\n                if (x < val) {\n                    high = mid;\n                } else {\n                    low = mid + 1;\n                }\n            }\n            return low;\n        },\n\n        /**\n         * Clamp x to range [a,b]\n         * @param   {number} x The value to clamp\n         * @param   {number} a Low value\n         * @param   {number} b High value\n         * @returns {number}   The clamped value\n         */\n        clamp: function (x, a, b) {\n            if (x < a) {\n                return a;\n            } else if (x > b) {\n                return b;\n            }\n            return x;\n        },\n\n        /**\n         * Returns the sign of the given number\n         * @param   {number} value The number\n         * @returns {number}       The sign (-1 or 1), or 0 if value === 0\n         */\n        sign: function(value) {\n            var number = parseInt(value, 10);\n            if (!number) {\n                return number;\n            }\n            return number < 0 ? -1 : 1;\n        },\n\n        /**\n         * Returns true if the given value is a function\n         * @param   {*} val Any value\n         * @returns {Boolean} true if val is a function, false otherwise\n         */\n        isFn: function (val) {\n            return typeof val === 'function';\n        },\n\n        /**\n         * Search for a specified value within an array, and return its index (or -1 if not found)\n         * @param   {*} value       The value to search for\n         * @param   {Array} array   The array to search\n         * @returns {int}           The index of value in array or -1 if not found\n         */\n        inArray: function (value, array) {\n            if (util.isFn(array.indexOf)) {\n                return array.indexOf(value);\n            } else {\n                return $.inArray(value, array);\n            }\n        },\n\n        /**\n         * Constrains the range [low,high] to the range [0,max]\n         * @param   {number} low  The low value\n         * @param   {number} high The high value\n         * @param   {number} max  The max value (0 is implicit min)\n         * @returns {Object}      The range object containing min and max values\n         */\n        constrainRange: function (low, high, max) {\n            var length = high - low;\n\n            if (length < 0) {\n                return {\n                    min: -1,\n                    max: -1\n                };\n            }\n\n            low = util.clamp(low, 0, max);\n            high = util.clamp(low + length, 0, max);\n            if (high - low < length) {\n                low = util.clamp(high - length, 0, max);\n            }\n            return {\n                min: low,\n                max: high\n            };\n        },\n\n        /**\n         * Return the current time since epoch in ms\n         * @returns {int} The current time\n         */\n        now: function () {\n            return (new Date()).getTime();\n        },\n\n        /**\n         * Creates and returns a new, throttled version of the passed function,\n         * that, when invoked repeatedly, will only actually call the original\n         * function at most once per every wait milliseconds\n         * @param   {int}      wait Time to wait between calls in ms\n         * @param   {Function} fn   The function to throttle\n         * @returns {Function}      The throttled function\n         */\n        throttle: function (wait, fn) {\n            var context,\n                args,\n                timeout,\n                result,\n                previous = 0;\n\n            function later () {\n                previous = util.now();\n                timeout = null;\n                result = fn.apply(context, args);\n            }\n\n            return function throttled() {\n                var now = util.now(),\n                    remaining = wait - (now - previous);\n                context = this;\n                args = arguments;\n                if (remaining <= 0) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                    previous = now;\n                    result = fn.apply(context, args);\n                } else if (!timeout) {\n                    timeout = setTimeout(later, remaining);\n                }\n                return result;\n            };\n        },\n\n        /**\n         * Creates and returns a new debounced version of the passed function\n         * which will postpone its execution until after wait milliseconds\n         * have elapsed since the last time it was invoked.\n         * @param   {int}      wait Time to wait between calls in ms\n         * @param   {Function} fn   The function to debounced\n         * @returns {Function}      The debounced function\n         */\n        debounce: function (wait, fn) {\n            var context,\n                args,\n                timeout,\n                timestamp,\n                result;\n\n            function later() {\n                var last = util.now() - timestamp;\n                if (last < wait) {\n                    timeout = setTimeout(later, wait - last);\n                } else {\n                    timeout = null;\n                    result = fn.apply(context, args);\n                    context = args = null;\n                }\n            }\n\n            return function debounced() {\n                context = this;\n                args = arguments;\n                timestamp = util.now();\n                if (!timeout) {\n                    timeout = setTimeout(later, wait);\n                }\n                return result;\n            };\n        },\n\n        /**\n         * Insert the given CSS string into the DOM and return the resulting DOMElement\n         * @param   {string} css The CSS string to insert\n         * @returns {Element}    The <style> element that was created and inserted\n         */\n        insertCSS: function (css) {\n            var styleEl = document.createElement('style'),\n                cssTextNode = document.createTextNode(css);\n            try {\n                styleEl.setAttribute('type', 'text/css');\n                styleEl.appendChild(cssTextNode);\n            } catch (err) {\n                // uhhh IE < 9\n            }\n            document.getElementsByTagName('head')[0].appendChild(styleEl);\n            return styleEl;\n        },\n\n        /**\n         * Append a CSS rule to the given stylesheet\n         * @param   {CSSStyleSheet} sheet The stylesheet object\n         * @param   {string} selector     The selector\n         * @param   {string} rule         The rule\n         * @returns {int}                 The index of the new rule\n         */\n        appendCSSRule: function (sheet, selector, rule) {\n            var index;\n            if (sheet.insertRule) {\n                return sheet.insertRule(selector + '{' + rule + '}', sheet.cssRules.length);\n            } else {\n                index = sheet.addRule(selector, rule, sheet.rules.length);\n                if (index < 0) {\n                    index = sheet.rules.length - 1;\n                }\n                return index;\n            }\n        },\n\n        /**\n         * Delete a CSS rule at the given index from the given stylesheet\n         * @param   {CSSStyleSheet} sheet The stylesheet object\n         * @param   {int} index           The index of the rule to delete\n         * @returns {void}\n         */\n        deleteCSSRule: function (sheet, index) {\n            if (sheet.deleteRule) {\n                sheet.deleteRule(index);\n            } else {\n                sheet.removeRule(index);\n            }\n        },\n\n        /**\n         * Get the parent element of the (first) text node that is currently selected\n         * @returns {Element} The selected element\n         * @TODO: return all selected elements\n         */\n        getSelectedNode: function () {\n            var node, sel, range;\n            if (window.getSelection) {\n                sel = window.getSelection();\n                if (sel.rangeCount) {\n                    range = sel.getRangeAt(0);\n                    if (!range.collapsed) {\n                        node = sel.anchorNode.parentNode;\n                    }\n                }\n            } else if (document.selection) {\n                node = document.selection.createRange().parentElement();\n            }\n            return node;\n        },\n\n        /**\n         * Cross-browser getComputedStyle, which is faster than jQuery.css\n         * @param   {HTMLElement} el      The element\n         * @returns {CSSStyleDeclaration} The computed styles\n         */\n        getComputedStyle: function (el) {\n            if ('getComputedStyle' in window) {\n                return window.getComputedStyle(el);\n            }\n            // IE <= 8\n            return el.currentStyle;\n        },\n\n        /**\n         * Calculates the size of 1pt in pixels\n         * @returns {number} The pixel value\n         */\n        calculatePtSize: function () {\n            var style,\n                px,\n                testSize = 10000,\n                div = document.createElement('div');\n            div.style.display = 'block';\n            div.style.position = 'absolute';\n            div.style.width = testSize + 'pt';\n            document.body.appendChild(div);\n            style = util.getComputedStyle(div);\n            if (style && style.width) {\n                px = parseFloat(style.width) / testSize;\n            } else {\n                // @NOTE: there is a bug in Firefox where `getComputedStyle()`\n                // returns null if called in a hidden (`display:none`) iframe\n                // (https://bugzilla.mozilla.org/show_bug.cgi?id=548397), so we\n                // fallback to a default value if this happens.\n                px = DEFAULT_PT2PX_RATIO;\n            }\n            document.body.removeChild(div);\n            return px;\n        },\n\n        /**\n         * Count and return the number of occurrences of token in str\n         * @param   {string} str   The string to search\n         * @param   {string} token The string to search for\n         * @returns {int}          The number of occurrences\n         */\n        countInStr: function (str, token) {\n            var total = 0, i;\n            while ((i = str.indexOf(token, i) + 1)) {\n                total++;\n            }\n            return total;\n        },\n\n        /**\n         * Apply the given data to a template\n         * @param   {string} template  The template\n         * @param   {Object} data The data to apply to the template\n         * @returns {string}      The filled template\n         */\n        template: function (template, data) {\n            var p;\n            for (p in data) {\n                if (data.hasOwnProperty(p)) {\n                    template = template.replace(new RegExp('\\\\{\\\\{' + p + '\\\\}\\\\}', 'g'), data[p]);\n                }\n            }\n            return template;\n        }\n    });\n});\n\n/*global window, document*/\nCrocodoc.addUtility('subpx', function (framework) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var CSS_CLASS_SUBPX_FIX = 'crocodoc-subpx-fix',\n        TEST_SPAN_TEMPLATE = '<span style=\"font:{{size}}px serif; color:transparent; white-space:nowrap;\">' +\n            (new Array(100)).join('A') + '</span>'; // repeat 'A' character;\n\n    var util = framework.getUtility('common');\n\n    /**\n     * Return true if subpixel rendering is supported\n     * @returns {Boolean}\n     * @private\n     */\n    function isSubpixelRenderingSupported() {\n        // Test if subpixel rendering is supported\n        // @NOTE: jQuery.support.leadingWhitespace is apparently false if browser is IE6-8\n        if (!$.support.leadingWhitespace) {\n            return false;\n        } else {\n            //span #1 - desired font-size: 12.5px\n            var span = $(util.template(TEST_SPAN_TEMPLATE, { size: 12.5 }))\n                .appendTo(document.documentElement).get(0);\n            var fontsize1 = $(span).css('font-size');\n            var width1 = $(span).width();\n            $(span).remove();\n\n            //span #2 - desired font-size: 12.6px\n            span = $(util.template(TEST_SPAN_TEMPLATE, { size: 12.6 }))\n                .appendTo(document.documentElement).get(0);\n            var fontsize2 = $(span).css('font-size');\n            var width2 = $(span).width();\n            $(span).remove();\n\n            // is not mobile device?\n            // @NOTE(plai): Mobile WebKit supports subpixel rendering even though the browser fails the following tests.\n            // @NOTE(plai): When modifying these tests, make sure that these tests will work even when the browser zoom is changed.\n            // @TODO(plai): Find a better way of testing for mobile Safari.\n            if (!('ontouchstart' in window)) {\n\n                //font sizes are the same? (Chrome and Safari will fail this)\n                if (fontsize1 === fontsize2) {\n                    return false;\n                }\n\n                //widths are the same? (Firefox on Windows without GPU will fail this)\n                if (width1 === width2) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    var subpixelRenderingIsSupported = isSubpixelRenderingSupported();\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        /**\n         * Apply the subpixel rendering fix to the given element if necessary.\n         * @NOTE: Fix is only applied if the \"zoom\" CSS property exists\n         *        (ie., this fix is never applied in Firefox)\n         * @param   {Element} el The element\n         * @returns {Element} The element\n         */\n        fix: function (el) {\n            if (!subpixelRenderingIsSupported) {\n                if (document.body.style.zoom !== undefined) {\n                    var $wrap = $('<div>').addClass(CSS_CLASS_SUBPX_FIX);\n                    $(el).wrap($wrap);\n                }\n            }\n            return el;\n        },\n\n        /**\n         * Is sub-pixel text rendering supported?\n         * @param   {void}\n         * @returns {boolean} true if sub-pixel tex rendering is supported\n         */\n        isSubpxSupported: function() {\n            return subpixelRenderingIsSupported;\n        }\n    };\n});\n\nCrocodoc.addUtility('support', function () {\n\n    'use strict';\n    var prefixes = ['Moz', 'Webkit', 'O', 'ms'],\n        xhrSupported = null,\n        xhrCORSSupported = null;\n\n    /**\n     * Helper function to get the proper vendor property name\n     * (`transition` => `WebkitTransition`)\n     * @param {string} prop The property name to test for\n     * @returns {string|boolean} The vendor-prefixed property name or false if the property is not supported\n     */\n    function getVendorCSSPropertyName(prop) {\n        var testDiv = document.createElement('div'),\n            prop_, i, vendorProp;\n\n        // Handle unprefixed versions (FF16+, for example)\n        if (prop in testDiv.style) {\n            return prop;\n        }\n\n        prop_ = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n        if (prop in testDiv.style) {\n            return prop;\n        }\n\n        for (i = 0; i < prefixes.length; ++i) {\n            vendorProp = prefixes[i] + prop_;\n            if (vendorProp in testDiv.style) {\n                if (vendorProp.indexOf('ms') === 0) {\n                    vendorProp = '-' + vendorProp;\n                }\n                return uncamel(vendorProp);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Converts a camelcase string to a dasherized string.\n     * (`marginLeft` => `margin-left`)\n     * @param {stirng} str The camelcase string to convert\n     * @returns {string} The dasherized string\n     */\n    function uncamel(str) {\n        return str.replace(/([A-Z])/g, function(letter) { return '-' + letter.toLowerCase(); });\n    }\n\n    return {\n        svg: document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1'),\n        csstransform: getVendorCSSPropertyName('transform'),\n        csstransition: getVendorCSSPropertyName('transition'),\n        csszoom: getVendorCSSPropertyName('zoom'),\n\n        /**\n         * Return true if XHR is supported\n         * @returns {boolean}\n         */\n        isXHRSupported: function () {\n            if (xhrSupported === null) {\n                xhrSupported = !!this.getXHR();\n            }\n            return xhrSupported;\n        },\n\n        /**\n         * Return true if XHR is supported and is CORS-enabled\n         * @returns {boolean}\n         */\n        isCORSSupported: function () {\n            if (xhrCORSSupported === null) {\n                xhrCORSSupported = this.isXHRSupported() &&\n                                   ('withCredentials' in this.getXHR());\n            }\n            return xhrCORSSupported;\n        },\n\n        /**\n         * Return true if XDR is supported\n         * @returns {boolean}\n         */\n        isXDRSupported: function () {\n            return typeof window.XDomainRequest !== 'undefined';\n        },\n\n        /**\n         * Get a XHR object\n         * @returns {XMLHttpRequest} An XHR object\n         */\n        getXHR: function () {\n            if (window.XMLHttpRequest) {\n                return new window.XMLHttpRequest();\n            } else {\n                try {\n                    return new ActiveXObject('MSXML2.XMLHTTP.3.0');\n                }\n                catch(ex) {\n                    return null;\n                }\n            }\n        },\n\n        /**\n         * Get a CORS-enabled request object\n         * @returns {XMLHttpRequest|XDomainRequest} The request object\n         */\n        getXDR: function () {\n            if (this.isXDRSupported()) {\n                return new window.XDomainRequest();\n            }\n            return null;\n        }\n    };\n});\n\n/**\n * URL utility\n */\nCrocodoc.addUtility('url', function (framework) {\n\n    'use strict';\n\n    var browser = framework.getUtility('browser'),\n        parsedLocation;\n\n    return {\n        /**\n         * Return the current page's URL\n         * @returns {string} The current URL\n         */\n        getCurrentURL: function () {\n            return window.location.href;\n        },\n\n        /**\n         * Make the given path absolute\n         *  - if path doesn't contain protocol and domain, prepend the current protocol and domain\n         *  - if the path is relative (eg. doesn't begin with /), also fill in the current path\n         * @param   {string} path The path to make absolute\n         * @returns {string}      The absolute path\n         */\n        makeAbsolute: function (path) {\n            return this.parse(path).href;\n        },\n\n        /**\n         * Returns true if the given url is external to the current domain\n         * @param   {string}  url The URL\n         * @returns {Boolean} Whether or not the url is external\n         */\n        isCrossDomain: function (url) {\n            var parsedURL = this.parse(url);\n\n            if (!parsedLocation) {\n                parsedLocation = this.parse(this.getCurrentURL());\n            }\n\n            // IE7 does not properly parse relative URLs, so the hostname is empty\n            if (!parsedURL.hostname) {\n                return false;\n            }\n\n            return parsedURL.protocol !== parsedLocation.protocol ||\n                   parsedURL.hostname !== parsedLocation.hostname ||\n                   parsedURL.port !== parsedLocation.port;\n        },\n\n        /**\n         * Append a query parameters string to the given URL\n         * @param   {string} url The URL\n         * @param   {string} str The query parameters\n         * @returns {string}     The new URL\n         */\n        appendQueryParams: function (url, str) {\n            if (url.indexOf('?') > -1) {\n                return url + '&' + str;\n            } else {\n                return url + '?' + str;\n            }\n        },\n\n        /**\n         * Parse a URL into protocol, host, port, etc\n         * @param   {string} url The URL to parse\n         * @returns {object}     The parsed URL parts\n         */\n        parse: function (url) {\n            var parsed = document.createElement('a'),\n                pathname;\n\n            parsed.href = url;\n\n            // @NOTE: IE does not automatically parse relative urls,\n            // but requesting href back from the <a> element will return\n            // an absolute URL, which can then be fed back in to get the\n            // expected result. WTF? Yep!\n            if (browser.ie && url !== parsed.href) {\n                url = parsed.href;\n                parsed.href = url;\n            }\n\n            // @NOTE: IE does not include the preceding '/' in pathname\n            pathname = parsed.pathname;\n            if (!/^\\//.test(pathname)) {\n                pathname = '/' + pathname;\n            }\n\n            return {\n                href: parsed.href,\n                protocol: parsed.protocol, // includes :\n                host: parsed.host, // includes port\n                hostname: parsed.hostname, // does not include port\n                port: parsed.port,\n                pathname: pathname,\n                hash: parsed.hash,  // inclues #\n                search: parsed.search // incudes ?\n            };\n        }\n    };\n});\n\nCrocodoc.addComponent('controller-paged', function (scope) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var util = scope.getUtility('common');\n\n    var config,\n        $el,\n        lazyLoader;\n\n    /**\n     * Validates the config options\n     * @returns {void}\n     * @private\n     */\n    function validateConfig() {\n        var metadata = config.metadata;\n        config.numPages = metadata.numpages;\n        if (!config.pageStart) {\n            config.pageStart = 1;\n        } else if (config.pageStart < 0) {\n            config.pageStart = metadata.numpages + config.pageStart;\n        }\n        config.pageStart = util.clamp(config.pageStart, 1, metadata.numpages);\n        if (!config.pageEnd) {\n            config.pageEnd = metadata.numpages;\n        } else if (config.pageEnd < 0) {\n            config.pageEnd = metadata.numpages + config.pageEnd;\n        }\n        config.pageEnd = util.clamp(config.pageEnd, config.pageStart, metadata.numpages);\n        config.numPages = config.pageEnd - config.pageStart + 1;\n    }\n\n    /**\n     * Create the html skeleton for the viewer and pages\n     * @returns {void}\n     * @private\n     */\n    function prepareDOM() {\n        var i, pageNum,\n            zoomLevel, maxZoom,\n            ptWidth, ptHeight,\n            pxWidth, pxHeight,\n            pt2px = util.calculatePtSize(),\n            dimensions = config.metadata.dimensions,\n            skeleton = '';\n\n        // adjust page scale if the pages are too small/big\n        // it's adjusted so 100% == DOCUMENT_100_PERCENT_WIDTH px;\n        config.pageScale = DOCUMENT_100_PERCENT_WIDTH / (dimensions.width * pt2px);\n\n        // add zoom levels to accomodate the scale\n        zoomLevel = config.zoomLevels[config.zoomLevels.length - 1];\n        maxZoom = 3 / config.pageScale;\n        while (zoomLevel < maxZoom) {\n            zoomLevel += zoomLevel / 2;\n            config.zoomLevels.push(zoomLevel);\n        }\n\n        dimensions.exceptions = dimensions.exceptions || {};\n\n        // create skeleton\n        for (i = config.pageStart - 1; i < config.pageEnd; i++) {\n            pageNum = i + 1;\n            if (pageNum in dimensions.exceptions) {\n                ptWidth = dimensions.exceptions[pageNum].width;\n                ptHeight = dimensions.exceptions[pageNum].height;\n            } else {\n                ptWidth = dimensions.width;\n                ptHeight = dimensions.height;\n            }\n            pxWidth = ptWidth * pt2px;\n            pxHeight = ptHeight * pt2px;\n            pxWidth *= config.pageScale;\n            pxHeight *= config.pageScale;\n            skeleton += util.template(Crocodoc.pageTemplate, {\n                w: pxWidth,\n                h: pxHeight\n            });\n        }\n\n        // insert skeleton and keep a reference to the jq object\n        config.$pages = $(skeleton).appendTo(config.$doc);\n    }\n\n    /**\n     * Return the expected conversion status of the given page index\n     * @param   {int} pageIndex The page index\n     * @returns {string}        The page status\n     */\n    function getInitialPageStatus(pageIndex) {\n        if (config.conversionIsComplete ||\n            (pageIndex === 0 && config.autoloadFirstPage)) {\n            return PAGE_STATUS_NOT_LOADED;\n        }\n        return PAGE_STATUS_CONVERTING;\n    }\n\n    /**\n     * Create and init all necessary page component instances\n     * @returns {void}\n     * @private\n     */\n    function createPages() {\n        var i,\n            pages = [],\n            page,\n            start = config.pageStart - 1,\n            end = config.pageEnd,\n            links = sortPageLinks();\n\n        //initialize pages\n        for (i = start; i < end; i++) {\n            page = scope.createComponent('page');\n            page.init(config.$pages.eq(i - start), {\n                index: i,\n                status: getInitialPageStatus(i),\n                enableLinks: config.enableLinks,\n                links: links[i],\n                pageScale: config.pageScale\n            });\n            pages.push(page);\n        }\n        config.pages = pages;\n    }\n\n    /**\n     * Returns all links associated with the given page\n     * @param  {int} page The page\n     * @returns {Array}   Array of links\n     * @private\n     */\n    function sortPageLinks() {\n        var i, len, link,\n            destination,\n            // the starting and ending page *numbers* (not indexes)\n            start = config.pageStart,\n            end = config.pageEnd,\n            links = config.metadata.links || [],\n            sorted = [];\n\n        // NOTE:\n        // link.pagenum is the page the link resides on\n        // link.destination.pagenum is the page the link links to\n\n        for (i = 0, len = config.metadata.numpages; i < len; ++i) {\n            sorted[i] = [];\n        }\n\n        for (i = 0, len = links.length; i < len; ++i) {\n            link = links[i];\n\n            if (link.pagenum < start || link.pagenum > end) {\n                // link page is outside the enabled page range\n                continue;\n            }\n\n            if (link.destination) {\n                destination = link.destination.pagenum;\n\n                if (destination < start || destination > end) {\n                    // destination is outside the enabled page range\n                    continue;\n                } else {\n                    // subtract the number of pages cut off from the beginning\n                    link.destination.pagenum = destination - (start - 1);\n                }\n            }\n\n            sorted[link.pagenum - 1].push(link);\n        }\n\n        return sorted;\n    }\n\n    /**\n     * Handle mouseup events\n     * @returns {void}\n     * @private\n     */\n    function handleMouseUp() {\n        updateSelectedPages();\n    }\n\n    /**\n     * Check if text is selected on any page, and if so, add a css class to that page\n     * @returns {void}\n     * @TODO(clakenen): this method currently only adds the selected class to one page,\n     * so we should modify it to add the class to all pages with selected text\n     * @private\n     */\n    function updateSelectedPages() {\n        var node = util.getSelectedNode();\n        var $page = $(node).closest('.'+CSS_CLASS_PAGE);\n        $el.find('.'+CSS_CLASS_TEXT_SELECTED).removeClass(CSS_CLASS_TEXT_SELECTED);\n        if (node && $el.has(node)) {\n            $page.addClass(CSS_CLASS_TEXT_SELECTED);\n        }\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n\n        /**\n         * Initialize the controller\n         * @returns {void}\n         */\n        init: function () {\n            config = scope.getConfig();\n\n            // Setup container\n            $el = config.$el;\n\n            $(document).on('mouseup', handleMouseUp);\n\n            validateConfig();\n            prepareDOM();\n            createPages();\n\n            lazyLoader = scope.createComponent('lazy-loader');\n            lazyLoader.init(config.pages);\n        },\n\n        /**\n         * Destroy the viewer-base component\n         * @returns {void}\n         */\n        destroy: function () {\n            // remove document event handlers\n            $(document).off('mouseup', handleMouseUp);\n        }\n    };\n});\n\nCrocodoc.addComponent('controller-text', function (scope) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var $promise;\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n\n        /**\n         * Initialize the controller\n         * @returns {void}\n         */\n        init: function () {\n            var config = scope.getConfig();\n            config.$textContainer = $();\n\n            // we can just load the text immediately\n            $promise = scope.get('page-text', 1).then(function (html) {\n                // the viewport could be window in useWindowAsViewport, so get\n                // the real viewport div\n                var $viewport = config.$doc.parent();\n                config.$doc = $(html);\n                $viewport.html(config.$doc);\n            });\n        },\n\n        /**\n         * Destroy the viewer-base component\n         * @returns {void}\n         */\n        destroy: function () {\n            $promise.abort();\n        }\n    };\n});\n\n/**\n * Dragger component definition\n */\nCrocodoc.addComponent('dragger', function (scope) {\n\n    'use strict';\n\n    var $el,\n        $window = $(window),\n        downScrollPosition,\n        downMousePosition;\n\n    /**\n     * Handle mousemove events\n     * @param   {Event} event The event object\n     * @returns {void}\n     */\n    function handleMousemove(event) {\n        $el.scrollTop(downScrollPosition.top - (event.clientY - downMousePosition.y));\n        $el.scrollLeft(downScrollPosition.left - (event.clientX - downMousePosition.x));\n        event.preventDefault();\n    }\n\n    /**\n     * Handle mouseup events\n     * @param   {Event} event The event object\n     * @returns {void}\n     */\n    function handleMouseup(event) {\n        scope.broadcast('dragend');\n        $window.off('mousemove', handleMousemove);\n        $window.off('mouseup', handleMouseup);\n        event.preventDefault();\n    }\n\n    /**\n     * Handle mousedown events\n     * @param   {Event} event The event object\n     * @returns {void}\n     */\n    function handleMousedown(event) {\n        scope.broadcast('dragstart');\n        downScrollPosition = {\n            top: $el.scrollTop(),\n            left: $el.scrollLeft()\n        };\n        downMousePosition = {\n            x: event.clientX,\n            y: event.clientY\n        };\n        $window.on('mousemove', handleMousemove);\n        $window.on('mouseup', handleMouseup);\n        event.preventDefault();\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        /**\n         * Initialize the scroller component\n         * @param   {Element} el The Element\n         * @returns {void}\n         */\n        init: function (el) {\n            $el = $(el);\n            $el.on('mousedown', handleMousedown);\n        },\n\n        /**\n         * Destroy the scroller component\n         * @returns {void}\n         */\n        destroy: function () {\n            $el.off('mousedown', handleMousedown);\n            $el.off('mousemove', handleMousemove);\n            $window.off('mouseup', handleMouseup);\n        }\n    };\n});\n\n/**\n * Base layout component for controlling viewer layout and viewport\n */\nCrocodoc.addComponent('layout-base', function (scope) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var util = scope.getUtility('common');\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        messages: [\n            'resize',\n            'scroll',\n            'scrollend'\n        ],\n\n        /**\n         * Handle framework messages\n         * @param {string} name The name of the message\n         * @param {Object} data The related data for the message\n         * @returns {void}\n         */\n        onmessage: function (name, data) {\n            switch (name) {\n                case 'resize':\n                    this.handleResize(data);\n                    break;\n                case 'scroll':\n                    this.handleScroll(data);\n                    break;\n                case 'scrollend':\n                    this.handleScrollEnd(data);\n                    break;\n                // no default\n            }\n        },\n\n        /**\n         * Initialize the Layout component\n         * @returns {void}\n         */\n        init: function () {\n            var config = scope.getConfig();\n            this.config = config;\n            // shortcut references to jq DOM objects\n            this.$el = config.$el;\n            this.$doc = config.$doc;\n            this.$viewport = config.$viewport;\n            this.$pages = config.$pages;\n            this.numPages = config.numPages;\n\n            // add the layout css class\n            this.layoutClass = CSS_CLASS_LAYOUT_PREFIX + config.layout;\n            this.$el.addClass(this.layoutClass);\n\n            this.initState();\n        },\n\n        /**\n         * Initalize the state object\n         * @returns {void}\n         */\n        initState: function () {\n            var viewportEl = this.$viewport[0],\n                dimensionsEl = viewportEl;\n\n            // use the documentElement for viewport dimensions\n            // if we are using the window as the viewport\n            if (viewportEl === window) {\n                dimensionsEl = document.documentElement;\n            }\n            // setup initial state\n            this.state = {\n                scrollTop: viewportEl.scrollTop,\n                scrollLeft: viewportEl.scrollLeft,\n                viewportDimensions: {\n                    clientWidth: dimensionsEl.clientWidth,\n                    clientHeight: dimensionsEl.clientHeight,\n                    offsetWidth: dimensionsEl.offsetWidth,\n                    offsetHeight: dimensionsEl.offsetHeight\n                },\n                zoomState: {\n                    zoom: 1,\n                    prevZoom: 0,\n                    zoomMode: null\n                },\n                initialWidth: 0,\n                initialHeight: 0,\n                totalWidth: 0,\n                totalHeight: 0\n            };\n            this.zoomLevels = [];\n        },\n\n        /**\n         * Destroy the Layout component\n         * @returns {void}\n         */\n        destroy: function () {\n            this.$doc.removeAttr('style');\n            this.$el.removeClass(this.layoutClass);\n        },\n\n        /**\n         * Set the zoom level for the layout (to be implemented)\n         */\n        setZoom: function () {},\n\n        /**\n         * Calculate the next zoom level for zooming in or out\n         * @param   {string} direction Can be either Crocodoc.ZOOM_IN or Crocodoc.ZOOM_OUT\n         * @returns {number|boolean} The next zoom level or false if the viewer cannot be\n         *                               zoomed in the given direction\n         */\n        calculateNextZoomLevel: function (direction) {\n            var i,\n                zoom = false,\n                currentZoom = this.state.zoomState.zoom,\n                zoomLevels = this.zoomLevels;\n\n            if (direction === Crocodoc.ZOOM_IN) {\n                for (i = 0; i < zoomLevels.length; ++i) {\n                    if (zoomLevels[i] > currentZoom) {\n                        zoom = zoomLevels[i];\n                        break;\n                    }\n                }\n            } else if (direction === Crocodoc.ZOOM_OUT) {\n                for (i = zoomLevels.length - 1; i >= 0; --i) {\n                    if (zoomLevels[i] < currentZoom) {\n                        zoom = zoomLevels[i];\n                        break;\n                    }\n                }\n            }\n\n            return zoom;\n        },\n\n        /**\n         * Returns true if the layout is currently draggable\n         * (in this case that means that the viewport is scrollable)\n         * @returns {Boolean} Whether this layout is draggable\n         */\n        isDraggable: function () {\n            var state = this.state;\n            return (state.viewportDimensions.clientHeight < state.totalHeight) ||\n                   (state.viewportDimensions.clientWidth < state.totalWidth);\n        },\n\n        /**\n         * Scrolls by the given pixel amount from the current location\n         * @param  {int} left Left offset to scroll to\n         * @param  {int} top  Top offset to scroll to\n         * @returns {void}\n         */\n        scrollBy: function (left, top) {\n            left = parseInt(left, 10) || 0;\n            top = parseInt(top, 10) || 0;\n            this.scrollToOffset(left + this.state.scrollLeft, top + this.state.scrollTop);\n        },\n\n        /**\n         * Scroll to the given left and top offset\n         * @param   {int} left The left offset\n         * @param   {int} top  The top offset\n         * @returns {void}\n         */\n        scrollToOffset: function (left, top) {\n            this.$viewport.scrollLeft(left);\n            this.$viewport.scrollTop(top);\n        },\n\n        /**\n         * Handle scroll messages\n         * @param   {Object} data Object containing scrollTop and scrollLeft of the viewport\n         * @returns {void}\n         */\n        handleScroll: function (data) {\n            this.state.scrollTop = data.scrollTop;\n            this.state.scrollLeft = data.scrollLeft;\n        },\n\n        /**\n         * Handle resize messages (to be implemented in layout)\n         */\n        handleResize: function () {},\n        /**\n         * Handle scrollend messages (to be implemented in layout)\n         */\n        handleScrollEnd: function () {},\n\n        /**\n         * Force a full layout update (to be implemented in layout)\n         */\n        update: function () {},\n\n        /**\n         * Focuses the viewport so it can be natively scrolled with the keyboard\n         * @returns {void}\n         */\n        focus: function () {\n            this.$viewport.focus();\n        },\n\n        /**\n         * Shortcut method to extend this layout\n         * @param   {Object} layout The layout mixins\n         * @returns {Object}        The extended layout\n         */\n        extend: function (layout) {\n            return util.extend({}, this, layout);\n        }\n    };\n});\n\n/**\n * The horizontal layout\n */\nCrocodoc.addComponent('layout-' + LAYOUT_HORIZONTAL, ['layout-paged'], function (scope, paged) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var util = scope.getUtility('common'),\n        browser = scope.getUtility('browser');\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return paged.extend({\n\n        /**\n         * Calculate the numeric value for zoom 'auto' for this layout mode\n         * @returns {float} The zoom value\n         */\n        calculateZoomAutoValue: function () {\n            var state = this.state,\n                fitWidth = this.calculateZoomValue(ZOOM_FIT_WIDTH),\n                fitHeight = this.calculateZoomValue(ZOOM_FIT_HEIGHT);\n\n            // landscape\n            if (state.widestPage.actualWidth > state.tallestPage.actualHeight) {\n                return Math.min(fitWidth, fitHeight);\n            }\n            // portrait\n            else {\n                if (browser.mobile) {\n                    return fitHeight;\n                }\n                // limit max zoom to 1.0\n                return Math.min(1, fitHeight);\n            }\n        },\n\n        /**\n         * Calculate which page is currently the \"focused\" page.\n         * In horizontal mode, this is the page farthest to the left,\n         * where at least half of the page is showing.\n         * @returns {int} The current page\n         */\n        calculateCurrentPage: function () {\n            var prev, page,\n                state = this.state,\n                pages = state.pages;\n\n            prev = util.bisectRight(pages, state.scrollLeft, 'x0') - 1;\n            page = util.bisectRight(pages, state.scrollLeft + pages[prev].width / 2, 'x0') - 1;\n            return 1 + page;\n        },\n\n        /**\n         * Calculates the next page\n         * @returns {int} The next page number\n         */\n        calculateNextPage: function () {\n            return this.state.currentPage + 1;\n        },\n\n        /**\n         * Calculates the previous page\n         * @returns {int} The previous page number\n         */\n        calculatePreviousPage: function () {\n            return this.state.currentPage - 1;\n        },\n\n        /**\n         * Handle resize mesages\n         * @param   {Object} data The message data\n         * @returns {void}\n         */\n        handleResize: function (data) {\n            paged.handleResize.call(this, data);\n            this.updateCurrentPage();\n        },\n\n        /**\n         * Handle scroll mesages\n         * @param   {Object} data The message data\n         * @returns {void}\n         */\n        handleScroll: function (data) {\n            paged.handleScroll.call(this, data);\n            this.updateCurrentPage();\n        },\n\n        /**\n         * Updates the layout elements (pages, doc, etc) CSS\n         * appropriately for the current zoom level\n         * @returns {void}\n         */\n        updateLayout: function () {\n            var state = this.state,\n                zoomState = state.zoomState,\n                zoom = zoomState.zoom,\n                zoomedWidth = state.sumWidths,\n                zoomedHeight = Math.floor(state.tallestPage.totalActualHeight * zoom),\n                docWidth = Math.max(zoomedWidth, state.viewportDimensions.clientWidth),\n                docHeight = Math.max(zoomedHeight, state.viewportDimensions.clientHeight);\n\n            this.$doc.css({\n                height: docHeight,\n                lineHeight: docHeight + 'px',\n                width: docWidth\n            });\n        }\n    });\n});\n\n\n/**\n * Base layout component for controlling viewer layout and viewport\n */\nCrocodoc.addComponent('layout-paged', ['layout-base'], function (scope, base) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var util = scope.getUtility('common'),\n        support = scope.getUtility('support');\n\n    /**\n     * Apply a zoom transform to the layout using width/height\n     * (using width/height instead)\n     * @param   {float} zoom The zoom value\n     * @returns {void}\n     * @private\n     */\n    function applyZoomResize(layout, zoom) {\n        // manually resize pages width/height\n        var i, len, pageState, cssRule,\n            state = layout.state,\n            selector = '.' + layout.config.namespace + ' .' + CSS_CLASS_PAGE_AUTOSCALE,\n            stylesheet = layout.config.stylesheet,\n            pages = state.pages,\n            scale = zoom * layout.config.pageScale,\n            percent = 100 / scale;\n\n        // apply css transform or zoom to autoscale layer (eg., text, links, user content)\n        if (support.csstransform) {\n            cssRule = support.csstransform + ':scale(' + scale + ');' +\n                'width:' + percent + '%;' +\n                'height:' + percent + '%;';\n        } else if (support.csszoom) {\n            cssRule = 'zoom:' + scale;\n        } else {\n            // should not happen...\n            cssRule = '';\n        }\n\n        // remove the previous style if there is one\n        if (state.previousStyleIndex) {\n            util.deleteCSSRule(stylesheet, state.previousStyleIndex);\n        }\n        // create a new rule for the autoscale layer\n        state.previousStyleIndex = util.appendCSSRule(stylesheet, selector, cssRule);\n\n        // update width/height/padding on all pages\n        for (i = 0, len = pages.length; i < len; ++i) {\n            pageState = pages[i];\n            layout.$pages.eq(i).css({\n                width: pageState.actualWidth * zoom,\n                height: pageState.actualHeight * zoom,\n                paddingTop: pageState.paddingTop * zoom,\n                paddingRight: pageState.paddingRight * zoom,\n                paddingBottom: pageState.paddingBottom * zoom,\n                paddingLeft: pageState.paddingLeft * zoom\n            });\n        }\n    }\n\n    /**\n     * Get the maximum y1 value for pages in the current row\n     * (or Infinity if there are no pages in the current row yet)\n     * @param {Array} pages Array of pages to search\n     * @param {Array} row   Array of page indexes (i.e., the row)\n     * @returns {number} The max y1 value\n     * @private\n     */\n    function getMaxY1InRow(pages, row) {\n        if (!row || row.length === 0) {\n            return Infinity;\n        }\n        var y1s = util.map(row, function (pageIndex) {\n            return pages[pageIndex].y1;\n        });\n        return Math.max.apply(Math, y1s);\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return base.extend({\n\n        /**\n         * Initialize the Layout component\n         * @returns {void}\n         */\n        init: function () {\n            base.init.call(this);\n            this.updatePageStates();\n            this.updateZoomLevels();\n        },\n\n        /**\n         * Initalize the state object\n         * @returns {void}\n         */\n        initState: function () {\n            base.initState.call(this);\n            util.extend(this.state, {\n                pages: [],\n                widestPage: {\n                    index: 0,\n                    actualWidth: 0\n                },\n                tallestPage: {\n                    index: 0,\n                    actualHeight: 0\n                },\n                sumWidths: 0,\n                sumHeights: 0,\n                rows: [],\n                currentPage: null,\n                visiblePages: [],\n                fullyVisiblePages: []\n            });\n        },\n\n        /**\n         * Destroy the Layout component\n         * @returns {void}\n         */\n        destroy: function () {\n            base.destroy.call(this);\n            this.$pages.css('padding', '');\n        },\n\n        /**\n         * Force a full layout update\n         */\n        update: function () {\n            this.updatePageStates(true);\n            this.setZoom();\n        },\n\n        /**\n         * Set the zoom level for the layout\n         * @param {float|string} val The zoom level (float or one of the zoom constants)\n         */\n        setZoom: function (val) {\n            var state = this.state,\n                zoom = this.parseZoomValue(val),\n                zoomState = state.zoomState,\n                currentZoom = zoomState.zoom,\n                zoomMode,\n                shouldNotCenter;\n\n            // update the zoom mode if we landed on a named mode\n            zoomMode = this.calculateZoomMode(val, zoom);\n\n            //respect zoom constraints\n            zoom = util.clamp(zoom, state.minZoom, state.maxZoom);\n\n            scope.broadcast('beforezoom', util.extend({\n                page: state.currentPage,\n                visiblePages: util.extend([], state.visiblePages),\n                fullyVisiblePages: util.extend([], state.fullyVisiblePages)\n            }, zoomState));\n\n            // update the zoom state\n            zoomState.prevZoom = currentZoom;\n            zoomState.zoom = zoom;\n            zoomState.zoomMode = zoomMode;\n\n            // apply the zoom to the actual DOM element(s)\n            this.applyZoom(zoom);\n\n            // can the document be zoomed in/out further?\n            zoomState.canZoomIn = this.calculateNextZoomLevel(Crocodoc.ZOOM_IN) !== false;\n            zoomState.canZoomOut = this.calculateNextZoomLevel(Crocodoc.ZOOM_OUT) !== false;\n\n            // update page states, because they will have changed after zooming\n            this.updatePageStates();\n\n            // layout mode specific stuff\n            this.updateLayout();\n\n            // update scroll position for the new zoom\n            // @NOTE: updateScrollPosition() must be called AFTER updateLayout(),\n            // because the scrollable space may change in updateLayout\n            // @NOTE: shouldNotCenter is true when using a named zoom level\n            // so that resizing the browser zooms to the current page offset\n            // rather than to the center like when zooming in/out\n            shouldNotCenter = val === Crocodoc.ZOOM_AUTO ||\n                              val === Crocodoc.ZOOM_FIT_WIDTH ||\n                              val === Crocodoc.ZOOM_FIT_HEIGHT;\n            this.updateScrollPosition(shouldNotCenter);\n\n            // update again, because updateLayout could have changed page positions\n            this.updatePageStates();\n\n            // make sure the visible pages are accurate (also update css classes)\n            this.updateVisiblePages(true);\n\n            // broadcast zoom event with new zoom state\n            scope.broadcast('zoom', util.extend({\n                page: state.currentPage,\n                visiblePages: util.extend([], state.visiblePages),\n                fullyVisiblePages: util.extend([], state.fullyVisiblePages),\n                isDraggable: this.isDraggable()\n            }, zoomState));\n        },\n\n        /**\n         * Parse the given zoom value into a number to zoom to.\n         * @param   {float|string} val The zoom level (float or one of the zoom constants)\n         * @returns {float} The parsed zoom level\n         */\n        parseZoomValue: function (val) {\n            var zoomVal = parseFloat(val),\n                state = this.state,\n                zoomState = state.zoomState,\n                currentZoom = zoomState.zoom,\n                nextZoom = currentZoom;\n\n            // number\n            if (zoomVal) {\n                nextZoom = zoomVal;\n            } else {\n                switch (val) {\n                    case Crocodoc.ZOOM_FIT_WIDTH:\n                        // falls through\n                    case Crocodoc.ZOOM_FIT_HEIGHT:\n                        // falls through\n                    case Crocodoc.ZOOM_AUTO:\n                        nextZoom = this.calculateZoomValue(val);\n                        break;\n\n                    case Crocodoc.ZOOM_IN:\n                        // falls through\n                    case Crocodoc.ZOOM_OUT:\n                        nextZoom = this.calculateNextZoomLevel(val) || currentZoom;\n                        break;\n\n                    // bad mode or no value\n                    default:\n                        // if there hasn't been a zoom set yet\n                        if (!currentZoom) {\n                            //use default zoom\n                            nextZoom = this.calculateZoomValue(this.config.zoom || Crocodoc.ZOOM_AUTO);\n                        }\n                        else if (zoomState.zoomMode) {\n                            //adjust zoom\n                            nextZoom = this.calculateZoomValue(zoomState.zoomMode);\n                        } else {\n                            nextZoom = currentZoom;\n                        }\n                        break;\n                }\n            }\n\n            return nextZoom;\n        },\n\n        /**\n         * Calculates the new zoomMode given the input val and the parsed zoom value\n         * @param   {float|string} val  The input zoom value\n         * @param   {float} parsedZoom  The parsed zoom value\n         * @returns {string|null}       The new zoom move\n         */\n        calculateZoomMode: function (val, parsedZoom) {\n            // check if we landed on a named mode\n            switch (parsedZoom) {\n                case this.calculateZoomValue(Crocodoc.ZOOM_AUTO):\n                    // if the value passed is a named zoom mode, use that, because\n                    // fitheight and fitwidth can sometimes clash with auto (else use auto)\n                    if (typeof val === 'string' &&\n                        (val === Crocodoc.ZOOM_FIT_WIDTH || val === Crocodoc.ZOOM_FIT_HEIGHT))\n                    {\n                        return val;\n                    }\n                    return Crocodoc.ZOOM_AUTO;\n                case this.calculateZoomValue(Crocodoc.ZOOM_FIT_WIDTH):\n                    return Crocodoc.ZOOM_FIT_WIDTH;\n                case this.calculateZoomValue(Crocodoc.ZOOM_FIT_HEIGHT):\n                    return Crocodoc.ZOOM_FIT_HEIGHT;\n                default:\n                    return null;\n            }\n        },\n\n        /**\n         * Update zoom levels and the min and max zoom\n         * @returns {void}\n         */\n        updateZoomLevels: function () {\n            var i, lastZoomLevel,\n                zoomLevels = this.config.zoomLevels.slice() || [1],\n                auto = this.calculateZoomValue(Crocodoc.ZOOM_AUTO),\n                fitWidth = this.calculateZoomValue(Crocodoc.ZOOM_FIT_WIDTH),\n                fitHeight = this.calculateZoomValue(Crocodoc.ZOOM_FIT_HEIGHT),\n                presets = [fitWidth, fitHeight];\n\n            // update min and max zoom before adding presets into the mix\n            // because presets should not be able to override min/max zoom\n            this.state.minZoom = this.config.minZoom || zoomLevels[0];\n            this.state.maxZoom = this.config.maxZoom || zoomLevels[zoomLevels.length - 1];\n\n            // if auto is not the same as fitWidth or fitHeight,\n            // add it as a possible next zoom\n            if (auto !== fitWidth && auto !== fitHeight) {\n                presets.push(auto);\n            }\n\n            // add auto-zoom levels and sort\n            zoomLevels = zoomLevels.concat(presets);\n            zoomLevels.sort(function sortZoomLevels(a, b){\n                return a - b;\n            });\n\n            this.zoomLevels = [];\n\n            /**\n             * Return true if we should use this zoom level\n             * @param   {number} zoomLevel The zoom level to consider\n             * @returns {boolean}          True if we should keep this level\n             * @private\n             */\n            function shouldUseZoomLevel(zoomLevel) {\n                var similarity = lastZoomLevel / zoomLevel;\n                // remove duplicates\n                if (zoomLevel === lastZoomLevel) {\n                    return false;\n                }\n                // keep anything that is within the similarity threshold\n                if (similarity < ZOOM_LEVEL_SIMILARITY_THRESHOLD) {\n                    return true;\n                }\n                // check if it's a preset\n                if (util.inArray(zoomLevel, presets) > -1) {\n                    // keep presets if they are within a higher threshold\n                    if (similarity < ZOOM_LEVEL_PRESETS_SIMILARITY_THRESHOLD) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n\n            // remove duplicates from sorted list, and remove unnecessary levels\n            // @NOTE: some zoom levels end up being very close to the built-in\n            // presets (fit-width/fit-height/auto), which makes zooming previous\n            // or next level kind of annoying when the zoom level barely changes.\n            // This fixes that by applying a threshold to the zoom levels to\n            // each preset, and removing the non-preset version if the\n            // ratio is below the threshold.\n            lastZoomLevel = 0;\n            for (i = 0; i < zoomLevels.length; ++i) {\n                if (shouldUseZoomLevel(zoomLevels[i])) {\n                    lastZoomLevel = zoomLevels[i];\n                    this.zoomLevels.push(lastZoomLevel);\n                }\n            }\n        },\n\n        /**\n         * Calculate the numeric value for a given zoom mode (or return the value if it's already numeric)\n         * @param   {string} mode The mode to zoom to\n         * @returns {float}       The zoom value\n         */\n        calculateZoomValue: function (mode) {\n            var state = this.state,\n                val = parseFloat(mode);\n            if (val) {\n                return val;\n            }\n            if (mode === Crocodoc.ZOOM_FIT_WIDTH) {\n                return state.viewportDimensions.clientWidth / state.widestPage.totalActualWidth;\n            }\n            else if (mode === Crocodoc.ZOOM_FIT_HEIGHT) {\n                return state.viewportDimensions.clientHeight / state.tallestPage.totalActualHeight;\n            }\n            else if (mode === Crocodoc.ZOOM_AUTO) {\n                return this.calculateZoomAutoValue();\n            } else {\n                return state.zoomState.zoom;\n            }\n        },\n\n        /**\n         * Apply the given zoom to the pages\n         * @param   {float} zoom The zoom value\n         * @returns {void}\n         */\n        applyZoom: function (zoom) {\n            applyZoomResize(this, zoom);\n        },\n\n        /**\n         * Scroll to the given value (page number or one of the scroll constants)\n         * @param   {int|string} val  The value to scroll to\n         * @returns {void}\n         */\n        scrollTo: function (val) {\n            var state = this.state,\n                pageNum = parseInt(val, 10);\n            if (typeof val === 'string') {\n                if (val === Crocodoc.SCROLL_PREVIOUS && state.currentPage > 1) {\n                    pageNum = this.calculatePreviousPage();\n                }\n                else if (val === Crocodoc.SCROLL_NEXT && state.currentPage < this.numPages) {\n                    pageNum = this.calculateNextPage();\n                }\n                else if (!pageNum) {\n                    return;\n                }\n            }\n            else if (!pageNum && pageNum !== 0) {\n                // pageNum is not a number\n                return;\n            }\n            pageNum = util.clamp(pageNum, 1, this.numPages);\n            this.scrollToPage(pageNum);\n        },\n\n        /**\n         * Scroll to the given page number\n         * @param   {int} page The page number to scroll to\n         * @returns {void}\n         */\n        scrollToPage: function (page) {\n            var offset = this.calculateScrollPositionForPage(page);\n            this.scrollToOffset(offset.left, offset.top);\n        },\n\n        /**\n         * Calculate which page is currently the \"focused\" page.\n         * By default, it's just the state's current page.\n         * @NOTE: this method will be overridden in most layouts.\n         * @returns {int} The current page\n         */\n        calculateCurrentPage: function () {\n            return this.state.currentPage;\n        },\n\n        /**\n         * Given a page number, return an object with top and left properties\n         * of the scroll position for that page\n         * @param   {int} pageNum The page number\n         * @returns {Object}      The scroll position object\n         */\n        calculateScrollPositionForPage: function (pageNum) {\n            var index = util.clamp(pageNum - 1, 0, this.numPages - 1),\n                page = this.state.pages[index];\n            return { top: page.y0, left: page.x0 };\n        },\n\n        /**\n         * Calculates the current range of pages that are visible\n         * @returns {Object} Range object with min and max values\n         */\n        calculateVisibleRange: function () {\n            var state = this.state,\n                pages = state.pages,\n                viewportHeight = state.viewportDimensions.clientHeight,\n                viewportWidth = state.viewportDimensions.clientWidth;\n\n            // no pages are visible, but this case breaks the logic below,\n            // becasue page widths/heights will also be 0\n            if (viewportWidth === 0 || viewportHeight === 0) {\n                return {\n                    min: -1,\n                    max: -1\n                };\n            }\n\n            var viewportY0 = state.scrollTop,\n                viewportY1 = viewportY0 + viewportHeight,\n                viewportX0 = state.scrollLeft,\n                viewportX1 = viewportX0 + viewportWidth,\n                lowY = util.bisectLeft(pages, viewportY0, 'y1'),\n                highY = util.bisectRight(pages, viewportY1, 'y0') - 1,\n                lowX = util.bisectLeft(pages, viewportX0, 'x1'),\n                highX = util.bisectRight(pages, viewportX1, 'x0') - 1,\n                low = Math.max(lowX, lowY),\n                high = Math.min(highX, highY);\n\n            return util.constrainRange(low, high, this.numPages - 1);\n        },\n\n        /**\n         * Calculates the current range of pages that are fully visible\n         * @returns {Object} Range object with min and max values\n         * @NOTE: the only difference between this and calculateVisibleRange is\n         * the bisectLeft/Right section below uses the opposite fields in the\n         * page objects to test against. (TODO) Consider refactoring this to\n         * make it a little simpler...\n         */\n        calculateFullyVisibleRange: function () {\n            var state = this.state,\n                pages = state.pages,\n                viewportHeight = state.viewportDimensions.clientHeight,\n                viewportWidth = state.viewportDimensions.clientWidth;\n\n            // no pages are visible, but this case breaks the logic below\n            // becasue page widths/heights will also be 0\n            if (viewportWidth === 0 || viewportHeight === 0) {\n                return {\n                    min: -1,\n                    max: -1\n                };\n            }\n\n            var viewportY0 = state.scrollTop,\n                viewportY1 = viewportY0 + viewportHeight,\n                viewportX0 = state.scrollLeft,\n                viewportX1 = viewportX0 + viewportWidth,\n                lowY = util.bisectLeft(pages, viewportY0, 'y0'),\n                highY = util.bisectRight(pages, viewportY1, 'y1') - 1,\n                lowX = util.bisectLeft(pages, viewportX0, 'x0'),\n                highX = util.bisectRight(pages, viewportX1, 'x1') - 1,\n                low = Math.max(lowX, lowY),\n                high = Math.min(highX, highY);\n\n            return util.constrainRange(low, high, this.numPages - 1);\n        },\n\n        /**\n         * Set the current page, update the visible pages, and broadcast a\n         * pagefocus  message if the given page is not already the current page\n         * @param {int} page The page number\n         */\n        setCurrentPage: function (page) {\n            var state = this.state;\n            if (state.currentPage !== page) {\n                // page has changed\n                state.currentPage = page;\n                this.updateVisiblePages();\n                scope.broadcast('pagefocus', {\n                    page: state.currentPage,\n                    numPages: this.numPages,\n                    visiblePages: util.extend([], state.visiblePages),\n                    fullyVisiblePages: util.extend([], state.fullyVisiblePages)\n                });\n            } else {\n                // still update visible pages!\n                this.updateVisiblePages();\n            }\n        },\n\n        /**\n         * Calculate and update which pages are visible,\n         * possibly updating CSS classes on the pages\n         * @param {boolean} updateClasses Wheter to update page CSS classes as well\n         * @returns {void}\n         */\n        updateVisiblePages: function (updateClasses) {\n            var i, len, $page,\n                state = this.state,\n                visibleRange = this.calculateVisibleRange(),\n                fullyVisibleRange = this.calculateFullyVisibleRange();\n            state.visiblePages.length = 0;\n            state.fullyVisiblePages.length = 0;\n            for (i = 0, len = this.$pages.length; i < len; ++i) {\n                $page = this.$pages.eq(i);\n                if (i < visibleRange.min || i > visibleRange.max) {\n                    if (updateClasses && $page.hasClass(CSS_CLASS_PAGE_VISIBLE)) {\n                        $page.removeClass(CSS_CLASS_PAGE_VISIBLE);\n                    }\n                } else {\n                    if (updateClasses && !$page.hasClass(CSS_CLASS_PAGE_VISIBLE)) {\n                        $page.addClass(CSS_CLASS_PAGE_VISIBLE);\n                    }\n                    state.visiblePages.push(i + 1);\n                }\n                if (i >= fullyVisibleRange.min && i <= fullyVisibleRange.max) {\n                    state.fullyVisiblePages.push(i + 1);\n                }\n            }\n        },\n\n        /**\n         * Update page positions, sizes, and rows\n         * @param {boolean} [forceUpdatePaddings] If true, force update page paddings\n         * @returns {void}\n         */\n        updatePageStates: function (forceUpdatePaddings) {\n            var state = this.state,\n                pages = state.pages,\n                rows = state.rows,\n                scrollTop = this.$viewport.scrollTop(),\n                scrollLeft = this.$viewport.scrollLeft(),\n                rowIndex = 0,\n                lastY1 = 0,\n                rightmostPageIndex = 0,\n                bottommostPageIndex = 0,\n                i,\n                len,\n                page,\n                pageEl,\n                $pageEl;\n\n            rows.length = state.sumWidths = state.sumHeights = state.totalWidth = state.totalHeight = 0;\n            state.widestPage.totalActualWidth = state.tallestPage.totalActualHeight = 0;\n\n            // update the x/y positions and sizes of each page\n            // this is basically used as a cache, since accessing the DOM is slow\n            for (i = 0, len = this.$pages.length; i < len; ++i) {\n                $pageEl = this.$pages.eq(i);\n                pageEl = $pageEl[0];\n                page = pages[i];\n                if (!page || forceUpdatePaddings) {\n                    $pageEl.css('padding', '');\n                    page = {\n                        index: i,\n                        // only get paddings on the first updatePageStates\n                        // @TODO: look into using numeric versions of these styles in IE for better perf\n                        paddingLeft: parseFloat($pageEl.css(STYLE_PADDING_LEFT)),\n                        paddingRight: parseFloat($pageEl.css(STYLE_PADDING_RIGHT)),\n                        paddingTop: parseFloat($pageEl.css(STYLE_PADDING_TOP)),\n                        paddingBottom: parseFloat($pageEl.css(STYLE_PADDING_BOTTOM))\n                    };\n                }\n\n                if (!page.actualWidth) {\n                    page.actualWidth = parseFloat(pageEl.getAttribute('data-width'));\n                }\n                if (!page.actualHeight) {\n                    page.actualHeight = parseFloat(pageEl.getAttribute('data-height'));\n                }\n\n                page.totalActualWidth = page.actualWidth + page.paddingLeft + page.paddingRight;\n                page.totalActualHeight = page.actualHeight + page.paddingTop + page.paddingBottom;\n\n                page.width = pageEl.offsetWidth;\n                page.height = pageEl.offsetHeight;\n                page.x0 = pageEl.offsetLeft;\n                page.y0 = pageEl.offsetTop;\n\n                page.x1 = page.width + page.x0;\n                page.y1 = page.height + page.y0;\n\n                // it is in the same rowIndex as the prev if y0 >= prev rowIndex max y1\n                // @NOTE: we add two pixels to y0, because sometimes there\n                // seems to be a little overlap #youcantexplainthat\n                // @TODO: #explainthat\n                if (lastY1 && getMaxY1InRow(pages, rows[rowIndex]) <= page.y0 + 2) {\n                    rowIndex++;\n                }\n                lastY1 = page.y1;\n                if (!rows[rowIndex]) {\n                    rows[rowIndex] = [];\n                }\n                // all pages are not created equal\n                if (page.totalActualWidth > state.widestPage.totalActualWidth) {\n                    state.widestPage = page;\n                }\n                if (page.totalActualHeight > state.tallestPage.totalActualHeight) {\n                    state.tallestPage = page;\n                }\n                state.sumWidths += page.width;\n                state.sumHeights += page.height;\n                page.rowIndex = rowIndex;\n                pages[i] = page;\n                rows[rowIndex].push(i);\n\n                if (pages[rightmostPageIndex].x0 + pages[rightmostPageIndex].width < page.x0 + page.width) {\n                    rightmostPageIndex = i;\n                }\n                if (pages[bottommostPageIndex].y0 + pages[bottommostPageIndex].height < page.y0 + page.height) {\n                    bottommostPageIndex = i;\n                }\n            }\n\n            state.totalWidth = pages[rightmostPageIndex].x0 + pages[rightmostPageIndex].width;\n            state.totalHeight = pages[bottommostPageIndex].y0 + pages[bottommostPageIndex].height;\n            state.scrollTop = scrollTop;\n            state.scrollLeft = scrollLeft;\n            this.setCurrentPage(this.calculateCurrentPage());\n        },\n\n        /**\n         * Calculate and update the current page\n         * @returns {void}\n         */\n        updateCurrentPage: function () {\n            var currentPage = this.calculateCurrentPage();\n            this.setCurrentPage(currentPage);\n        },\n\n        /**\n         * Handle resize messages\n         * @param   {Object} data Object containing width and height of the viewport\n         * @returns {void}\n         */\n        handleResize: function (data) {\n            var zoomMode = this.state.zoomState.zoomMode;\n            this.state.viewportDimensions = data;\n            this.updateZoomLevels();\n            this.setZoom(zoomMode);\n        },\n\n        /**\n         * Handle scrollend messages (forwarded to handleScroll)\n         * @param   {Object} data Object containing scrollTop and scrollLeft of the viewport\n         * @returns {void}\n         */\n        handleScrollEnd: function (data) {\n            // update CSS classes\n            this.$doc.find('.' + CSS_CLASS_CURRENT_PAGE).removeClass(CSS_CLASS_CURRENT_PAGE);\n            this.$pages.eq(this.state.currentPage - 1).addClass(CSS_CLASS_CURRENT_PAGE);\n            this.updateVisiblePages(true);\n            this.handleScroll(data);\n        },\n\n        /**\n         * Update the scroll position after a zoom\n         * @param {bool} shouldNotCenter Whether or not the scroll position\n         *                               should be updated to center the new\n         *                               zoom level\n         * @returns {void}\n         */\n        updateScrollPosition: function (shouldNotCenter) {\n            var state = this.state,\n                zoomState = state.zoomState,\n                ratio = zoomState.zoom / zoomState.prevZoom,\n                newScrollLeft, newScrollTop;\n\n            // update scroll position\n            newScrollLeft = state.scrollLeft * ratio;\n            newScrollTop = state.scrollTop * ratio;\n\n            // zoom to center\n            if (shouldNotCenter !== true) {\n                newScrollTop += state.viewportDimensions.offsetHeight * (ratio - 1) / 2;\n                newScrollLeft += state.viewportDimensions.offsetWidth * (ratio - 1) / 2;\n            }\n\n            // scroll!\n            this.scrollToOffset(newScrollLeft, newScrollTop);\n        },\n\n        /** MUST BE IMPLEMENTED IN LAYOUT **/\n        updateLayout: function () {},\n        calculateZoomAutoValue: function () { return 1; },\n        calculateNextPage: function () { return 1; },\n        calculatePreviousPage: function () { return 1; }\n    });\n});\n\n/**\n * The presentation-two-page layout\n */\nCrocodoc.addComponent('layout-' + LAYOUT_PRESENTATION_TWO_PAGE, ['layout-' + LAYOUT_PRESENTATION], function (scope, presentation) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var util = scope.getUtility('common');\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return presentation.extend({\n        /**\n         * Initialize the presentation-two-page layout component\n         * @returns {void}\n         */\n        init: function () {\n            this.twoPageMode = true;\n            presentation.init.call(this);\n        },\n\n        /**\n         * Calculates the next page\n         * @returns {int} The next page number\n         */\n        calculateNextPage: function () {\n            return this.state.currentPage + 2;\n        },\n\n        /**\n         * Calculates the previous page\n         * @returns {int} The previous page number\n         */\n        calculatePreviousPage: function () {\n            return this.state.currentPage - 2;\n        },\n\n        /**\n         * Calculate the numeric value for a given zoom mode (or return the value if it's already numeric)\n         * @param   {string} mode The mode to zoom to\n         * @returns {float}       The zoom value\n         */\n        calculateZoomValue: function (mode) {\n            var baseVal = presentation.calculateZoomValue.call(this, mode);\n            if (mode === ZOOM_FIT_WIDTH) {\n                baseVal /= 2;\n            }\n            return baseVal;\n        },\n\n        /**\n         * Scroll to the given page number\n         * @param   {int} page The page number to scroll to\n         * @returns {void}\n         */\n        scrollToPage: function (page) {\n            // pick the left page\n            presentation.scrollToPage.call(this, page - (page + 1) % 2);\n        },\n\n        /**\n         * Calculates the current range of pages that are visible\n         * @returns {Object} Range object with min and max values\n         */\n        calculateVisibleRange: function () {\n            var min = this.state.currentPage - 1,\n                max = min + 1;\n            return util.constrainRange(min, max, this.numPages);\n        },\n\n        /**\n         * Calculates the current range of pages that are fully visible\n         * @NOTE: this can be incorrect for presentations that are zoomed in\n         * past the size of the viewport... I'll fix it if it becomes an issue\n         * @returns {Object} Range object with min and max values\n         */\n        calculateFullyVisibleRange: function () {\n            return this.calculateVisibleRange();\n        }\n    });\n});\n\n/**\n *The presentation layout\n */\nCrocodoc.addComponent('layout-' + LAYOUT_PRESENTATION, ['layout-paged'], function (scope, paged) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var util = scope.getUtility('common');\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return paged.extend({\n        /**\n         * Initialize the presentation layout component\n         * @returns {void}\n         */\n        init: function () {\n            paged.init.call(this);\n            this.updatePageMargins();\n            this.updatePageClasses();\n        },\n\n        /**\n         * Destroy the component\n         * @returns {void}\n         */\n        destroy: function () {\n            paged.destroy.call(this);\n            this.$pages.css({ margin: '', left: '' }).removeClass(PRESENTATION_CSS_CLASSES);\n        },\n\n        /**\n         * Calculate the numeric value for zoom 'auto' for this layout mode\n         * @returns {float} The zoom value\n         */\n        calculateZoomAutoValue: function () {\n            var fitWidth = this.calculateZoomValue(ZOOM_FIT_WIDTH),\n                fitHeight = this.calculateZoomValue(ZOOM_FIT_HEIGHT);\n            return Math.min(fitWidth, fitHeight);\n        },\n\n        /**\n         * Calculate which page is currently the \"focused\" page.\n         * In presentation mode, it's just the state's current page.\n         * @returns {int} The current page\n         */\n        calculateCurrentPage: function () {\n            return this.state.currentPage;\n        },\n\n        /**\n         * Calculates the next page\n         * @returns {int} The next page number\n         */\n        calculateNextPage: function () {\n            return this.state.currentPage + 1;\n        },\n\n        /**\n         * Calculates the previous page\n         * @returns {int} The previous page number\n         */\n        calculatePreviousPage: function () {\n            return this.state.currentPage - 1;\n        },\n\n        /**\n         * Calculates the current range of pages that are visible\n         * @returns {Object} Range object with min and max values\n         */\n        calculateVisibleRange: function () {\n            var index = this.state.currentPage - 1;\n            return util.constrainRange(index, index, this.numPages);\n        },\n\n        /**\n         * Calculates the current range of pages that are fully visible\n         * @NOTE: this can be incorrect for presentations that are zoomed in\n         * past the size of the viewport... I'll fix it if it becomes an issue\n         * @returns {Object} Range object with min and max values\n         */\n        calculateFullyVisibleRange: function () {\n            return this.calculateVisibleRange();\n        },\n\n        /**\n         * Set the current page and updatePageClasses\n         * @param {int} page The page number\n         */\n        setCurrentPage: function (page) {\n            var index = util.clamp(page - 1, 0, this.numPages),\n                $precedingPage,\n                $currentPage;\n\n            paged.setCurrentPage.call(this, page);\n\n            // update CSS classes\n            this.$doc.find('.' + CSS_CLASS_PRECEDING_PAGE)\n                .removeClass(CSS_CLASS_PRECEDING_PAGE);\n\n            $precedingPage = this.$doc.find('.' + CSS_CLASS_CURRENT_PAGE);\n            $currentPage = this.$pages.eq(index);\n\n            if ($precedingPage[0] !== $currentPage[0]) {\n                $precedingPage\n                    .addClass(CSS_CLASS_PRECEDING_PAGE)\n                    .removeClass(CSS_CLASS_CURRENT_PAGE);\n                $currentPage.addClass(CSS_CLASS_CURRENT_PAGE);\n            }\n\n            this.updateVisiblePages(true);\n            this.updatePageClasses(index);\n        },\n\n        /**\n         * Scroll to the given page number\n         * @param   {int} page The page number to scroll to\n         * @returns {void}\n         */\n        scrollToPage: function (page) {\n            this.setCurrentPage(page);\n        },\n\n        /**\n         * Updates the layout elements (pages, doc, etc) CSS\n         * appropriately for the current zoom level\n         * @returns {void}\n         */\n        updateLayout: function () {\n            var state = this.state,\n                zoomState = state.zoomState,\n                zoom = zoomState.zoom,\n                page = this.currentPage || 1,\n                currentPage = state.pages[page - 1],\n                secondPage = this.twoPageMode ? state.pages[page] : currentPage,\n                viewportWidth = state.viewportDimensions.clientWidth,\n                viewportHeight = state.viewportDimensions.clientHeight,\n                secondPageWidth,\n                currentPageWidth,\n                currentPageHeight,\n                zoomedWidth, zoomedHeight,\n                docWidth, docHeight;\n\n            secondPageWidth = secondPage.actualWidth;\n            currentPageWidth = currentPage.actualWidth + (this.twoPageMode ? secondPageWidth : 0);\n            currentPageHeight = currentPage.actualHeight;\n\n            zoomedWidth = Math.floor((currentPageWidth + currentPage.paddingLeft + secondPage.paddingRight) * zoom);\n            zoomedHeight = Math.floor((currentPage.totalActualHeight) * zoom);\n\n            docWidth = Math.max(zoomedWidth, viewportWidth);\n            docHeight = Math.max(zoomedHeight, viewportHeight);\n\n            this.$doc.css({\n                width: docWidth,\n                height: docHeight\n            });\n\n            this.updatePageMargins();\n\n            if (docWidth > viewportWidth || docHeight > viewportHeight) {\n                this.$el.addClass('crocodoc-scrollable');\n            } else {\n                this.$el.removeClass('crocodoc-scrollable');\n            }\n        },\n\n        /**\n         * Update page margins for the viewport size and zoom level\n         * @returns {void}\n         */\n        updatePageMargins: function () {\n            var i, len, page, $page,\n                width, height, left, top, paddingH,\n                state = this.state,\n                viewportWidth = state.viewportDimensions.clientWidth,\n                viewportHeight = state.viewportDimensions.clientHeight;\n            // update pages so they are centered (preserving margins)\n            for (i = 0, len = this.$pages.length; i < len; ++i) {\n                $page = this.$pages.eq(i);\n                page = state.pages[i];\n\n                if (this.twoPageMode) {\n                    paddingH = (i % 2 === 1) ? page.paddingRight : page.paddingLeft;\n                } else {\n                    paddingH = page.paddingRight + page.paddingLeft;\n                }\n                width = (page.actualWidth + paddingH) * state.zoomState.zoom;\n                height = (page.actualHeight + page.paddingTop + page.paddingBottom) * state.zoomState.zoom;\n\n                if (this.twoPageMode) {\n                    left = Math.max(0, (viewportWidth - width * 2) / 2);\n                    if (i % 2 === 1) {\n                        left += width;\n                    }\n                } else {\n                    left = (viewportWidth - width) / 2;\n                }\n                top = (viewportHeight - height) / 2;\n                left = Math.max(left, 0);\n                top = Math.max(top, 0);\n                $page.css({\n                    marginLeft: left,\n                    marginTop: top\n                });\n            }\n        },\n\n        /**\n         * Update page classes for presentation mode transitions\n         * @returns {void}\n         */\n        updatePageClasses: function () {\n            var $pages = this.$pages,\n                index = this.state.currentPage - 1,\n                next = index + 1,\n                prev = index - 1,\n                buffer = 20;\n\n            // @TODO: optimize this a bit\n            // add/removeClass is expensive, so try using hasClass\n            $pages.removeClass(PRESENTATION_CSS_CLASSES);\n            if (this.twoPageMode) {\n                next = index + 2;\n                prev = index - 2;\n                $pages.slice(Math.max(prev, 0), index).addClass(CSS_CLASS_PAGE_PREV);\n                $pages.slice(next, next + 2).addClass(CSS_CLASS_PAGE_NEXT);\n            } else {\n                if (prev >= 0) {\n                    $pages.eq(prev).addClass(CSS_CLASS_PAGE_PREV);\n                }\n                if (next < this.numPages) {\n                    $pages.eq(next).addClass(CSS_CLASS_PAGE_NEXT);\n                }\n            }\n            $pages.slice(0, index).addClass(CSS_CLASS_PAGE_BEFORE);\n            $pages.slice(Math.max(0, index - buffer), index).addClass(CSS_CLASS_PAGE_BEFORE_BUFFER);\n            $pages.slice(next).addClass(CSS_CLASS_PAGE_AFTER);\n            $pages.slice(next, Math.min(this.numPages, next + buffer)).addClass(CSS_CLASS_PAGE_AFTER_BUFFER);\n\n            /*\n            // OPTIMIZATION CODE NOT YET WORKING PROPERLY\n            $pages.slice(0, index).each(function () {\n                var $p = $(this),\n                    i = $p.index(),\n                    toAdd = '',\n                    toRm = '';\n                if (!$p.hasClass(beforeClass.trim())) toAdd += beforeClass;\n                if ($p.hasClass(nextClass.trim())) toRm += nextClass;\n                if ($p.hasClass(afterClass.trim())) toRm += afterClass;\n                if ($p.hasClass(afterBufferClass.trim())) toRm += afterBufferClass;\n                if (i >= index - buffer && !$p.hasClass(beforeBufferClass.trim()))\n                    toAdd += beforeBufferClass;\n                else if ($p.hasClass(beforeBufferClass.trim()))\n                    toRm += beforeBufferClass;\n                if (i >= prev && !$p.hasClass(prevClass.trim()))\n                    toAdd += prevClass;\n                else if ($p.hasClass(prevClass.trim()))\n                    toRm += prevClass;\n                $p.addClass(toAdd).removeClass(toRm);\n//                console.log('before', $p.index(), toRm, toAdd);\n            });\n            $pages.slice(next).each(function () {\n                var $p = $(this),\n                    i = $p.index(),\n                    toAdd = '',\n                    toRm = '';\n                if (!$p.hasClass(afterClass.trim())) toAdd += afterClass;\n                if ($p.hasClass(prevClass.trim())) toRm += prevClass;\n                if ($p.hasClass(beforeClass.trim())) toRm += beforeClass;\n                if ($p.hasClass(beforeBufferClass.trim())) toRm += beforeBufferClass;\n                if (i <= index + buffer && !$p.hasClass(afterBufferClass.trim()))\n                    toAdd += afterBufferClass;\n                else if ($p.hasClass(afterBufferClass.trim()))\n                    toRm += afterBufferClass;\n                if (i <= next + 1 && !$p.hasClass(nextClass.trim()))\n                    toAdd += nextClass;\n                else if ($p.hasClass(nextClass.trim()))\n                    toRm += nextClass;\n                $p.addClass(toAdd).removeClass(toRm);\n//                console.log('after', $p.index(), toRm, toAdd);\n            });*/\n        }\n    });\n});\n\n/**\n * Layout for text-based files\n */\nCrocodoc.addComponent('layout-' + LAYOUT_TEXT, ['layout-base'], function (scope, base) {\n    'use strict';\n\n    var util = scope.getUtility('common');\n\n    return base.extend({\n        init: function () {\n            base.init.call(this);\n            this.zoomLevels = this.config.zoomLevels.slice();\n            this.minZoom = this.zoomLevels[0];\n            this.maxZoom = this.zoomLevels[this.zoomLevels.length - 1];\n        },\n\n        setZoom: function (val) {\n            var z,\n                zoomState = this.state.zoomState,\n                currentZoom = zoomState.zoom;\n\n            if (typeof val === 'string') {\n                z = this.calculateNextZoomLevel(val);\n                if (!z) {\n                    if (val === 'auto' || val === 'fitwidth' || val === 'fitheight') {\n                        z = 1;\n                    } else {\n                        z = currentZoom;\n                    }\n                }\n            } else {\n                z = parseFloat(val) || currentZoom;\n            }\n\n            z = util.clamp(z, this.minZoom, this.maxZoom);\n            this.config.$doc.css('font-size', (z * 10) + 'pt');\n\n            zoomState.prevZoom = currentZoom;\n            zoomState.zoom = z;\n            zoomState.canZoomIn = this.calculateNextZoomLevel(Crocodoc.ZOOM_IN) !== false;\n            zoomState.canZoomOut = this.calculateNextZoomLevel(Crocodoc.ZOOM_OUT) !== false;\n\n            scope.broadcast('zoom', util.extend({\n                isDraggable: this.isDraggable()\n            }, zoomState));\n        }\n    });\n});\n\n/**\n * The vertical-single-column layout\n */\nCrocodoc.addComponent('layout-' + LAYOUT_VERTICAL_SINGLE_COLUMN, ['layout-' + LAYOUT_VERTICAL], function (scope, vertical) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    // there is nothing different about this layout aside from the name (and CSS class name)\n    // so we can just return the vertical layout\n    return vertical;\n});\n\n/**\n * The vertical layout\n */\nCrocodoc.addComponent('layout-' + LAYOUT_VERTICAL, ['layout-paged'], function (scope, paged) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var util = scope.getUtility('common'),\n        browser = scope.getUtility('browser');\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return paged.extend({\n\n        /**\n         * Calculate the numeric value for zoom 'auto' for this layout mode\n         * @returns {float} The zoom value\n         */\n        calculateZoomAutoValue: function () {\n            var state = this.state,\n                fitWidth = this.calculateZoomValue(ZOOM_FIT_WIDTH),\n                fitHeight = this.calculateZoomValue(ZOOM_FIT_HEIGHT);\n\n            if (state.widestPage.actualWidth > state.tallestPage.actualHeight) {\n                // landscape\n                // max zoom 1 for vertical mode\n                return Math.min(1, fitWidth, fitHeight);\n            } else {\n                // portrait\n                if (browser.mobile) {\n                    return fitWidth;\n                }\n                // limit max zoom to 100% of the doc\n                return Math.min(1, fitWidth);\n            }\n        },\n\n        /**\n         * Calculate which page is currently the \"focused\" page.\n         * In vertical mode, this is the page at the top (and if multiple columns, the leftmost page),\n         * where at least half of the page is showing.\n         * @returns {int} The current page\n         */\n        calculateCurrentPage: function () {\n            var prevPageIndex,\n                currentPageIndex,\n                rowIndex,\n                row,\n                offset,\n                state = this.state,\n                pages = state.pages;\n\n            prevPageIndex = util.bisectRight(pages, state.scrollTop, 'y0') - 1;\n            if (prevPageIndex < 0) {\n                return 1;\n            }\n            offset = state.scrollTop + pages[prevPageIndex].height / 2;\n            currentPageIndex = util.bisectRight(pages, offset, 'y0') - 1;\n            rowIndex = pages[currentPageIndex].rowIndex;\n            row = state.rows[rowIndex];\n            return 1 + row[0];\n\n        },\n\n        /**\n         * Calculates the next page\n         * @returns {int} The next page number\n         */\n        calculateNextPage: function () {\n            var state = this.state,\n                currentPage = state.pages[state.currentPage - 1],\n                rowIndex = currentPage.rowIndex,\n                nextRow = state.rows[rowIndex + 1];\n            return nextRow && nextRow[0] + 1 || state.currentPage;\n        },\n\n        /**\n         * Calculates the previous page\n         * @returns {int} The previous page number\n         */\n        calculatePreviousPage: function () {\n            var state = this.state,\n                currentPage = state.pages[state.currentPage - 1],\n                rowIndex = currentPage.rowIndex,\n                prevRow = state.rows[rowIndex - 1];\n            return prevRow && prevRow[0] + 1 || state.currentPage;\n        },\n\n        /**\n         * Handle resize mesages\n         * @param   {Object} data The message data\n         * @returns {void}\n         */\n        handleResize: function (data) {\n            paged.handleResize.call(this, data);\n            this.updateCurrentPage();\n        },\n\n        /**\n         * Handle scroll mesages\n         * @param   {Object} data The message data\n         * @returns {void}\n         */\n        handleScroll: function (data) {\n            paged.handleScroll.call(this, data);\n            this.updateCurrentPage();\n        },\n\n        /**\n         * Updates the layout elements (pages, doc, etc) CSS\n         * appropriately for the current zoom level\n         * @returns {void}\n         */\n        updateLayout: function () {\n            // vertical stuff\n            var state = this.state,\n                zoom = state.zoomState.zoom,\n                zoomedWidth,\n                docWidth;\n\n            zoomedWidth = Math.floor(state.widestPage.totalActualWidth * zoom);\n\n            // use clientWidth for the doc (prevent scrollbar)\n            // use width:auto when possible\n            if (zoomedWidth <= state.viewportDimensions.clientWidth) {\n                docWidth = 'auto';\n            } else {\n                docWidth = zoomedWidth;\n            }\n\n            this.$doc.css({\n                width: docWidth\n            });\n        }\n    });\n});\n\n\n/*global setTimeout, clearTimeout*/\n\n/**\n * lazy-loader component for controlling when pages should be loaded and unloaded\n */\nCrocodoc.addComponent('lazy-loader', function (scope) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var util = scope.getUtility('common'),\n        browser = scope.getUtility('browser'),\n        api = {},\n        pages,\n        numPages,\n        pagefocusTriggerLoadingTID,\n        readyTriggerLoadingTID,\n        pageLoadTID,\n        pageLoadQueue = [],\n        pageLoadRange = 1,\n        pageLoadingStopped = true,\n        scrollDirection = 1,\n        ready = false,\n        layoutState = {\n            page: 1,\n            visiblePages: [1]\n        };\n\n    /**\n     * Create and return a range object (eg., { min: x, max: y })\n     * for the current pageLoadRange constrained to the number of pages\n     * @param  {int} range The range from current page\n     * @returns {Object}    The range object\n     * @private\n     */\n    function calculateRange(range) {\n        range = range || pageLoadRange;\n        var currentIndex = layoutState.page - 1,\n            low = currentIndex - range,\n            high = currentIndex + range;\n        return util.constrainRange(low, high, numPages - 1);\n    }\n\n    /**\n     * Loop through the pageLoadQueue and load pages sequentially,\n     * setting a timeout to run again after PAGE_LOAD_INTERVAL ms\n     * until the queue is empty\n     * @returns {void}\n     * @private\n     */\n    function pageLoadLoop() {\n        var index;\n        clearTimeout(pageLoadTID);\n        if (pageLoadQueue.length > 0) {\n            // found a page to load\n            index = pageLoadQueue.shift();\n            // page exists and not reached max errors?\n            if (pages[index]) {\n                api.loadPage(index, function loadPageCallback(pageIsLoading) {\n                    if (pageIsLoading === false) {\n                        // don't wait if the page is not loading\n                        pageLoadLoop();\n                    } else {\n                        pageLoadTID = setTimeout(pageLoadLoop, PAGE_LOAD_INTERVAL);\n                    }\n                });\n            } else {\n                pageLoadLoop();\n            }\n        } else {\n            stopPageLoadLoop();\n        }\n    }\n\n    /**\n     * Start the page load loop\n     * @returns {void}\n     * @private\n     */\n    function startPageLoadLoop() {\n        clearTimeout(pageLoadTID);\n        pageLoadingStopped = false;\n        pageLoadTID = setTimeout(pageLoadLoop, PAGE_LOAD_INTERVAL);\n    }\n\n    /**\n     * Stop the page load loop\n     * @returns {void}\n     * @private\n     */\n    function stopPageLoadLoop() {\n        clearTimeout(pageLoadTID);\n        pageLoadingStopped = true;\n    }\n\n    /**\n     * Add a page to the page load queue and start the page\n     * load loop if necessary\n     * @param  {int} index The index of the page to add\n     * @returns {void}\n     * @private\n     */\n    function pushPageLoadQueue(index) {\n        pageLoadQueue.push(index);\n        if (pageLoadingStopped) {\n            startPageLoadLoop();\n        }\n    }\n\n    /**\n     * Clear all pages from the page load queue and stop the loop\n     * @returns {void}\n     * @private\n     */\n    function clearPageLoadQueue() {\n        pageLoadQueue.length = 0;\n        stopPageLoadLoop();\n    }\n\n    /**\n     * Returns true if the given index is in the page load range, and false otherwise\n     * @param   {int} index The page index\n     * @param   {int} rangeLength The page range length\n     * @returns {bool}      Whether the page index is in the page load range\n     * @private\n     */\n    function indexInRange(index, rangeLength) {\n        var range = calculateRange(rangeLength);\n        if (index >= range.min && index <= range.max) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns true if the given page index should be loaded, and false otherwise\n     * @param   {int} index The page index\n     * @returns {bool}      Whether the page should be loaded\n     * @private\n     */\n    function shouldLoadPage(index) {\n        var page = pages[index];\n\n        // does the page exist?\n        if (page) {\n\n            // within page load range?\n            if (indexInRange(index)) {\n                return true;\n            }\n\n            // is it visible?\n            if (pageIsVisible(index)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns true if the given page index should be unloaded, and false otherwise\n     * @param   {int} index The page index\n     * @param   {int} rangeLength The range length\n     * @returns {bool}      Whether the page should be unloaded\n     * @private\n     */\n    function shouldUnloadPage(index, rangeLength) {\n\n        // within page load range?\n        if (indexInRange(index, rangeLength)) {\n            return false;\n        }\n\n        // is it visible?\n        if (pageIsVisible(index)) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns true if the given page is visible, and false otherwise\n     * @param   {int} index The page index\n     * @returns {bool}      Whether the page is visible\n     * @private\n     */\n    function pageIsVisible(index) {\n        // is it visible?\n        return util.inArray(index + 1, layoutState.visiblePages) > -1;\n    }\n\n    /**\n     * Queues pages to load in order from indexFrom to indexTo\n     * @param   {number} start The page index to start at\n     * @param   {number} end   The page index to end at\n     * @returns {void}\n     */\n    function queuePagesToLoadInOrder(start, end) {\n        var increment = util.sign(end - start);\n\n        while (start !== end) {\n            api.queuePageToLoad(start);\n            start += increment;\n        }\n        api.queuePageToLoad(start);\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return util.extend(api, {\n        messages: [\n            'beforezoom',\n            'pageavailable',\n            'pagefocus',\n            'ready',\n            'scroll',\n            'scrollend',\n            'zoom'\n        ],\n\n        /**\n         * Handle framework messages\n         * @param {string} name The name of the message\n         * @param {Object} data The related data for the message\n         * @returns {void}\n         */\n        onmessage: function (name, data) {\n            switch (name) {\n                case 'beforezoom':\n                    this.handleBeforeZoom(data);\n                    break;\n                case 'pageavailable':\n                    this.handlePageAvailable(data);\n                    break;\n                case 'pagefocus':\n                    this.handlePageFocus(data);\n                    break;\n                case 'ready':\n                    this.handleReady();\n                    break;\n                case 'scroll':\n                    this.handleScroll();\n                    break;\n                case 'scrollend':\n                    this.handleScrollEnd();\n                    break;\n                case 'zoom':\n                    this.handleZoom(data);\n                    break;\n                // no default\n            }\n        },\n\n        /**\n         * Initialize the LazyLoader component\n         * @param {Array} pageComponents The array of page components to lazily load\n         * @returns {void}\n         */\n        init: function (pageComponents) {\n            pages = pageComponents;\n            numPages = pages.length;\n            pageLoadRange = (browser.mobile || browser.ielt10) ?\n                MAX_PAGE_LOAD_RANGE_MOBILE :\n                MAX_PAGE_LOAD_RANGE;\n            pageLoadRange = Math.min(pageLoadRange, numPages);\n        },\n\n        /**\n         * Destroy the LazyLoader component\n         * @returns {void}\n         */\n        destroy: function () {\n            this.cancelAllLoading();\n        },\n\n        /**\n         * Updates the current layout state and scroll direction\n         * @param   {Object} state The layout state\n         * @returns {void}\n         */\n        updateLayoutState: function (state) {\n            scrollDirection = util.sign(state.page - layoutState.page);\n            layoutState = state;\n        },\n\n        /**\n         * Queue pages to load in the following order:\n         * 1) current page\n         * 2) visible pages\n         * 3) pages within pageLoadRange of the viewport\n         * @returns {void}\n         * @NOTE: this function is debounced so it will not load and abort\n         * several times if called a lot in a short time\n         */\n        loadNecessaryPages: util.debounce(100, function () {\n            // cancel anything that happens to be loading first\n            this.cancelAllLoading();\n\n            // load current page first\n            this.queuePageToLoad(layoutState.page - 1);\n\n            // then load pages that are visible in the viewport\n            this.loadVisiblePages();\n\n            // then load pages beyond the viewport\n            this.loadPagesInRange(pageLoadRange);\n        }),\n\n        /**\n         * Queue pages to load within the given range such that\n         * proceeding pages are added before preceding pages\n         * @param  {int} range The range to load beyond the current page\n         * @returns {void}\n         */\n        loadPagesInRange: function (range) {\n            var currentIndex = layoutState.page - 1;\n            if (range > 0) {\n                range = calculateRange(range);\n                // load pages in the order of priority based on the direction\n                // the user is scrolling (load nearest page first, working in\n                // the scroll direction, then start on the opposite side of\n                // scroll direction and work outward)\n                // NOTE: we're assuming that a negative scroll direction means\n                // direction of previous pages, and positive is next pages...\n                if (scrollDirection >= 0) {\n                    queuePagesToLoadInOrder(currentIndex + 1, range.max);\n                    queuePagesToLoadInOrder(currentIndex - 1, range.min);\n                } else {\n                    queuePagesToLoadInOrder(currentIndex - 1, range.min);\n                    queuePagesToLoadInOrder(currentIndex + 1, range.max);\n                }\n            }\n        },\n\n        /**\n         * Queue to load all pages that are visible according\n         * to the current layoutState\n         * @returns {void}\n         */\n        loadVisiblePages: function () {\n            var i, len;\n            for (i = 0, len = layoutState.visiblePages.length; i < len; ++i) {\n                this.queuePageToLoad(layoutState.visiblePages[i] - 1);\n            }\n        },\n\n        /**\n         * Add the page at the given index to the page load queue\n         * and call the preload function on the page\n         * @param  {int} index The index of the page to load\n         * @returns {void}\n         */\n        queuePageToLoad: function (index) {\n            if (shouldLoadPage(index)) {\n                pages[index].preload();\n                pushPageLoadQueue(index);\n            }\n        },\n\n        /**\n         * Clear the page load queue\n         * @returns {void}\n         */\n        cancelAllLoading: function () {\n            clearTimeout(readyTriggerLoadingTID);\n            clearTimeout(pagefocusTriggerLoadingTID);\n            clearPageLoadQueue();\n        },\n\n        /**\n         * Call the load method on the page object at the specified index\n         * @param  {int}      index    The index of the page to load\n         * @param  {Function} callback Callback function to call always (regardless of page load success/fail)\n         * @returns {void}\n         */\n        loadPage: function (index, callback) {\n            $.when(pages[index] && pages[index].load())\n                .always(callback);\n        },\n\n        /**\n         * Call the unload method on the page object at the specified index\n         * @param  {int} index The page index\n         * @returns {void}\n         */\n        unloadPage: function (index) {\n            var page = pages[index];\n            if (page) {\n                page.unload();\n            }\n        },\n\n        /**\n         * Unload all pages that are not within the given range (nor visible)\n         * @param {int} rangeLength The page range length\n         * @returns {void}\n         */\n        unloadUnnecessaryPages: function (rangeLength) {\n            var i, l;\n            // remove out-of-range SVG from DOM\n            for (i = 0, l = pages.length; i < l; ++i) {\n                if (shouldUnloadPage(i, rangeLength)) {\n                    this.unloadPage(i);\n                }\n            }\n        },\n\n        /**\n         * Handle ready messages\n         * @returns {void}\n         */\n        handleReady: function () {\n            ready = true;\n            this.loadVisiblePages();\n            readyTriggerLoadingTID = setTimeout(function () {\n                api.loadNecessaryPages();\n            }, READY_TRIGGER_PRELOADING_DELAY);\n        },\n\n        /**\n         * Handle pageavailable messages\n         * @param   {Object} data The message data\n         * @returns {void}\n         */\n        handlePageAvailable: function (data) {\n            if (!ready) {\n                return;\n            }\n            var i;\n            if (data.all === true) {\n                data.upto = numPages;\n            }\n            if (data.page) {\n                this.queuePageToLoad(data.page - 1);\n            } else if (data.upto) {\n                for (i = 0; i < data.upto; ++i) {\n                    this.queuePageToLoad(i);\n                }\n            }\n        },\n\n        /**\n         * Handle pagefocus messages\n         * @param   {Object} data The message data\n         * @returns {void}\n         */\n        handlePageFocus: function (data) {\n            // NOTE: update layout state before `ready`\n            this.updateLayoutState(data);\n            if (!ready) {\n                return;\n            }\n            this.cancelAllLoading();\n            // set a timeout to trigger loading so we dont cause unnecessary layouts while scrolling\n            pagefocusTriggerLoadingTID = setTimeout(function () {\n                api.loadNecessaryPages();\n            }, 200);\n        },\n\n        /**\n         * Handle beforezoom messages\n         * @param   {Object} data The message data\n         * @returns {void}\n         */\n        handleBeforeZoom: function (data) {\n            if (!ready) {\n                return;\n            }\n            this.cancelAllLoading();\n            // @NOTE: for performance reasons, we unload as many pages as possible just before zooming\n            // so we don't have to layout as many pages at a time immediately after the zoom.\n            // This is arbitrarily set to 2x the number of visible pages before the zoom, and\n            // it seems to work alright.\n            this.unloadUnnecessaryPages(data.visiblePages.length * 2);\n        },\n\n        /**\n         * Handle zoom messages\n         * @param   {Object} data The message data\n         * @returns {void}\n         */\n        handleZoom: function (data) {\n            // NOTE: update layout state before `ready`\n            this.updateLayoutState(data);\n            if (!ready) {\n                return;\n            }\n            this.loadNecessaryPages();\n        },\n\n        /**\n         * Handle scroll messages\n         * @param   {Object} data The message data\n         * @returns {void}\n         */\n        handleScroll: function () {\n            this.cancelAllLoading();\n        },\n\n        /**\n         * Handle scrollend messages\n         * @param   {Object} data The message data\n         * @returns {void}\n         */\n        handleScrollEnd: function () {\n            if (!ready) {\n                return;\n            }\n            this.loadNecessaryPages();\n            this.unloadUnnecessaryPages(pageLoadRange);\n        }\n    });\n});\n\n/**\n * page-img component used to display raster image instead of SVG content for\n * browsers that do not support SVG\n */\nCrocodoc.addComponent('page-img', function (scope) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var browser = scope.getUtility('browser');\n\n    var $img, $el,\n        $loadImgPromise,\n        page,\n        imageLoaded = false,\n        removeOnUnload = browser.mobile;\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        /**\n         * Initialize the page-img component\n         * @param  {Element} el     The element to insert the image into\n         * @param  {number} pageNum The page number\n         * @returns {void}\n         */\n        init: function (el, pageNum) {\n            $el = $(el);\n            page = pageNum;\n        },\n\n        /**\n         * Destroy the page-img component\n         * @returns {void}\n         */\n        destroy: function () {\n            removeOnUnload = true;\n            this.unload();\n            $el.empty();\n        },\n\n        /**\n         * Prepare the element for loading\n         * @returns {void}\n         */\n        prepare: function () { /* noop */ },\n\n        /**\n         * Preload the image\n         * @returns {void}\n         */\n        preload: function () {\n            if (!$loadImgPromise) {\n                $loadImgPromise = scope.get('page-img', page);\n            }\n        },\n\n        /**\n         * Load the image\n         * @returns {$.Promise}    A jQuery Promise object\n         */\n        load: function () {\n            this.preload();\n\n            $loadImgPromise.done(function loadImgSuccess(img) {\n                if (!imageLoaded) {\n                    imageLoaded = true;\n                    $img = $(img).appendTo($el);\n                }\n            });\n\n            $loadImgPromise.fail(function loadImgFail(error) {\n                imageLoaded = false;\n                if (error) {\n                    scope.broadcast('asseterror', error);\n                }\n            });\n\n            return $loadImgPromise;\n        },\n\n        /**\n         * Unload the img if necessary\n         * @returns {void}\n         */\n        unload: function () {\n            if ($loadImgPromise) {\n                $loadImgPromise.abort();\n                $loadImgPromise = null;\n            }\n            if (removeOnUnload) {\n                if ($img) {\n                    $img.remove();\n                    $img = null;\n                }\n                imageLoaded = false;\n            }\n        }\n    };\n});\n\n/**\n * page-links component definition\n */\nCrocodoc.addComponent('page-links', function (scope) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var $el,\n        browser = scope.getUtility('browser');\n\n    /**\n     * Create a link element given link data\n     * @param   {Object} link The link data\n     * @returns {void}\n     * @private\n     */\n    function createLink(link) {\n        var $link = $('<a>').addClass(CSS_CLASS_PAGE_LINK),\n            left = link.bbox[0],\n            top = link.bbox[1],\n            attr = {};\n\n        if (browser.ie) {\n            // @NOTE: IE doesn't allow override of ctrl+click on anchor tags,\n            // but there is a workaround to add a child element (which triggers\n            // the onclick event first)\n            $('<span>')\n                .appendTo($link)\n                .on('click', handleClick);\n        }\n\n        $link.css({\n            left: left + 'pt',\n            top: top + 'pt',\n            width: link.bbox[2] - left + 'pt',\n            height: link.bbox[3] - top + 'pt'\n        });\n\n        if (link.uri) {\n            if (/^http|^mailto/.test(link.uri)) {\n                attr.href = encodeURI(link.uri);\n                attr.target = '_blank';\n            } else {\n                // don't embed this link... we don't trust the protocol\n                return;\n            }\n        } else if (link.destination) {\n            attr.href = '#page-' + link.destination.pagenum;\n        }\n\n        $link.attr(attr);\n        $link.data('link', link);\n        $link.appendTo($el);\n    }\n\n    /**\n     * Handle link clicks\n     * @param   {Event} event The event object\n     * @returns {void}\n     * @private\n     */\n    function handleClick(event) {\n        var targetEl = browser.ie ? event.target.parentNode : event.target,\n            $link = $(targetEl),\n            data = $link.data('link');\n\n        if (data) {\n            scope.broadcast('linkclick', data);\n        }\n        event.preventDefault();\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        /**\n         * Initialize the page-links component\n         * @param  {Array} links Links configuration array\n         * @returns {void}\n         * @TODO (possible): make a links data-provider instead of passing\n         * them in as an argument?\n         */\n        init: function (el, links) {\n            $el = $(el);\n            this.createLinks(links);\n            if (!browser.ie) {\n                // @NOTE: event handlers are individually bound in IE, because\n                // the ctrl+click workaround fails when using event delegation\n                $el.on('click', '.' + CSS_CLASS_PAGE_LINK, handleClick);\n            }\n        },\n\n        /**\n         * Destroy the page-links component\n         * @returns {void}\n         */\n        destroy: function () {\n            // @NOTE: individual click event handlers needed for IE are\n            // implicitly removed by jQuery when we empty the links container\n            $el.empty().off('click');\n            $el = browser = null;\n        },\n\n        /**\n         * Create and insert link elements into the element\n         * @param   {Array} links Array of link data\n         * @returns {void}\n         */\n        createLinks: function (links) {\n            var i, len;\n            for (i = 0, len = links.length; i < len; ++i) {\n                createLink(links[i]);\n            }\n        }\n    };\n});\n\n/**\n * page-svg component\n */\nCrocodoc.addComponent('page-svg', function (scope) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var browser = scope.getUtility('browser'),\n        DOMParser = window.DOMParser;\n\n    var $svg, $svgLayer,\n        $loadSVGPromise,\n        page,\n        destroyed = false,\n        unloaded = false,\n        svgLoaded = false,\n        viewerConfig = scope.getConfig(),\n        removeOnUnload = browser.mobile || browser.ielt10,\n        // * IE 9-10 and firefox perform better with <img> elements\n        // * IE 11 crashes when using img elements for some reason\n        // * Everything else is happy with iframe + innerhtml\n        embedStrategy = browser.ielt11 || browser.firefox ?\n                        EMBED_STRATEGY_DATA_URL_IMG :\n                        EMBED_STRATEGY_IFRAME_INNERHTML;\n\n    /**\n     * Create and return a jQuery object for the SVG element\n     * @returns {Object} The SVG $element\n     * @private\n     */\n    function createSVGEl() {\n        switch (embedStrategy) {\n            case EMBED_STRATEGY_IFRAME_INNERHTML:\n            case EMBED_STRATEGY_IFRAME_PROXY:\n                return $('<iframe>');\n\n            case EMBED_STRATEGY_DATA_URL_PROXY:\n            case EMBED_STRATEGY_DATA_URL:\n                return $('<object>').attr({\n                    type: SVG_MIME_TYPE,\n                    data: 'data:'+SVG_MIME_TYPE+';base64,' + window.btoa(SVG_CONTAINER_TEMPLATE)\n                });\n\n            case EMBED_STRATEGY_INLINE_SVG:\n                return $('<div>');\n\n            case EMBED_STRATEGY_BASIC_OBJECT:\n                return $('<object>');\n\n            case EMBED_STRATEGY_BASIC_IMG:\n            case EMBED_STRATEGY_DATA_URL_IMG:\n                return $('<img>');\n\n            // no default\n        }\n    }\n\n    /**\n     * Create the svg element if it hasn't been created,\n     * insert the SVG into the DOM if necessary\n     * @returns {void}\n     * @private\n     */\n    function prepareSVGContainer() {\n        if (!$svg || $svg.length === 0) {\n            svgLoaded = false;\n            $svg = createSVGEl();\n        }\n        if ($svg.parent().length === 0) {\n            $svg.appendTo($svgLayer);\n        }\n    }\n\n    /**\n     * Load svg text if necessary\n     * @returns {$.Promise}\n     * @private\n     */\n    function loadSVGText() {\n        if (svgLoaded ||\n            // @NOTE: these embed strategies don't require svg text to be loaded\n            embedStrategy === EMBED_STRATEGY_BASIC_OBJECT ||\n            embedStrategy === EMBED_STRATEGY_BASIC_IMG)\n        {\n            // don't load the SVG text, just return an empty promise\n            return $.Deferred().resolve().promise({\n                abort: function() {}\n            });\n        } else {\n            return scope.get('page-svg', page);\n        }\n    }\n\n    /**\n     * Fixes a bug in Safari where <use> elements are not supported properly\n     * by replacing each <use> element with a clone of its referenced <image>\n     * @param   {Document} contentDocument The SVG document\n     * @returns {void}\n     */\n    function fixUseElements(contentDocument) {\n        // find all <use> elements\n        var useEls = contentDocument.querySelectorAll('use');\n        [].forEach.call(useEls, function (use) {\n            var id = use.getAttribute('xlink:href'),\n                // clone the referenced <image> element\n                image = contentDocument.querySelector(id).cloneNode(),\n                parent = use.parentNode;\n            // remove the id so we don't have duplicates\n            image.removeAttribute('id');\n            // copy over the transform\n            image.setAttribute('transform', use.getAttribute('transform'));\n            // replace the use with the image\n            parent.replaceChild(image, use);\n        });\n    }\n\n    /**\n     * Embed the SVG into the page\n     * @returns {void}\n     * @private\n     */\n    function embedSVG(svgText) {\n        var domParser,\n            svgDoc,\n            svgEl,\n            html,\n            dataURLPrefix,\n            contentDocument = $svg[0].contentDocument,\n            contentWindow = $svg[0].contentWindow ||\n                             // @NOTE: supports older versions of ff\n                            contentDocument && contentDocument.defaultView;\n\n        switch (embedStrategy) {\n            case EMBED_STRATEGY_IFRAME_INNERHTML:\n                // @NOTE: IE 9 fix. This line in the file is causing the page not to render in IE 9.\n                // The link is not needed here anymore because we are including the stylesheet separately.\n                if (browser.ielt10) {\n                    svgText = svgText.replace(/<xhtml:link.*/,'');\n                }\n                html = HTML_TEMPLATE + svgText;\n                // @NOTE: documentElement.innerHTML is read-only in IE\n                if (browser.ielt10) {\n                    contentDocument.body.innerHTML = html;\n                } else {\n                    contentDocument.documentElement.innerHTML = html;\n                    // @NOTE: there is a bug in Safari 6 where <use>\n                    // elements don't work properly\n                    if ((browser.ios || browser.safari) && browser.version < 7) {\n                        fixUseElements(contentDocument);\n                    }\n                }\n                svgEl = contentDocument.getElementsByTagName('svg')[0];\n                break;\n\n            case EMBED_STRATEGY_IFRAME_PROXY:\n                contentDocument.documentElement.innerHTML = HTML_TEMPLATE;\n                var head = contentDocument.getElementsByTagName('head')[0] || contentDocument.documentElement,\n                    script = contentDocument.createElement('script'),\n                    data = '('+proxySVG+')()'; // IIFE to create window.loadSVG\n                script.type = 'text/javascript';\n                try {\n                    // doesn't work on ie...\n                    script.appendChild(document.createTextNode(data));\n                } catch(e) {\n                    // IE has funky script nodes\n                    script.text = data;\n                }\n                head.insertBefore(script, head.firstChild);\n                if (contentDocument.readyState === 'complete') {\n                    contentWindow.loadSVG(svgText);\n                } else {\n                    contentWindow.onload = function () {\n                        this.loadSVG(svgText);\n                    };\n                }\n                // NOTE: return is necessary here because we are waiting for a callback\n                // before unsetting svgText\n                return;\n\n            case EMBED_STRATEGY_DATA_URL:\n                domParser = new DOMParser();\n                svgDoc = domParser.parseFromString(svgText, SVG_MIME_TYPE);\n                svgEl = contentDocument.importNode(svgDoc.documentElement, true);\n                contentDocument.documentElement.appendChild(svgEl);\n                break;\n\n            case EMBED_STRATEGY_DATA_URL_PROXY:\n                contentWindow.loadSVG(svgText);\n                svgEl = contentDocument.querySelector('svg');\n                break;\n\n            case EMBED_STRATEGY_INLINE_SVG:\n                domParser = new DOMParser();\n                svgDoc = domParser.parseFromString(svgText, SVG_MIME_TYPE);\n                svgEl = document.importNode(svgDoc.documentElement, true);\n                $svg.append(svgEl);\n                break;\n\n            case EMBED_STRATEGY_BASIC_OBJECT:\n                $svg.attr({\n                    type: SVG_MIME_TYPE,\n                    data: scope.getDataProvider('page-svg').getURL(page)\n                });\n                svgEl = $svg[0];\n                break;\n\n            case EMBED_STRATEGY_BASIC_IMG:\n                svgEl = $svg[0];\n                svgEl.src = scope.getDataProvider('page-svg').getURL(page);\n                break;\n\n            case EMBED_STRATEGY_DATA_URL_IMG:\n                svgEl = $svg[0];\n                dataURLPrefix = 'data:' + SVG_MIME_TYPE;\n                if (!browser.ie && window.btoa) {\n                    svgEl.src = dataURLPrefix + ';base64,' + window.btoa(svgText);\n                } else {\n                    svgEl.src = dataURLPrefix + ',' + encodeURIComponent(svgText);\n                }\n                break;\n\n            // no default\n        }\n\n        // make sure the svg width/height are explicity set to 100%\n        svgEl.setAttribute('width', '100%');\n        svgEl.setAttribute('height', '100%');\n    }\n\n    /**\n     * handle SVG load success\n     * @param   {string} text The SVG text\n     * @returns {void}\n     */\n    function loadSVGSuccess(text) {\n        if (!destroyed && !unloaded) {\n            if (!svgLoaded && text) {\n                embedSVG(text);\n                svgLoaded = true;\n                if (!removeOnUnload) {\n                    // cleanup the promise (abort will remove the svg text from\n                    // the in-memory cache as well)\n                    $loadSVGPromise.abort();\n                    $loadSVGPromise = null;\n                }\n            }\n            // always insert the svg el when load was successful\n            if ($svg.parent().length === 0) {\n                $svg.appendTo($svgLayer);\n            }\n        }\n    }\n\n    /**\n     * Handle SVG load failure\n     * @param   {*} error The error\n     * @returns {void}\n     */\n    function loadSVGFail(error) {\n        scope.broadcast('asseterror', error);\n        svgLoaded = false;\n        if ($loadSVGPromise) {\n            $loadSVGPromise.abort();\n        }\n        // don't set the promise to null, because when it fails it should fail\n        // for good...\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n\n    return {\n        /**\n         * Initialize the page-svg component\n         * @param {jQuery} $el The element to load SVG layer into\n         * @param  {number} pageNum The page number\n         * @returns {void}\n         */\n        init: function ($el, pageNum) {\n            $svgLayer = $el;\n            page = pageNum;\n            embedStrategy = viewerConfig.embedStrategy || embedStrategy;\n        },\n\n        /**\n         * Destroy the page-svg component\n         * @returns {void}\n         */\n        destroy: function () {\n            destroyed = true;\n            removeOnUnload = true;\n            this.unload();\n            $svgLayer.empty();\n        },\n\n        /**\n         * Prepare the element for loading\n         * @returns {void}\n         */\n        prepare: function () {\n            prepareSVGContainer();\n        },\n\n        /**\n         * Prepare the SVG object to be loaded and start loading SVG text\n         * @returns {void}\n         */\n        preload: function () {\n            this.prepare();\n\n            if (!$loadSVGPromise) {\n                $loadSVGPromise = loadSVGText();\n            }\n        },\n\n        /**\n         * Load the SVG and call callback when complete.\n         * If there was an error, callback's first argument will be\n         * an error message, and falsy otherwise.\n         * @returns {$.Promise}    A jQuery promise object\n         */\n        load: function () {\n            unloaded = false;\n            this.preload();\n            $loadSVGPromise\n                .done(loadSVGSuccess)\n                .fail(loadSVGFail);\n            return $loadSVGPromise;\n        },\n\n        /**\n         * Unload the SVG object if necessary\n         * @returns {void}\n         */\n        unload: function () {\n            unloaded = true;\n            // stop loading the page if it hasn't finished yet\n            if ($loadSVGPromise && $loadSVGPromise.state() !== 'resolved') {\n                $loadSVGPromise.abort();\n                $loadSVGPromise = null;\n            }\n\n            // remove the svg element if necessary\n            if (removeOnUnload) {\n                if ($svg) {\n                    $svg.remove();\n                    $svg = null;\n                }\n                svgLoaded = false;\n            }\n        }\n    };\n});\n\n/**\n * page-text component\n */\nCrocodoc.addComponent('page-text', function (scope) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var browser = scope.getUtility('browser'),\n        subpx   = scope.getUtility('subpx');\n\n    var destroyed = false,\n        loaded = false,\n        $textLayer,\n        $loadTextPromise,\n        page,\n        viewerConfig = scope.getConfig();\n\n    /**\n     * Return true if we should use the text layer, false otherwise\n     * @returns {bool}\n     * @private\n     */\n    function shouldUseTextLayer() {\n        return viewerConfig.enableTextSelection && !browser.ielt9;\n    }\n\n    /**\n     * Handle success loading HTML text\n     * @param {string} text The HTML text\n     * @returns {void}\n     * @private\n     */\n    function loadTextLayerHTMLSuccess(text) {\n        var doc, textEl;\n\n        if (!text || loaded || destroyed) {\n            return;\n        }\n\n        loaded = true;\n\n        // create a document to parse the html text\n        doc = document.implementation.createHTMLDocument('');\n        doc.getElementsByTagName('body')[0].innerHTML = text;\n        text = null;\n\n        // select just the element we want (CSS_CLASS_PAGE_TEXT)\n        textEl = document.importNode(doc.querySelector('.' + CSS_CLASS_PAGE_TEXT), true);\n        $textLayer.attr('class', textEl.getAttribute('class'));\n        $textLayer.html(textEl.innerHTML);\n        subpx.fix($textLayer);\n    }\n\n    function loadTextLayerHTMLFail(error) {\n        if (error) {\n            scope.broadcast('asseterror', error);\n        }\n    }\n\n    /**\n     * Load text html if necessary and insert it into the element\n     * @returns {$.Promise}\n     * @private\n     */\n    function loadTextLayerHTML() {\n        // already load(ed|ing)?\n        if (!$loadTextPromise) {\n            if (shouldUseTextLayer()) {\n                $loadTextPromise = scope.get('page-text', page);\n            } else {\n                $loadTextPromise = $.Deferred().resolve().promise({\n                    abort: function () {}\n                });\n            }\n        }\n\n        return $loadTextPromise;\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        /**\n         * Initialize the page-text component\n         * @param {jQuery} $el The jQuery element to load the text layer into\n         * @returns {void}\n         */\n        init: function ($el, pageNum) {\n            $textLayer = $el;\n            page = pageNum;\n        },\n\n        /**\n         * Destroy the page-text component\n         * @returns {void}\n         */\n        destroy: function () {\n            destroyed = true;\n            this.unload();\n            $textLayer.empty();\n        },\n\n        /**\n         * Start loading HTML text\n         * @returns {void}\n         */\n        preload: function () {\n            loadTextLayerHTML();\n        },\n\n        /**\n         * Load the html text for the text layer and insert it into the element\n         * if text layer is enabled and is not loading/has not already been loaded\n         * @returns {$.Promise} A promise to load the text layer\n         */\n        load: function () {\n            return loadTextLayerHTML()\n                .done(loadTextLayerHTMLSuccess)\n                .fail(loadTextLayerHTMLFail);\n        },\n\n        /**\n         * Stop loading the text layer (no need to actually remove it)\n         * @returns {void}\n         */\n        unload: function () {\n            if ($loadTextPromise && $loadTextPromise.state() !== 'resolved') {\n                $loadTextPromise.abort();\n                $loadTextPromise = null;\n            }\n        },\n\n        /**\n         * Enable text selection\n         * @returns {void}\n         */\n        enable: function () {\n            $textLayer.css('display', '');\n            // we created an empty promise if text selection was previously disabled,\n            // so we can scrap it so a new promise will be created next time this\n            // page is requested\n            if ($loadTextPromise && !loaded) {\n                $loadTextPromise = null;\n            }\n        },\n\n        /**\n         * Disable text selection\n         * @returns {void}\n         */\n        disable: function () {\n            $textLayer.css('display', 'none');\n        }\n    };\n});\n\n/**\n * Page component\n */\nCrocodoc.addComponent('page', function (scope) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var support = scope.getUtility('support'),\n        util = scope.getUtility('common');\n\n    var $el,\n        pageText, pageContent, pageLinks,\n        pageNum, index,\n        isVisible, status,\n        loadRequested = false;\n\n    return {\n        messages: [\n            'pageavailable',\n            'pagefocus',\n            'textenabledchange',\n            'zoom'\n        ],\n\n        /**\n         * Handle framework messages\n         * @param {string} name The name of the message\n         * @param {Object} data The related data for the message\n         * @returns {void}\n         */\n        onmessage: function (name, data) {\n            switch (name) {\n                case 'pageavailable':\n                    if (data.page === index + 1 || data.upto > index || data.all === true) {\n                        if (status === PAGE_STATUS_CONVERTING) {\n                            status = PAGE_STATUS_NOT_LOADED;\n                        }\n                    }\n                    break;\n                case 'textenabledchange':\n                    if (data.enabled === true) {\n                        this.enableTextSelection();\n                    } else {\n                        this.disableTextSelection();\n                    }\n                    break;\n                case 'pagefocus':\n                    // falls through\n                case 'zoom':\n                    isVisible = pageNum === data.page || (util.inArray(pageNum, data.visiblePages) > -1);\n                    break;\n\n                // no default\n            }\n        },\n\n        /**\n         * Initialize the Page component\n         * @returns {void}\n         */\n        init: function ($pageEl, config) {\n            var $text, $svg, $links;\n            $el = $pageEl;\n            $svg = $pageEl.find('.' + CSS_CLASS_PAGE_SVG);\n            $text = $pageEl.find('.' + CSS_CLASS_PAGE_TEXT);\n            $links = $pageEl.find('.' + CSS_CLASS_PAGE_LINKS);\n\n            status = config.status || PAGE_STATUS_NOT_LOADED;\n            index = config.index;\n            pageNum = index + 1;\n            this.config = config;\n\n            config.url = config.url || '';\n            pageText = scope.createComponent('page-text');\n            pageContent = support.svg ?\n                    scope.createComponent('page-svg') :\n                    scope.createComponent('page-img');\n\n            pageText.init($text, pageNum);\n            pageContent.init($svg, pageNum);\n\n            if (config.enableLinks && config.links.length) {\n                pageLinks = scope.createComponent('page-links');\n                pageLinks.init($links, config.links);\n            }\n        },\n\n        /**\n         * Destroy the page component\n         * @returns {void}\n         */\n        destroy: function () {\n            this.unload();\n        },\n\n        /**\n         * Preload the SVG if the page is not loaded\n         * @returns {void}\n         */\n        preload: function () {\n            pageContent.prepare();\n            if (status === PAGE_STATUS_NOT_LOADED) {\n                pageContent.preload();\n                pageText.preload();\n            }\n        },\n\n        /**\n         * Load and show SVG and text assets for this page\n         * @returns {$.Promise}    jQuery Promise object or false if the page is not loading\n         */\n        load: function () {\n            var pageComponent = this;\n\n            loadRequested = true;\n\n            // the page has failed to load for good... don't try anymore\n            if (status === PAGE_STATUS_ERROR) {\n                return false;\n            }\n\n            // don't actually load if the page is converting\n            if (status === PAGE_STATUS_CONVERTING) {\n                return false;\n            }\n\n            // request assets to be loaded... but only ACTUALLY load if it is\n            // not loaded already\n            if (status !== PAGE_STATUS_LOADED) {\n                status = PAGE_STATUS_LOADING;\n            }\n            return $.when(pageContent.load(), pageText.load())\n                .done(function handleLoadDone() {\n                    if (loadRequested) {\n                        if (status !== PAGE_STATUS_LOADED) {\n                            $el.removeClass(CSS_CLASS_PAGE_LOADING);\n                            status = PAGE_STATUS_LOADED;\n                            scope.broadcast('pageload', { page: pageNum });\n                        }\n                    } else {\n                        pageComponent.unload();\n                    }\n                })\n                .fail(function handleLoadFail(error) {\n                    status = PAGE_STATUS_ERROR;\n                    $el.addClass(CSS_CLASS_PAGE_ERROR);\n                    scope.broadcast('pagefail', { page: index + 1, error: error });\n                });\n        },\n\n        /**\n         * Unload/hide SVG and text assets for this page\n         * @returns {void}\n         */\n        unload: function () {\n            loadRequested = false;\n            pageContent.unload();\n            pageText.unload();\n            if (status === PAGE_STATUS_LOADED) {\n                status = PAGE_STATUS_NOT_LOADED;\n                $el.addClass(CSS_CLASS_PAGE_LOADING);\n                $el.removeClass(CSS_CLASS_PAGE_ERROR);\n                scope.broadcast('pageunload', { page: pageNum });\n            }\n        },\n\n        /**\n         * Enable text selection, loading text assets if the page is visible\n         * @returns {void}\n         */\n        enableTextSelection: function () {\n            pageText.enable();\n            if (isVisible) {\n                pageText.load();\n            }\n        },\n\n        /**\n         * Disable text selection\n         * @returns {void}\n         */\n        disableTextSelection: function () {\n            pageText.disable();\n        }\n    };\n});\n\n\n\n/**\n * resizer component definition\n */\nCrocodoc.addComponent('resizer', function (scope) {\n\n    'use strict';\n\n    var util = scope.getUtility('common');\n\n    // shorter way of defining\n    // 'fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange'\n    var FULLSCREENCHANGE_EVENT = ['', ' webkit', ' moz', ' ']\n        .join('fullscreenchange') +\n        // @NOTE: IE 11 uses upper-camel-case for this, which is apparently necessary\n        'MSFullscreenChange';\n\n    var $window = $(window),\n        $document = $(document),\n        element,\n        frameWidth = 0,\n        currentClientWidth,\n        currentClientHeight,\n        currentOffsetWidth,\n        currentOffsetHeight,\n        inIframe = (function () {\n            try {\n                return window.self !== window.top;\n            } catch (e) {\n                return true;\n            }\n        })();\n\n    /**\n     * Fire the resize event with the proper data\n     * @returns {void}\n     * @private\n     */\n    function broadcast() {\n        scope.broadcast('resize', {\n            // shortcuts for offsetWidth/height\n            width: currentOffsetWidth,\n            height: currentOffsetHeight,\n            // client width is width of the inner, visible area\n            clientWidth: currentClientWidth,\n            clientHeight: currentClientHeight,\n            // offset width is the width of the element, including border,\n            // padding, and scrollbars\n            offsetWidth: currentOffsetWidth,\n            offsetHeight: currentOffsetHeight\n        });\n    }\n\n    /**\n     * Initialize an iframe to fire events on resize\n     * @returns {void}\n     * @private\n     */\n    function initResizer() {\n        var $iframe = $('<iframe frameborder=\"0\">'),\n            $div = $('<div>');\n        $iframe.add($div).css({\n            opacity: 0,\n            visiblility: 'hidden',\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            top: 0,\n            left: 0,\n            border: 0\n        });\n        $iframe.prependTo($div.prependTo(element));\n        if (util.getComputedStyle(element).position === 'static') {\n            $(element).css({ position: 'relative' });\n        }\n        $window = $($iframe[0].contentWindow);\n        $window.on('resize', checkResize);\n    }\n\n    /**\n     * Check if the element has resized, and broadcast the resize event if so\n     * @returns {void}\n     * @private\n     */\n    function checkResize() {\n        var newOffsetHeight = element.offsetHeight,\n            newOffsetWidth = element.offsetWidth;\n\n        // check if we're in a frame\n        if (inIframe) {\n            // firefox has an issue where styles aren't calculated in hidden iframes\n            // if the iframe was hidden and is now visible, broadcast a\n            // layoutchange event\n            if (frameWidth === 0 && window.innerWidth !== 0) {\n                frameWidth = window.innerWidth;\n                scope.broadcast('layoutchange');\n                return;\n            }\n        }\n\n        //on touch devices, the offset height is sometimes zero as content is loaded\n        if (newOffsetHeight) {\n            if (newOffsetHeight !== currentOffsetHeight || newOffsetWidth !== currentOffsetWidth) {\n                currentOffsetHeight = newOffsetHeight;\n                currentOffsetWidth = newOffsetWidth;\n                currentClientHeight = element.clientHeight;\n                currentClientWidth = element.clientWidth;\n                broadcast();\n            }\n        }\n    }\n\n    return {\n\n        messages: [\n            'layoutchange'\n        ],\n\n        /**\n         * Handle framework messages\n         * @returns {void}\n         */\n        onmessage: function () {\n            // force trigger resize when layout changes\n            // @NOTE: we do this because the clientWidth/Height\n            // could be different based on the layout (and whether\n            // or not the new layout changes scrollbars)\n            currentOffsetHeight = null;\n            checkResize();\n        },\n\n        /**\n         * Initialize the Resizer component with an element to watch\n         * @param  {HTMLElement} el The element to watch\n         * @returns {void}\n         */\n        init: function (el) {\n            element = $(el).get(0);\n\n            // use the documentElement for viewport dimensions\n            // if we are using the window as the viewport\n            if (element === window) {\n                element = document.documentElement;\n                $window.on('resize', checkResize);\n            } else {\n                initResizer();\n            }\n\n           $document.on(FULLSCREENCHANGE_EVENT, checkResize);\n\n            checkResize();\n        },\n\n        /**\n         * Destroy the Resizer component\n         * @returns {void}\n         */\n        destroy: function () {\n            $document.off(FULLSCREENCHANGE_EVENT, checkResize);\n            $window.off('resize', checkResize);\n        }\n    };\n});\n\n/*global setTimeout, clearTimeout */\n\nCrocodoc.addComponent('scroller', function (scope) {\n\n    'use strict';\n\n    var util = scope.getUtility('common'),\n        browser = scope.getUtility('browser');\n\n    var GHOST_SCROLL_TIMEOUT = 3000,\n        GHOST_SCROLL_INTERVAL = 30,\n        SCROLL_EVENT_THROTTLE_INTERVAL = 200,\n        SCROLL_END_TIMEOUT = browser.mobile ? 500 : 250;\n\n    var $el,\n        scrollendTID,\n        scrollingStarted = false,\n        touchStarted = false,\n        touchEnded = false,\n        touchMoved = false,\n        touchEndTime = 0,\n        ghostScrollStart = null;\n\n    /**\n     * Build event data object for firing scroll events\n     * @returns {Object} Scroll event data object\n     * @private\n     */\n    function buildEventData() {\n        return {\n            scrollTop: $el.scrollTop(),\n            scrollLeft: $el.scrollLeft()\n        };\n    }\n\n    /**\n     * Broadcast a scroll event\n     * @returns {void}\n     * @private\n     */\n    var fireScroll = util.throttle(SCROLL_EVENT_THROTTLE_INTERVAL, function () {\n        scope.broadcast('scroll', buildEventData());\n    });\n\n    /**\n     * Handle scrollend\n     * @returns {void}\n     * @private\n     */\n    function handleScrollEnd() {\n        scrollingStarted = false;\n        ghostScrollStart = null;\n        clearTimeout(scrollendTID);\n        scope.broadcast('scrollend', buildEventData());\n    }\n\n    /**\n     * Handle scroll events\n     * @returns {void}\n     * @private\n     */\n    function handleScroll() {\n        // if we are just starting scrolling, fire scrollstart event\n        if (!scrollingStarted) {\n            scrollingStarted = true;\n            scope.broadcast('scrollstart', buildEventData());\n        }\n        clearTimeout(scrollendTID);\n        scrollendTID = setTimeout(handleScrollEnd, SCROLL_END_TIMEOUT);\n        fireScroll();\n    }\n\n    /**\n     * Handle touch start events\n     * @returns {void}\n     * @private\n     */\n    function handleTouchstart() {\n        touchStarted = true;\n        touchEnded = false;\n        touchMoved = false;\n        handleScroll();\n    }\n\n    /**\n     * Handle touchmove events\n     * @returns {void}\n     * @private\n     */\n    function handleTouchmove() {\n        touchMoved = true;\n        handleScroll();\n    }\n\n    /**\n     * Handle touchend events\n     * @returns {void}\n     * @private\n     */\n    function handleTouchend() {\n        touchStarted = false;\n        touchEnded = true;\n        touchEndTime = new Date().getTime();\n        if (touchMoved) {\n            ghostScroll();\n        }\n    }\n\n    /**\n     * Fire fake scroll events.\n     * iOS doesn't fire events during the 'momentum' part of scrolling\n     * so this is used to fake these events until the page stops moving.\n     * @returns {void}\n     * @private\n     */\n    function ghostScroll() {\n        clearTimeout(scrollendTID);\n        if (ghostScrollStart === null) {\n            ghostScrollStart = new Date().getTime();\n        }\n        if (new Date().getTime() - ghostScrollStart > GHOST_SCROLL_TIMEOUT) {\n            handleScrollEnd();\n            return;\n        }\n        fireScroll();\n        scrollendTID = setTimeout(ghostScroll, GHOST_SCROLL_INTERVAL);\n    }\n\n    return {\n        /**\n         * Initialize the scroller component\n         * @param   {Element} el The Element\n         * @returns {void}\n         */\n        init: function (el) {\n            $el = $(el);\n            $el.on('scroll', handleScroll);\n            $el.on('touchstart', handleTouchstart);\n            $el.on('touchmove', handleTouchmove);\n            $el.on('touchend', handleTouchend);\n        },\n\n        /**\n         * Destroy the scroller component\n         * @returns {void}\n         */\n        destroy: function () {\n            clearTimeout(scrollendTID);\n            $el.off('scroll', handleScroll);\n            $el.off('touchstart', handleTouchstart);\n            $el.off('touchmove', handleTouchmove);\n            $el.off('touchend', handleTouchend);\n        }\n    };\n});\n\nCrocodoc.addComponent('viewer-base', function (scope) {\n\n    'use strict';\n\n    //--------------------------------------------------------------------------\n    // Private\n    //--------------------------------------------------------------------------\n\n    var util = scope.getUtility('common'),\n        browser = scope.getUtility('browser'),\n        support = scope.getUtility('support');\n\n    var api, // the viewer API object\n        config,\n        $el,\n        stylesheetEl,\n        layout,\n        scroller,\n        resizer,\n        dragger,\n        $assetsPromise;\n\n    /**\n     * Add CSS classes to the element for necessary feature/support flags\n     * @returns {void}\n     * @private\n     */\n    function setCSSFlags() {\n        // add SVG version number flag\n        $el.attr(ATTR_SVG_VERSION, config.metadata.version || '0.0.0');\n\n        //add CSS flags\n        if (browser.mobile) {\n            $el.addClass(CSS_CLASS_MOBILE);      //Mobile?\n        }\n        if (browser.ielt9) {\n            $el.addClass(CSS_CLASS_IELT9);       //IE7 or IE8?\n        }\n        if (support.svg) {\n            $el.addClass(CSS_CLASS_SUPPORTS_SVG);\n        }\n    }\n\n    /**\n     * Create and insert basic viewer DOM structure\n     * @returns {void}\n     * @private\n     */\n    function initViewerHTML() {\n        // create viewer HTML\n        $el.html(Crocodoc.viewerTemplate);\n        if (config.useWindowAsViewport) {\n            config.$viewport = $(window);\n            $el.addClass(CSS_CLASS_WINDOW_AS_VIEWPORT);\n        } else {\n            config.$viewport = $el.find('.' + CSS_CLASS_VIEWPORT);\n        }\n        config.$doc = $el.find('.' + CSS_CLASS_DOC);\n    }\n\n    /**\n     * Initialize all plugins specified for this viewer instance\n     * @returns {void}\n     * @private\n     */\n    function initPlugins() {\n        var name,\n            plugin,\n            plugins = config.plugins || {};\n        for (name in plugins) {\n            plugin = scope.createComponent('plugin-' + name);\n            if (plugin && util.isFn(plugin.init)) {\n                plugin.init(config.plugins[name]);\n            }\n        }\n    }\n\n    /**\n     * Complete intialization after document metadata has been loaded;\n     * ie., bind events, init lazyloader and layout, broadcast ready message\n     * @returns {void}\n     * @private\n     */\n    function completeInit() {\n        setCSSFlags();\n\n        // initialize scroller and resizer components\n        scroller = scope.createComponent('scroller');\n        scroller.init(config.$viewport);\n        resizer = scope.createComponent('resizer');\n        resizer.init(config.$viewport);\n\n        var controller;\n        switch (config.metadata.type) {\n            case 'text':\n                // load text-based viewer\n                controller = scope.createComponent('controller-text');\n                // force the text layout only\n                // @TODO: allow overriding the layout eventually\n                config.layout = LAYOUT_TEXT;\n                break;\n\n            case 'paged':\n                /* falls through */\n            default:\n                controller = scope.createComponent('controller-paged');\n                break;\n        }\n        controller.init();\n\n        // disable text selection if necessary\n        if (config.metadata.type === 'text') {\n            if (!config.enableTextSelection) {\n                api.disableTextSelection();\n            }\n        } else if (browser.ielt9) {\n            api.disableTextSelection();\n        }\n\n        // disable links if necessary\n        // @NOTE: links are disabled in IE < 9\n        if (!config.enableLinks || browser.ielt9) {\n            api.disableLinks();\n        }\n\n        // set the initial layout\n        api.setLayout(config.layout);\n\n        // broadcast ready message\n        scope.broadcast('ready', {\n            page: config.page || 1,\n            numPages: config.numPages\n        });\n\n        scope.ready();\n    }\n\n    /**\n     * Handler for linkclick messages\n     * @returns {void}\n     * @private\n     */\n    function handleLinkClick(data) {\n        var event = api.fire('linkclick', data);\n        if (!event.isDefaultPrevented()) {\n            if (data.uri) {\n                window.open(data.uri);\n            } else if (data.destination) {\n                api.scrollTo(data.destination.pagenum);\n            }\n        }\n    }\n\n    /**\n     * Enable or disable the dragger given the `isDraggable` flag\n     * @param   {Boolean} isDraggable Whether or not the layout is draggable\n     * @returns {void}\n     * @private\n     */\n    function updateDragger(isDraggable) {\n        if (isDraggable) {\n            if (!dragger) {\n                $el.addClass(CSS_CLASS_DRAGGABLE);\n                dragger = scope.createComponent('dragger');\n                dragger.init(config.$viewport);\n            }\n        } else {\n            if (dragger) {\n                $el.removeClass(CSS_CLASS_DRAGGABLE);\n                scope.destroyComponent(dragger);\n                dragger = null;\n            }\n        }\n    }\n\n    /**\n     * Validates and normalizes queryParams config option\n     * @returns {void}\n     */\n    function validateQueryParams() {\n        var queryString;\n        if (config.queryParams) {\n            if (typeof config.queryParams === 'string') {\n                // strip '?' if it's there, because we add it below\n                queryString = config.queryParams.replace(/^\\?/, '');\n            } else {\n                queryString = util.param(config.queryParams);\n            }\n        }\n        config.queryString = queryString ? '?' + queryString : '';\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n\n        messages: [\n            'asseterror',\n            'destroy',\n            'dragend',\n            'dragstart',\n            'fail',\n            'layoutchange',\n            'linkclick',\n            'pagefail',\n            'pagefocus',\n            'pageload',\n            'pageunload',\n            'ready',\n            'resize',\n            'scrollstart',\n            'scrollend',\n            'zoom'\n        ],\n\n        /**\n         * Handle framework messages\n         * @param {string} name The name of the message\n         * @param {any} data The related data for the message\n         * @returns {void}\n         */\n        onmessage: function (name, data) {\n            switch (name) {\n                case 'layoutchange':\n                    api.updateLayout();\n                    break;\n\n                case 'linkclick':\n                    handleLinkClick(data);\n                    break;\n\n                case 'zoom':\n                    // artificially adjust the reported zoom to be accuate given the page scale\n                    data.zoom *= config.pageScale;\n                    data.prevZoom *= config.pageScale;\n                    if (config.enableDragging) {\n                        updateDragger(data.isDraggable);\n                    }\n\n                    // forward zoom event to external event handlers\n                    api.fire(name, data);\n                    break;\n\n                case 'dragstart':\n                    if (!$el.hasClass(CSS_CLASS_DRAGGING)) {\n                        $el.addClass(CSS_CLASS_DRAGGING);\n                    }\n                    // forward zoom event to external event handlers\n                    api.fire(name, data);\n                    break;\n\n                case 'dragend':\n                    if ($el.hasClass(CSS_CLASS_DRAGGING)) {\n                        $el.removeClass(CSS_CLASS_DRAGGING);\n                    }\n                    // forward zoom event to external event handlers\n                    api.fire(name, data);\n                    break;\n\n                default:\n                    // forward subscribed framework messages to external event handlers\n                    api.fire(name, data);\n                    break;\n            }\n        },\n\n        /**\n         * Initialize the viewer api\n         * @returns {void}\n         */\n        init: function () {\n            config = scope.getConfig();\n            api = config.api;\n\n            // create a unique CSS namespace for this viewer instance\n            config.namespace = CSS_CLASS_VIEWER + '-' + config.id;\n\n            // Setup container\n            $el = config.$el;\n\n            // add crocodoc viewer and namespace classes\n            $el.addClass(CSS_CLASS_VIEWER);\n            $el.addClass(config.namespace);\n\n            // add a / to the end of the base url if necessary\n            if (config.url) {\n                if (!/\\/$/.test(config.url)) {\n                    config.url += '/';\n                }\n            } else {\n                throw new Error('no URL given for viewer assets');\n            }\n\n            // make the url absolute\n            config.url = scope.getUtility('url').makeAbsolute(config.url);\n\n            validateQueryParams();\n            initViewerHTML();\n            initPlugins();\n        },\n\n        /**\n         * Destroy the viewer-base component\n         * @returns {void}\n         */\n        destroy: function () {\n            // empty container and remove all class names that contain \"crocodoc\"\n            $el.empty().removeClass(function (i, cls) {\n                var match = cls.match(new RegExp('crocodoc\\\\S+', 'g'));\n                return match && match.join(' ');\n            });\n\n            // remove the stylesheet\n            $(stylesheetEl).remove();\n\n            if ($assetsPromise) {\n                $assetsPromise.abort();\n            }\n        },\n\n        /**\n         * Set the layout to the given mode, destroying and cleaning up the current\n         * layout if there is one\n         * @param  {string} layoutMode The layout mode\n         * @returns {Layout} The layout object\n         */\n        setLayout: function (layoutMode) {\n            // create a layout component with the new layout config\n            var lastPage = config.page,\n                lastZoom = config.zoom || 1,\n                previousLayoutMode = config.layout,\n                newLayout;\n\n            // if there is already a layout, save some state\n            if (layout) {\n                // ignore this if we already have the specified layout\n                if (layoutMode === previousLayoutMode) {\n                    return layout;\n                }\n\n                lastPage = layout.state.currentPage;\n                lastZoom = layout.state.zoomState;\n            }\n\n            newLayout = scope.createComponent('layout-' + layoutMode);\n            if (!newLayout) {\n                throw new Error('Invalid layout ' +  layoutMode);\n            }\n\n            // remove and destroy the existing layout component\n            // @NOTE: this must be done after we decide if the\n            // new layout exists!\n            if (layout) {\n                scope.destroyComponent(layout);\n            }\n\n            config.layout = layoutMode;\n\n            layout = newLayout;\n            layout.init();\n            layout.setZoom(lastZoom.zoomMode || lastZoom.zoom || lastZoom);\n            if (util.isFn(layout.scrollTo)) {\n                layout.scrollTo(lastPage);\n            }\n            config.currentLayout = layout;\n\n            scope.broadcast('layoutchange', {\n                // in the context of event data, `layout` and `previousLayout`\n                // are actually the name of those layouts, and not the layout\n                // objects themselves\n                previousLayout: previousLayoutMode,\n                layout: layoutMode\n            });\n            return layout;\n        },\n\n        /**\n         * Load the metadata and css for this document\n         * @returns {void}\n         */\n        loadAssets: function () {\n            var $loadStylesheetPromise,\n                $loadMetadataPromise,\n                $pageOneContentPromise,\n                $pageOneTextPromise;\n\n            if ($assetsPromise) {\n                return;\n            }\n\n            $loadMetadataPromise = scope.get('metadata');\n            $loadMetadataPromise.then(function handleMetadataResponse(metadata) {\n                config.metadata = metadata;\n            });\n\n            // don't load the stylesheet for IE < 9\n            if (browser.ielt9) {\n                stylesheetEl = util.insertCSS('');\n                config.stylesheet = stylesheetEl.styleSheet;\n                $loadStylesheetPromise = $.when('').promise({\n                    abort: function () {}\n                });\n            } else {\n                $loadStylesheetPromise = scope.get('stylesheet');\n                $loadStylesheetPromise.then(function handleStylesheetResponse(cssText) {\n                    stylesheetEl = util.insertCSS(cssText);\n                    config.stylesheet = stylesheetEl.sheet;\n                });\n            }\n\n\n            // load page 1 assets immediately if necessary\n            if (config.autoloadFirstPage &&\n                (!config.pageStart || config.pageStart === 1)) {\n                if (support.svg) {\n                    $pageOneContentPromise = scope.get('page-svg', 1);\n                } else if (config.conversionIsComplete) {\n                    // unfortunately, page-1.png is not necessarily available\n                    // on View API's document.viewable event, so we can only\n                    // prefetch page-1.png if conversion is complete\n                    $pageOneContentPromise = scope.get('page-img', 1);\n                }\n                if (config.enableTextSelection) {\n                    $pageOneTextPromise = scope.get('page-text', 1);\n                }\n            }\n\n            // when both metatadata and stylesheet are done or if either fails...\n            $assetsPromise = $.when($loadMetadataPromise, $loadStylesheetPromise)\n                .fail(function (error) {\n                    if ($assetsPromise) {\n                        $assetsPromise.abort();\n                    }\n                    scope.ready();\n                    scope.broadcast('asseterror', error);\n                    scope.broadcast('fail', error);\n                })\n                .then(completeInit)\n                .promise({\n                    abort: function () {\n                        $assetsPromise = null;\n                        $loadMetadataPromise.abort();\n                        $loadStylesheetPromise.abort();\n                        if ($pageOneContentPromise) {\n                            $pageOneContentPromise.abort();\n                        }\n                        if ($pageOneTextPromise) {\n                            $pageOneTextPromise.abort();\n                        }\n                    }\n                });\n        }\n    };\n});\n\n\n        return Crocodoc;\n    }));\n})(typeof window !== 'undefined' ? window : this);\n"],"names":["window","fn","Crocodoc","$","CSS_CLASS_PREFIX","CSS_CLASS_VIEWER","CSS_CLASS_DOC","CSS_CLASS_VIEWPORT","CSS_CLASS_DRAGGABLE","CSS_CLASS_DRAGGING","CSS_CLASS_TEXT_SELECTED","CSS_CLASS_TEXT_DISABLED","CSS_CLASS_LINKS_DISABLED","CSS_CLASS_CURRENT_PAGE","CSS_CLASS_PRECEDING_PAGE","CSS_CLASS_PAGE","CSS_CLASS_PAGE_SVG","CSS_CLASS_PAGE_TEXT","CSS_CLASS_PAGE_LINK","CSS_CLASS_PAGE_LINKS","CSS_CLASS_PAGE_LOADING","CSS_CLASS_PAGE_ERROR","CSS_CLASS_PAGE_VISIBLE","CSS_CLASS_PAGE_AUTOSCALE","CSS_CLASS_PAGE_PREV","CSS_CLASS_PAGE_NEXT","CSS_CLASS_PAGE_BEFORE","CSS_CLASS_PAGE_AFTER","CSS_CLASS_PAGE_BEFORE_BUFFER","CSS_CLASS_PAGE_AFTER_BUFFER","PRESENTATION_CSS_CLASSES","join","ZOOM_FIT_WIDTH","ZOOM_FIT_HEIGHT","ZOOM_AUTO","LAYOUT_VERTICAL","LAYOUT_VERTICAL_SINGLE_COLUMN","LAYOUT_HORIZONTAL","LAYOUT_PRESENTATION","LAYOUT_PRESENTATION_TWO_PAGE","LAYOUT_TEXT","PAGE_STATUS_CONVERTING","PAGE_STATUS_NOT_LOADED","PAGE_STATUS_LOADED","SVG_MIME_TYPE","HTML_TEMPLATE","SVG_CONTAINER_TEMPLATE","loadSVG","svgText","svgDoc","DOMParser","parseFromString","svgEl","document","importNode","documentElement","setAttribute","body","appendChild","Error","components","utilities","viewerInstanceCount","instances","ZOOM_IN","ZOOM_OUT","SCROLL_PREVIOUS","SCROLL_NEXT","ASSET_REQUEST_RETRIES","viewerTemplate","pageTemplate","createViewer","el","config","Viewer","getViewer","id","get","addComponent","name","mixins","creator","Function","findCircularDependencies","componentName","dependencies","path","i","length","createComponent","scope","component","args","push","this","unshift","apply","addPlugin","addDataProvider","modelName","addUtility","instance","getUtility","utility","Scope","util","messageQueue","dataProviders","ready","broadcast","messageName","data","messages","len","inArray","isFn","onmessage","call","destroyComponent","destroy","_destroyed","splice","slice","getConfig","message","shift","objectType","objectKey","newObjectType","provider","getDataProvider","Deferred","reject","promise","EventTarget","_handlers","prototype","constructor","on","type","handler","fire","isDefaultPrevented","event","preventDefault","handlers","Array","concat","all","off","one","proxy","self","options","layout","$el","extend","defaults","viewerBase","api","load","loadAssets","setLayout","mode","zoom","val","valFloat","parseFloat","pageScale","setZoom","scrollTo","page","scrollBy","left","top","focus","enableTextSelection","toggleClass","enabled","disableTextSelection","enableLinks","removeClass","disableLinks","addClass","updateLayout","update","init","url","enableDragging","queryParams","plugins","useWindowAsViewport","conversionIsComplete","template","svg","img","html","css","json","metadata","stylesheet","page-svg","page-text","page-img","pageStart","pageEnd","autoloadFirstPage","zoomLevels","ajax","processJSONContent","parseJSON","getURL","$promise","fetch","then","abort","jsonPath","queryString","pageNum","getImage","retries","loaded","$deferred","loadImage","abortImage","removeAttribute","onload","resolve","onerror","error","resource","imgPath","Image","browser","subpx","destroyed","cache","inlineCSSRegExp","processSVGContent","text","query","dataUrlCount","replace","countInStr","match","group","cssText","stylesheetHTML","firefox","isSubpxSupported","svgPath","processTextContent","textPath","$cachedPromise","processStylesheetContent","ie","cssPath","framework","support","urlUtil","createRequestWrapper","req","status","statusText","responseText","e","rawRequest","doXHR","method","headers","success","fail","getXHR","open","onreadystatechange","readyState","parse","protocol","setRequestHeader","send","request","param","opt","ajaxSuccess","ajaxFail","appendQueryParams","isXHRSupported","isCrossDomain","isCORSSupported","doXDR","getXDR","ontimeout","onprogress","aborted","retryOrFail","version","ua","navigator","userAgent","ios","test","android","blackberry","webos","kindle","exec","ielt9","ielt10","ielt11","mobile","chrome","safari","each","map","stringifyJSON","JSON","stringify","bisectLeft","list","x","prop","mid","low","high","Math","floor","bisectRight","clamp","a","b","sign","value","number","parseInt","array","indexOf","constrainRange","max","min","now","Date","getTime","throttle","wait","context","timeout","result","previous","later","remaining","arguments","clearTimeout","setTimeout","debounce","timestamp","last","insertCSS","styleEl","createElement","cssTextNode","createTextNode","err","getElementsByTagName","appendCSSRule","sheet","selector","rule","insertRule","cssRules","index","addRule","rules","deleteCSSRule","deleteRule","removeRule","getSelectedNode","node","sel","getSelection","rangeCount","range","getRangeAt","collapsed","anchorNode","parentNode","selection","createRange","parentElement","getComputedStyle","currentStyle","calculatePtSize","px","div","style","display","position","width","removeChild","str","token","total","p","hasOwnProperty","RegExp","TEST_SPAN_TEMPLATE","subpixelRenderingIsSupported","leadingWhitespace","span","size","appendTo","fontsize1","width1","fontsize2","remove","width2","fix","$wrap","undefined","wrap","prefixes","xhrSupported","xhrCORSSupported","getVendorCSSPropertyName","prop_","vendorProp","testDiv","charAt","toUpperCase","substr","letter","toLowerCase","implementation","hasFeature","csstransform","csstransition","csszoom","isXDRSupported","XDomainRequest","XMLHttpRequest","ActiveXObject","ex","parsedLocation","getCurrentURL","location","href","makeAbsolute","parsedURL","hostname","port","parsed","pathname","host","hash","search","createPages","pageIndex","pages","start","end","links","link","destination","sorted","numpages","pagenum","$pages","eq","handleMouseUp","$page","closest","find","has","numPages","zoomLevel","maxZoom","ptWidth","pxWidth","pxHeight","pt2px","dimensions","skeleton","exceptions","ptHeight","height","w","h","$doc","$textContainer","$viewport","parent","downScrollPosition","downMousePosition","$window","handleMousemove","scrollTop","clientY","y","scrollLeft","clientX","handleMouseup","handleMousedown","handleResize","handleScroll","handleScrollEnd","layoutClass","initState","viewportEl","dimensionsEl","state","viewportDimensions","clientWidth","clientHeight","offsetWidth","offsetHeight","zoomState","prevZoom","zoomMode","initialWidth","initialHeight","totalWidth","totalHeight","removeAttr","calculateNextZoomLevel","direction","currentZoom","isDraggable","scrollToOffset","paged","calculateZoomAutoValue","fitWidth","calculateZoomValue","fitHeight","widestPage","actualWidth","tallestPage","actualHeight","calculateCurrentPage","prev","calculateNextPage","currentPage","calculatePreviousPage","updateCurrentPage","zoomedWidth","sumWidths","zoomedHeight","totalActualHeight","docWidth","docHeight","lineHeight","base","updatePageStates","updateZoomLevels","sumHeights","rows","visiblePages","fullyVisiblePages","parseZoomValue","calculateZoomMode","minZoom","applyZoom","canZoomIn","canZoomOut","shouldNotCenter","updateScrollPosition","updateVisiblePages","zoomVal","nextZoom","parsedZoom","lastZoomLevel","similarity","auto","presets","sort","totalActualWidth","applyZoomResize","pageState","namespace","scale","percent","cssRule","previousStyleIndex","paddingTop","paddingRight","paddingBottom","paddingLeft","scrollToPage","offset","calculateScrollPositionForPage","y0","x0","calculateVisibleRange","lowY","viewportHeight","viewportWidth","viewportY1","viewportY0","viewportX1","viewportX0","highY","lowX","highX","calculateFullyVisibleRange","setCurrentPage","updateClasses","visibleRange","fullyVisibleRange","hasClass","forceUpdatePaddings","pageEl","$pageEl","rowIndex","lastY1","rightmostPageIndex","bottommostPageIndex","STYLE_PADDING_PREFIX","getAttribute","offsetLeft","offsetTop","x1","y1","row","y1s","Infinity","ratio","newScrollLeft","newScrollTop","presentation","twoPageMode","baseVal","updatePageMargins","updatePageClasses","margin","$currentPage","$precedingPage","secondPage","secondPageWidth","currentPageWidth","paddingH","marginLeft","marginTop","next","z","vertical","prevPageIndex","nextRow","prevRow","pagefocusTriggerLoadingTID","readyTriggerLoadingTID","pageLoadTID","pageLoadQueue","pageLoadRange","pageLoadingStopped","scrollDirection","layoutState","calculateRange","currentIndex","pageLoadLoop","loadPage","pageIsLoading","stopPageLoadLoop","pushPageLoadQueue","indexInRange","rangeLength","pageIsVisible","queuePagesToLoadInOrder","increment","queuePageToLoad","handleBeforeZoom","handlePageAvailable","handlePageFocus","handleReady","handleZoom","pageComponents","cancelAllLoading","updateLayoutState","loadNecessaryPages","loadVisiblePages","loadPagesInRange","preload","callback","when","always","unloadPage","unload","unloadUnnecessaryPages","l","upto","$img","$loadImgPromise","imageLoaded","removeOnUnload","empty","prepare","done","handleClick","targetEl","target","createLinks","$link","bbox","attr","uri","encodeURI","$svg","$svgLayer","$loadSVGPromise","unloaded","svgLoaded","viewerConfig","embedStrategy","prepareSVGContainer","btoa","loadSVGSuccess","contentDocument","contentWindow","defaultView","innerHTML","useEls","querySelectorAll","forEach","use","image","querySelector","cloneNode","replaceChild","head","script","proxySVG","insertBefore","firstChild","append","src","dataURLPrefix","encodeURIComponent","loadSVGFail","$textLayer","$loadTextPromise","loadTextLayerHTMLSuccess","doc","createHTMLDocument","textEl","loadTextLayerHTMLFail","loadTextLayerHTML","enable","disable","pageText","pageContent","isVisible","loadRequested","$text","$links","pageComponent","element","currentClientWidth","currentClientHeight","currentOffsetWidth","currentOffsetHeight","FULLSCREENCHANGE_EVENT","$document","frameWidth","inIframe","checkResize","newOffsetHeight","newOffsetWidth","innerWidth","$div","$iframe","add","opacity","visiblility","border","prependTo","scrollendTID","GHOST_SCROLL_TIMEOUT","GHOST_SCROLL_INTERVAL","SCROLL_END_TIMEOUT","scrollingStarted","touchMoved","ghostScrollStart","buildEventData","fireScroll","handleTouchstart","handleTouchmove","handleTouchend","touchStarted","ghostScroll","stylesheetEl","dragger","$assetsPromise","completeInit","controller","plugin","cls","layoutMode","newLayout","lastPage","lastZoom","previousLayoutMode","currentLayout","previousLayout","$loadStylesheetPromise","$loadMetadataPromise","$pageOneContentPromise","$pageOneTextPromise","styleSheet","exports","jQuery","module"],"mappings":"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"}