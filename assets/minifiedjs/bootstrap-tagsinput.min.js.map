{"version":3,"sources":["bootstrap-tagsinput.js"],"names":["$","TagsInput","element","options","this","itemsArray","$element","hide","isSelect","tagName","multiple","hasAttribute","objectItems","itemValue","placeholderText","attr","inputSize","Math","max","length","$container","$input","appendTo","after","inputWidth","get","style","cssText","build","makeOptionItemFunction","key","propertyName","item","makeOptionFunction","value","htmlEncode","htmlEncodeContainer","text","html","doGetCaretPosition","oField","iCaretPos","document","selection","focus","oSel","createRange","moveStart","selectionStart","keyCombinationInList","keyPressEvent","lookupList","found","each","index","keyCombination","which","alt","hasOwnProperty","altKey","shift","shiftKey","ctrl","ctrlKey","defaultOptions","tagClass","toString","itemText","freeInput","addOnBlur","maxTags","undefined","maxChars","confirmKeys","onTagExists","$tag","fadeIn","trimValue","allowDuplicates","prototype","constructor","add","dontPushVal","self","trim","match","remove","items","split","i","pushVal","existing","grep","maxInputLength","beforeItemAddEvent","Event","cancel","trigger","push","data","findInputWrapper","before","encodeURIComponent","$option","append","addClass","$existingTag","filter","other","beforeItemRemoveEvent","inArray","splice","removeClass","removeAll","pop","refresh","contents","nodeType","nodeValue","option","val","map","extend","typeahead","source","query","process","processItems","texts","isFunction","success","then","when","updater","matcher","toLowerCase","indexOf","sorter","sort","highlighter","regex","RegExp","replace","typeaheadjs","on","proxy","obj","datum","valueKey","event","removeAttr","target","$inputWrapper","prev","next","$prevTag","$nextTag","textLength","ceil","maxLengthReached","substr","preventDefault","closest","destroy","off","removeData","show","input","elt","container","parentNode","fn","tagsinput","arg1","arg2","results","retVal","Constructor","window","jQuery"],"mappings":"CAAA,SAAWA,GACT,YA2BA,SAASC,GAAUC,EAASC,GAC1BC,KAAKC,cAELD,KAAKE,SAAWN,EAAEE,GAClBE,KAAKE,SAASC,OAEdH,KAAKI,SAAgC,WAApBN,EAAQO,QACzBL,KAAKM,SAAYN,KAAKI,UAAYN,EAAQS,aAAa,YACvDP,KAAKQ,YAAcT,GAAWA,EAAQU,UACtCT,KAAKU,gBAAkBZ,EAAQS,aAAa,eAAiBP,KAAKE,SAASS,KAAK,eAAiB,GACjGX,KAAKY,UAAYC,KAAKC,IAAI,EAAGd,KAAKU,gBAAgBK,QAElDf,KAAKgB,WAAapB,EAAE,2CACpBI,KAAKiB,OAASrB,EAAE,mCAAqCI,KAAKU,gBAAkB,OAAOQ,SAASlB,KAAKgB,YAEjGhB,KAAKE,SAASiB,MAAMnB,KAAKgB,WAEzB,IAAII,IAAcpB,KAAKY,UAAY,EAAI,EAAIZ,KAAKY,WAAa,IAC7DZ,MAAKiB,OAAOI,IAAI,GAAGC,MAAMC,QAAU,UAAYH,EAAa,eAC5DpB,KAAKwB,MAAMzB,GA4eb,QAAS0B,GAAuB1B,EAAS2B,GACvC,GAA4B,kBAAjB3B,GAAQ2B,GAAqB,CACtC,GAAIC,GAAe5B,EAAQ2B,EAC3B3B,GAAQ2B,GAAO,SAASE,GAAQ,MAAOA,GAAKD,KAGhD,QAASE,GAAmB9B,EAAS2B,GACnC,GAA4B,kBAAjB3B,GAAQ2B,GAAqB,CACtC,GAAII,GAAQ/B,EAAQ2B,EACpB3B,GAAQ2B,GAAO,WAAa,MAAOI,KAOvC,QAASC,GAAWD,GAClB,MAAIA,GACKE,EAAoBC,KAAKH,GAAOI,OAEhC,GAQX,QAASC,GAAmBC,GAC1B,GAAIC,GAAY,CAChB,IAAIC,SAASC,UAAW,CACtBH,EAAOI,OACP,IAAIC,GAAOH,SAASC,UAAUG,aAC9BD,GAAKE,UAAW,aAAcP,EAAON,MAAMf,QAC3CsB,EAAYI,EAAKR,KAAKlB,YACbqB,EAAOQ,gBAA2C,KAAzBR,EAAOQ,kBACzCP,EAAYD,EAAOQ,eAErB,OAAO,GAUT,QAASC,GAAqBC,EAAeC,GACzC,GAAIC,IAAQ,CAkBZ,OAjBApD,GAAEqD,KAAKF,EAAY,SAAUG,EAAOC,GAChC,GAAgC,gBAArB,IAAiCL,EAAcM,QAAUD,EAEhE,MADAH,IAAQ,GACD,CAGX,IAAIF,EAAcM,QAAUD,EAAeC,MAAO,CAC9C,GAAIC,IAAOF,EAAeG,eAAe,WAAaR,EAAcS,SAAWJ,EAAeI,OAC1FC,GAASL,EAAeG,eAAe,aAAeR,EAAcW,WAAaN,EAAeM,SAChGC,GAAQP,EAAeG,eAAe,YAAcR,EAAca,UAAYR,EAAeQ,OACjG,IAAIN,GAAOG,GAASE,EAEhB,MADAV,IAAQ,GACD,KAKZA,EA3lBX,GAAIY,IACFC,SAAU,SAASjC,GACjB,MAAO,oBAETnB,UAAW,SAASmB,GAClB,MAAOA,GAAOA,EAAKkC,WAAalC,GAElCmC,SAAU,SAASnC,GACjB,MAAO5B,MAAKS,UAAUmB,IAExBoC,WAAW,EACXC,WAAW,EACXC,QAASC,OACTC,SAAUD,OACVE,aAAc,GAAI,IAClBC,YAAa,SAAS1C,EAAM2C,GAC1BA,EAAKpE,OAAOqE,UAEdC,WAAW,EACXC,iBAAiB,EA4BnB7E,GAAU8E,WACRC,YAAa/E,EAMbgF,IAAK,SAASjD,EAAMkD,GAClB,GAAIC,GAAO/E,IAEX,MAAI+E,EAAKhF,QAAQmE,SAAWa,EAAK9E,WAAWc,QAAUgE,EAAKhF,QAAQmE,WAI/DtC,KAAS,GAAUA,GAAvB,CASA,GALoB,gBAATA,IAAqBmD,EAAKhF,QAAQ0E,YAC3C7C,EAAOhC,EAAEoF,KAAKpD,IAII,gBAATA,KAAsBmD,EAAKvE,YACpC,KAAK,oDAGP,KAAIoB,EAAKkC,WAAWmB,MAAM,SAA1B,CAOA,GAHIF,EAAK3E,WAAa2E,EAAKzE,UAAYyE,EAAK9E,WAAWc,OAAS,GAC9DgE,EAAKG,OAAOH,EAAK9E,WAAW,IAEV,gBAAT2B,IAAkD,UAA7B5B,KAAKE,SAAS,GAAGG,QAAqB,CACpE,GAAI8E,GAAQvD,EAAKwD,MAAM,IACvB,IAAID,EAAMpE,OAAS,EAAG,CACpB,IAAK,GAAIsE,GAAI,EAAGA,EAAIF,EAAMpE,OAAQsE,IAChCrF,KAAK6E,IAAIM,EAAME,IAAI,EAKrB,aAFKP,GACHC,EAAKO,YAKX,GAAI7E,GAAYsE,EAAKhF,QAAQU,UAAUmB,GACnCmC,EAAWgB,EAAKhF,QAAQgE,SAASnC,GACjCiC,EAAWkB,EAAKhF,QAAQ8D,SAASjC,GAGjC2D,EAAW3F,EAAE4F,KAAKT,EAAK9E,WAAY,SAAS2B,GAAQ,MAAOmD,GAAKhF,QAAQU,UAAUmB,KAAUnB,IAAe,EAC/G,KAAI8E,GAAaR,EAAKhF,QAAQ2E,iBAU9B,KAAIK,EAAKI,QAAQrB,WAAW/C,OAASa,EAAKb,OAAS,EAAIgE,EAAKhF,QAAQ0F,gBAApE,CAIA,GAAIC,GAAqB9F,EAAE+F,MAAM,iBAAmB/D,KAAMA,EAAMgE,QAAQ,GAExE,IADAb,EAAK7E,SAAS2F,QAAQH,IAClBA,EAAmBE,OAAvB,CAIAb,EAAK9E,WAAW6F,KAAKlE,EAGrB,IAAI2C,GAAO3E,EAAE,oBAAsBmC,EAAW8B,GAAY,KAAO9B,EAAWgC,GAAY,0CAMxF,IALAQ,EAAKwB,KAAK,OAAQnE,GAClBmD,EAAKiB,mBAAmBC,OAAO1B,GAC/BA,EAAKpD,MAAM,KAGP4D,EAAK3E,WAAaR,EAAE,iBAAmBsG,mBAAmBzF,GAAa,KAAKsE,EAAK7E,UAAU,GAAI,CACjG,GAAIiG,GAAUvG,EAAE,oBAAsBmC,EAAWgC,GAAY,YAC7DoC,GAAQJ,KAAK,OAAQnE,GACrBuE,EAAQxF,KAAK,QAASF,GACtBsE,EAAK7E,SAASkG,OAAOD,GAGlBrB,GACHC,EAAKO,WAGHP,EAAKhF,QAAQmE,UAAYa,EAAK9E,WAAWc,QAAUgE,EAAKI,QAAQrB,WAAW/C,SAAWgE,EAAKhF,QAAQ0F,iBACrGV,EAAK/D,WAAWqF,SAAS,2BAE3BtB,EAAK7E,SAAS2F,QAAQjG,EAAE+F,MAAM,aAAe/D,KAAMA,WAzCjD,IAAImD,EAAKhF,QAAQuE,YAAa,CAC5B,GAAIgC,GAAe1G,EAAE,OAAQmF,EAAK/D,YAAYuF,OAAO,WAAa,MAAO3G,GAAEI,MAAM+F,KAAK,UAAYR,GAClGR,GAAKhF,QAAQuE,YAAY1C,EAAM0E,OA8CrCpB,OAAQ,SAAStD,EAAMkD,GACrB,GAAIC,GAAO/E,IAWX,IATI+E,EAAKvE,cAELoB,EADkB,gBAATA,GACFhC,EAAE4F,KAAKT,EAAK9E,WAAY,SAASuG,GAAS,MAAOzB,GAAKhF,QAAQU,UAAU+F,IAAWzB,EAAKhF,QAAQU,UAAUmB,KAE1GhC,EAAE4F,KAAKT,EAAK9E,WAAY,SAASuG,GAAS,MAAOzB,GAAKhF,QAAQU,UAAU+F,IAAW5E,IAE5FA,EAAOA,EAAKA,EAAKb,OAAO,IAGtBa,EAAM,CACR,GAAI6E,GAAwB7G,EAAE+F,MAAM,oBAAsB/D,KAAMA,EAAMgE,QAAQ,GAE9E,IADAb,EAAK7E,SAAS2F,QAAQY,GAClBA,EAAsBb,OACxB,MAEFhG,GAAE,OAAQmF,EAAK/D,YAAYuF,OAAO,WAAa,MAAO3G,GAAEI,MAAM+F,KAAK,UAAYnE,IAASsD,SACxFtF,EAAE,SAAUmF,EAAK7E,UAAUqG,OAAO,WAAa,MAAO3G,GAAEI,MAAM+F,KAAK,UAAYnE,IAASsD,SAChD,KAArCtF,EAAE8G,QAAQ9E,EAAMmD,EAAK9E,aACtB8E,EAAK9E,WAAW0G,OAAO/G,EAAE8G,QAAQ9E,EAAMmD,EAAK9E,YAAa,GAGxD6E,GACHC,EAAKO,UAGHP,EAAKhF,QAAQmE,QAAUa,EAAK9E,WAAWc,QACzCgE,EAAK/D,WAAW4F,YAAY,2BAE9B7B,EAAK7E,SAAS2F,QAAQjG,EAAE+F,MAAM,eAAkB/D,KAAMA,MAMxDiF,UAAW,WACT,GAAI9B,GAAO/E,IAKX,KAHAJ,EAAE,OAAQmF,EAAK/D,YAAYkE,SAC3BtF,EAAE,SAAUmF,EAAK7E,UAAUgF,SAErBH,EAAK9E,WAAWc,OAAS,GAC7BgE,EAAK9E,WAAW6G,KAElB/B,GAAKO,WAOPyB,QAAS,WACP,GAAIhC,GAAO/E,IACXJ,GAAE,OAAQmF,EAAK/D,YAAYiC,KAAK,WAC9B,GAAIsB,GAAO3E,EAAEI,MACT4B,EAAO2C,EAAKwB,KAAK,QACjBtF,EAAYsE,EAAKhF,QAAQU,UAAUmB,GACnCmC,EAAWgB,EAAKhF,QAAQgE,SAASnC,GACjCiC,EAAWkB,EAAKhF,QAAQ8D,SAASjC,EASnC,IANA2C,EAAK5D,KAAK,QAAS,MACnB4D,EAAK8B,SAAS,OAAStE,EAAW8B,IAClCU,EAAKyC,WAAWT,OAAO,WACrB,MAAwB,IAAjBvG,KAAKiH,WACX,GAAGC,UAAYnF,EAAWgC,GAEzBgB,EAAK3E,SAAU,CACjB,GAAI+G,GAASvH,EAAE,SAAUmF,EAAK7E,UAAUqG,OAAO,WAAa,MAAO3G,GAAEI,MAAM+F,KAAK,UAAYnE,GAC5FuF,GAAOxG,KAAK,QAASF,OAQ7B0E,MAAO,WACL,MAAOnF,MAAKC,YAOdqF,QAAS,WACP,GAAIP,GAAO/E,KACPoH,EAAMxH,EAAEyH,IAAItC,EAAKI,QAAS,SAASvD,GACjC,MAAOmD,GAAKhF,QAAQU,UAAUmB,GAAMkC,YAG1CiB,GAAK7E,SAASkH,IAAIA,GAAK,GAAMvB,QAAQ,WAMvCrE,MAAO,SAASzB,GACd,GAAIgF,GAAO/E,IAYX,IAVA+E,EAAKhF,QAAUH,EAAE0H,UAAW1D,EAAgB7D,GAExCgF,EAAKvE,cACPuE,EAAKhF,QAAQiE,WAAY,GAE3BvC,EAAuBsD,EAAKhF,QAAS,aACrC0B,EAAuBsD,EAAKhF,QAAS,YACrC8B,EAAmBkD,EAAKhF,QAAS,YAG7BgF,EAAKhF,QAAQwH,UAAW,CAC1B,GAAIA,GAAYxC,EAAKhF,QAAQwH,aAE7B1F,GAAmB0F,EAAW,UAE9BxC,EAAK9D,OAAOsG,UAAU3H,EAAE0H,UAAWC,GACjCC,OAAQ,SAAUC,EAAOC,GACvB,QAASC,GAAaxC,GAGpB,IAAK,GAFDyC,MAEKvC,EAAI,EAAGA,EAAIF,EAAMpE,OAAQsE,IAAK,CACrC,GAAIpD,GAAO8C,EAAKhF,QAAQgE,SAASoB,EAAME,GACvCgC,GAAIpF,GAAQkD,EAAME,GAClBuC,EAAM9B,KAAK7D,GAEbyF,EAAQE,GAGV5H,KAAKqH,MACL,IAAIA,GAAMrH,KAAKqH,IACXtB,EAAOwB,EAAUC,OAAOC,EAExB7H,GAAEiI,WAAW9B,EAAK+B,SAEpB/B,EAAK+B,QAAQH,GACJ/H,EAAEiI,WAAW9B,EAAKgC,MAE3BhC,EAAKgC,KAAKJ,GAGV/H,EAAEoI,KAAKjC,GACLgC,KAAKJ,IAGXM,QAAS,SAAUhG,GACjB8C,EAAKF,IAAI7E,KAAKqH,IAAIpF,KAEpBiG,QAAS,SAAUjG,GACjB,MAAwE,KAAhEA,EAAKkG,cAAcC,QAAQpI,KAAKyH,MAAMzC,OAAOmD,gBAEvDE,OAAQ,SAAUT,GAChB,MAAOA,GAAMU,QAEfC,YAAa,SAAUtG,GACrB,GAAIuG,GAAQ,GAAIC,QAAQ,IAAMzI,KAAKyH,MAAQ,IAAK,KAChD,OAAOxF,GAAKyG,QAASF,EAAO,2BAMlC,GAAIzD,EAAKhF,QAAQ4I,YAAa,CAC1B,GAAIA,GAAc5D,EAAKhF,QAAQ4I,eAE/B5D,GAAK9D,OAAOsG,UAAU,KAAMoB,GAAaC,GAAG,qBAAsBhJ,EAAEiJ,MAAM,SAAUC,EAAKC,GACnFJ,EAAYK,SACdjE,EAAKF,IAAIkE,EAAMJ,EAAYK,WAE3BjE,EAAKF,IAAIkE,GACXhE,EAAK9D,OAAOsG,UAAU,MAAO,KAC5BxC,IAGPA,EAAK/D,WAAW4H,GAAG,QAAShJ,EAAEiJ,MAAM,SAASI,GACrClE,EAAK7E,SAASS,KAAK,aACvBoE,EAAK9D,OAAOiI,WAAW,YAEzBnE,EAAK9D,OAAOuB,SACXuC,IAEGA,EAAKhF,QAAQkE,WAAac,EAAKhF,QAAQiE,WACzCe,EAAK9D,OAAO2H,GAAG,WAAYhJ,EAAEiJ,MAAM,SAASI,GAG4B,IAAhErJ,EAAE,iCAAkCmF,EAAK/D,YAAYD,SACvDgE,EAAKF,IAAIE,EAAK9D,OAAOmG,OACrBrC,EAAK9D,OAAOmG,IAAI,MAEnBrC,IAIPA,EAAK/D,WAAW4H,GAAG,UAAW,QAAShJ,EAAEiJ,MAAM,SAASI,GACtD,GAAIhI,GAASrB,EAAEqJ,EAAME,QACjBC,EAAgBrE,EAAKiB,kBAEzB,IAAIjB,EAAK7E,SAASS,KAAK,YAErB,WADAoE,GAAK9D,OAAON,KAAK,WAAY,WAI/B,QAAQsI,EAAM7F,OAEZ,IAAK,GACH,GAAsC,IAAlCjB,EAAmBlB,EAAO,IAAW,CACvC,GAAIoI,GAAOD,EAAcC,MACrBA,IACFtE,EAAKG,OAAOmE,EAAKtD,KAAK,SAG1B,KAGF,KAAK,IACH,GAAsC,IAAlC5D,EAAmBlB,EAAO,IAAW,CACvC,GAAIqI,GAAOF,EAAcE,MACrBA,IACFvE,EAAKG,OAAOoE,EAAKvD,KAAK,SAG1B,KAGF,KAAK,IAEH,GAAIwD,GAAWH,EAAcC,MACD,KAAxBpI,EAAOmG,MAAMrG,QAAgBwI,EAAS,KACxCA,EAAStD,OAAOmD,GAChBnI,EAAOuB,QAET,MAEF,KAAK,IAEH,GAAIgH,GAAWJ,EAAcE,MACD,KAAxBrI,EAAOmG,MAAMrG,QAAgByI,EAAS,KACxCA,EAASrI,MAAMiI,GACfnI,EAAOuB,SAQb,GAAIiH,GAAaxI,EAAOmG,MAAMrG,MACdF,MAAK6I,KAAKD,EAAa,EAEvCxI,GAAON,KAAK,OAAQE,KAAKC,IAAId,KAAKY,UAAWK,EAAOmG,MAAMrG,UACzDgE,IAEHA,EAAK/D,WAAW4H,GAAG,WAAY,QAAShJ,EAAEiJ,MAAM,SAASI,GACtD,GAAIhI,GAASrB,EAAEqJ,EAAME,OAErB,IAAIpE,EAAK7E,SAASS,KAAK,YAEpB,WADAoE,GAAK9D,OAAON,KAAK,WAAY,WAIhC,IAAIsB,GAAOhB,EAAOmG,MAClBuC,EAAmB5E,EAAKhF,QAAQqE,UAAYnC,EAAKlB,QAAUgE,EAAKhF,QAAQqE,QACpEW,GAAKhF,QAAQiE,YAAcnB,EAAqBoG,EAAOlE,EAAKhF,QAAQsE,cAAgBsF,KACrF5E,EAAKF,IAAI8E,EAAmB1H,EAAK2H,OAAO,EAAG7E,EAAKhF,QAAQqE,UAAYnC,GACpEhB,EAAOmG,IAAI,IACX6B,EAAMY,iBAIT,IAAIJ,GAAaxI,EAAOmG,MAAMrG,MACfF,MAAK6I,KAAKD,EAAa,EAEtCxI,GAAON,KAAK,OAAQE,KAAKC,IAAId,KAAKY,UAAWK,EAAOmG,MAAMrG,UAC1DgE,IAGHA,EAAK/D,WAAW4H,GAAG,QAAS,qBAAsBhJ,EAAEiJ,MAAM,SAASI,GAC7DlE,EAAK7E,SAASS,KAAK,aAGvBoE,EAAKG,OAAOtF,EAAEqJ,EAAME,QAAQW,QAAQ,QAAQ/D,KAAK,UAChDhB,IAGCA,EAAKhF,QAAQU,YAAcmD,EAAenD,YACX,UAA7BsE,EAAK7E,SAAS,GAAGG,QACjB0E,EAAKF,IAAIE,EAAK7E,SAASkH,OAEzBxH,EAAE,SAAUmF,EAAK7E,UAAU+C,KAAK,WAC9B8B,EAAKF,IAAIjF,EAAEI,MAAMW,KAAK,UAAU,OASxCoJ,QAAS,WACP,GAAIhF,GAAO/E,IAGX+E,GAAK/D,WAAWgJ,IAAI,WAAY,SAChCjF,EAAK/D,WAAWgJ,IAAI,QAAS,iBAE7BjF,EAAK/D,WAAWkE,SAChBH,EAAK7E,SAAS+J,WAAW,aACzBlF,EAAK7E,SAASgK,QAMhB1H,MAAO,WACLxC,KAAKiB,OAAOuB,SAMd2H,MAAO,WACL,MAAOnK,MAAKiB,QAOd+E,iBAAkB,WAGhB,IAFA,GAAIoE,GAAMpK,KAAKiB,OAAO,GAClBoJ,EAAYrK,KAAKgB,WAAW,GAC1BoJ,GAAOA,EAAIE,aAAeD,GAC9BD,EAAMA,EAAIE,UAEZ,OAAO1K,GAAEwK,KAObxK,EAAE2K,GAAGC,UAAY,SAASC,EAAMC,GAC9B,GAAIC,KA4BJ,OA1BA3K,MAAKiD,KAAK,WACR,GAAIuH,GAAY5K,EAAEI,MAAM+F,KAAK,YAE7B,IAAKyE,EAWE,GAAKC,GAASC,GAId,GAAuBvG,SAApBqG,EAAUC,GAAqB,CAErC,GAAIG,GAASJ,EAAUC,GAAMC,EACdvG,UAAXyG,GACAD,EAAQ7E,KAAK8E,QALjBD,GAAQ7E,KAAK0E,OAbbA,GAAY,GAAI3K,GAAUG,KAAMyK,GAChC7K,EAAEI,MAAM+F,KAAK,YAAayE,GAC1BG,EAAQ7E,KAAK0E,GAEQ,WAAjBxK,KAAKK,SACLT,EAAE,SAAUA,EAAEI,OAAOW,KAAK,WAAY,YAI1Cf,EAAEI,MAAMoH,IAAIxH,EAAEI,MAAMoH,SAaN,gBAARqD,GAEHE,EAAQ5J,OAAS,EAAI4J,EAAUA,EAAQ,GAEvCA,GAIX/K,EAAE2K,GAAGC,UAAUK,YAAchL,CAsB7B,IAAImC,GAAsBpC,EAAE,UA2D5BA,GAAE,WACAA,EAAE,qEAAqE4K,eAExEM,OAAOC","file":"bootstrap-tagsinput.min.js","sourcesContent":["(function ($) {\n  \"use strict\";\n\n  var defaultOptions = {\n    tagClass: function(item) {\n      return 'label label-info';\n    },\n    itemValue: function(item) {\n      return item ? item.toString() : item;\n    },\n    itemText: function(item) {\n      return this.itemValue(item);\n    },\n    freeInput: true,\n    addOnBlur: true,\n    maxTags: undefined,\n    maxChars: undefined,\n    confirmKeys: [13, 44],\n    onTagExists: function(item, $tag) {\n      $tag.hide().fadeIn();\n    },\n    trimValue: false,\n    allowDuplicates: false\n  };\n\n  /**\n   * Constructor function\n   */\n  function TagsInput(element, options) {\n    this.itemsArray = [];\n\n    this.$element = $(element);\n    this.$element.hide();\n\n    this.isSelect = (element.tagName === 'SELECT');\n    this.multiple = (this.isSelect && element.hasAttribute('multiple'));\n    this.objectItems = options && options.itemValue;\n    this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\n    this.inputSize = Math.max(1, this.placeholderText.length);\n\n    this.$container = $('<div class=\"bootstrap-tagsinput\"></div>');\n    this.$input = $('<input type=\"text\" placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\n\n    this.$element.after(this.$container);\n\n    var inputWidth = (this.inputSize < 3 ? 3 : this.inputSize) + \"em\";\n    this.$input.get(0).style.cssText = \"width: \" + inputWidth + \" !important;\";\n    this.build(options);\n  }\n\n  TagsInput.prototype = {\n    constructor: TagsInput,\n\n    /**\n     * Adds the given item as a new tag. Pass true to dontPushVal to prevent\n     * updating the elements val()\n     */\n    add: function(item, dontPushVal) {\n      var self = this;\n\n      if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)\n        return;\n\n      // Ignore falsey values, except false\n      if (item !== false && !item)\n        return;\n\n      // Trim value\n      if (typeof item === \"string\" && self.options.trimValue) {\n        item = $.trim(item);\n      }\n\n      // Throw an error when trying to add an object while the itemValue option was not set\n      if (typeof item === \"object\" && !self.objectItems)\n        throw(\"Can't add objects when itemValue option is not set\");\n\n      // Ignore strings only containg whitespace\n      if (item.toString().match(/^\\s*$/))\n        return;\n\n      // If SELECT but not multiple, remove current tag\n      if (self.isSelect && !self.multiple && self.itemsArray.length > 0)\n        self.remove(self.itemsArray[0]);\n\n      if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT') {\n        var items = item.split(',');\n        if (items.length > 1) {\n          for (var i = 0; i < items.length; i++) {\n            this.add(items[i], true);\n          }\n\n          if (!dontPushVal)\n            self.pushVal();\n          return;\n        }\n      }\n\n      var itemValue = self.options.itemValue(item),\n          itemText = self.options.itemText(item),\n          tagClass = self.options.tagClass(item);\n\n      // Ignore items allready added\n      var existing = $.grep(self.itemsArray, function(item) { return self.options.itemValue(item) === itemValue; } )[0];\n      if (existing && !self.options.allowDuplicates) {\n        // Invoke onTagExists\n        if (self.options.onTagExists) {\n          var $existingTag = $(\".tag\", self.$container).filter(function() { return $(this).data(\"item\") === existing; });\n          self.options.onTagExists(item, $existingTag);\n        }\n        return;\n      }\n\n      // if length greater than limit\n      if (self.items().toString().length + item.length + 1 > self.options.maxInputLength)\n        return;\n\n      // raise beforeItemAdd arg\n      var beforeItemAddEvent = $.Event('beforeItemAdd', { item: item, cancel: false });\n      self.$element.trigger(beforeItemAddEvent);\n      if (beforeItemAddEvent.cancel)\n        return;\n\n      // register item in internal array and map\n      self.itemsArray.push(item);\n\n      // add a tag element\n      var $tag = $('<span class=\"tag ' + htmlEncode(tagClass) + '\">' + htmlEncode(itemText) + '<span data-role=\"remove\"></span></span>');\n      $tag.data('item', item);\n      self.findInputWrapper().before($tag);\n      $tag.after(' ');\n\n      // add <option /> if item represents a value not present in one of the <select />'s options\n      if (self.isSelect && !$('option[value=\"' + encodeURIComponent(itemValue) + '\"]',self.$element)[0]) {\n        var $option = $('<option selected>' + htmlEncode(itemText) + '</option>');\n        $option.data('item', item);\n        $option.attr('value', itemValue);\n        self.$element.append($option);\n      }\n\n      if (!dontPushVal)\n        self.pushVal();\n\n      // Add class when reached maxTags\n      if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength)\n        self.$container.addClass('bootstrap-tagsinput-max');\n\n      self.$element.trigger($.Event('itemAdded', { item: item }));\n    },\n\n    /**\n     * Removes the given item. Pass true to dontPushVal to prevent updating the\n     * elements val()\n     */\n    remove: function(item, dontPushVal) {\n      var self = this;\n\n      if (self.objectItems) {\n        if (typeof item === \"object\")\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  self.options.itemValue(item); } );\n        else\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  item; } );\n\n        item = item[item.length-1];\n      }\n\n      if (item) {\n        var beforeItemRemoveEvent = $.Event('beforeItemRemove', { item: item, cancel: false });\n        self.$element.trigger(beforeItemRemoveEvent);\n        if (beforeItemRemoveEvent.cancel)\n          return;\n\n        $('.tag', self.$container).filter(function() { return $(this).data('item') === item; }).remove();\n        $('option', self.$element).filter(function() { return $(this).data('item') === item; }).remove();\n        if($.inArray(item, self.itemsArray) !== -1)\n          self.itemsArray.splice($.inArray(item, self.itemsArray), 1);\n      }\n\n      if (!dontPushVal)\n        self.pushVal();\n\n      // Remove class when reached maxTags\n      if (self.options.maxTags > self.itemsArray.length)\n        self.$container.removeClass('bootstrap-tagsinput-max');\n\n      self.$element.trigger($.Event('itemRemoved',  { item: item }));\n    },\n\n    /**\n     * Removes all items\n     */\n    removeAll: function() {\n      var self = this;\n\n      $('.tag', self.$container).remove();\n      $('option', self.$element).remove();\n\n      while(self.itemsArray.length > 0)\n        self.itemsArray.pop();\n\n      self.pushVal();\n    },\n\n    /**\n     * Refreshes the tags so they match the text/value of their corresponding\n     * item.\n     */\n    refresh: function() {\n      var self = this;\n      $('.tag', self.$container).each(function() {\n        var $tag = $(this),\n            item = $tag.data('item'),\n            itemValue = self.options.itemValue(item),\n            itemText = self.options.itemText(item),\n            tagClass = self.options.tagClass(item);\n\n          // Update tag's class and inner text\n          $tag.attr('class', null);\n          $tag.addClass('tag ' + htmlEncode(tagClass));\n          $tag.contents().filter(function() {\n            return this.nodeType == 3;\n          })[0].nodeValue = htmlEncode(itemText);\n\n          if (self.isSelect) {\n            var option = $('option', self.$element).filter(function() { return $(this).data('item') === item; });\n            option.attr('value', itemValue);\n          }\n      });\n    },\n\n    /**\n     * Returns the items added as tags\n     */\n    items: function() {\n      return this.itemsArray;\n    },\n\n    /**\n     * Assembly value by retrieving the value of each item, and set it on the\n     * element.\n     */\n    pushVal: function() {\n      var self = this,\n          val = $.map(self.items(), function(item) {\n            return self.options.itemValue(item).toString();\n          });\n\n      self.$element.val(val, true).trigger('change');\n    },\n\n    /**\n     * Initializes the tags input behaviour on the element\n     */\n    build: function(options) {\n      var self = this;\n\n      self.options = $.extend({}, defaultOptions, options);\n      // When itemValue is set, freeInput should always be false\n      if (self.objectItems)\n        self.options.freeInput = false;\n\n      makeOptionItemFunction(self.options, 'itemValue');\n      makeOptionItemFunction(self.options, 'itemText');\n      makeOptionFunction(self.options, 'tagClass');\n      \n      // Typeahead Bootstrap version 2.3.2\n      if (self.options.typeahead) {\n        var typeahead = self.options.typeahead || {};\n\n        makeOptionFunction(typeahead, 'source');\n\n        self.$input.typeahead($.extend({}, typeahead, {\n          source: function (query, process) {\n            function processItems(items) {\n              var texts = [];\n\n              for (var i = 0; i < items.length; i++) {\n                var text = self.options.itemText(items[i]);\n                map[text] = items[i];\n                texts.push(text);\n              }\n              process(texts);\n            }\n\n            this.map = {};\n            var map = this.map,\n                data = typeahead.source(query);\n\n            if ($.isFunction(data.success)) {\n              // support for Angular callbacks\n              data.success(processItems);\n            } else if ($.isFunction(data.then)) {\n              // support for Angular promises\n              data.then(processItems);\n            } else {\n              // support for functions and jquery promises\n              $.when(data)\n               .then(processItems);\n            }\n          },\n          updater: function (text) {\n            self.add(this.map[text]);\n          },\n          matcher: function (text) {\n            return (text.toLowerCase().indexOf(this.query.trim().toLowerCase()) !== -1);\n          },\n          sorter: function (texts) {\n            return texts.sort();\n          },\n          highlighter: function (text) {\n            var regex = new RegExp( '(' + this.query + ')', 'gi' );\n            return text.replace( regex, \"<strong>$1</strong>\" );\n          }\n        }));\n      }\n\n      // typeahead.js\n      if (self.options.typeaheadjs) {\n          var typeaheadjs = self.options.typeaheadjs || {};\n          \n          self.$input.typeahead(null, typeaheadjs).on('typeahead:selected', $.proxy(function (obj, datum) {\n            if (typeaheadjs.valueKey)\n              self.add(datum[typeaheadjs.valueKey]);\n            else\n              self.add(datum);\n            self.$input.typeahead('val', '');\n          }, self));\n      }\n\n      self.$container.on('click', $.proxy(function(event) {\n        if (! self.$element.attr('disabled')) {\n          self.$input.removeAttr('disabled');\n        }\n        self.$input.focus();\n      }, self));\n\n        if (self.options.addOnBlur && self.options.freeInput) {\n          self.$input.on('focusout', $.proxy(function(event) {\n              // HACK: only process on focusout when no typeahead opened, to\n              //       avoid adding the typeahead text as tag\n              if ($('.typeahead, .twitter-typeahead', self.$container).length === 0) {\n                self.add(self.$input.val());\n                self.$input.val('');\n              }\n          }, self));\n        }\n        \n\n      self.$container.on('keydown', 'input', $.proxy(function(event) {\n        var $input = $(event.target),\n            $inputWrapper = self.findInputWrapper();\n\n        if (self.$element.attr('disabled')) {\n          self.$input.attr('disabled', 'disabled');\n          return;\n        }\n\n        switch (event.which) {\n          // BACKSPACE\n          case 8:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var prev = $inputWrapper.prev();\n              if (prev) {\n                self.remove(prev.data('item'));\n              }\n            }\n            break;\n\n          // DELETE\n          case 46:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var next = $inputWrapper.next();\n              if (next) {\n                self.remove(next.data('item'));\n              }\n            }\n            break;\n\n          // LEFT ARROW\n          case 37:\n            // Try to move the input before the previous tag\n            var $prevTag = $inputWrapper.prev();\n            if ($input.val().length === 0 && $prevTag[0]) {\n              $prevTag.before($inputWrapper);\n              $input.focus();\n            }\n            break;\n          // RIGHT ARROW\n          case 39:\n            // Try to move the input after the next tag\n            var $nextTag = $inputWrapper.next();\n            if ($input.val().length === 0 && $nextTag[0]) {\n              $nextTag.after($inputWrapper);\n              $input.focus();\n            }\n            break;\n         default:\n             // ignore\n         }\n\n        // Reset internal input's size\n        var textLength = $input.val().length,\n            wordSpace = Math.ceil(textLength / 5),\n            size = textLength + wordSpace + 1;\n        $input.attr('size', Math.max(this.inputSize, $input.val().length));\n      }, self));\n\n      self.$container.on('keypress', 'input', $.proxy(function(event) {\n         var $input = $(event.target);\n\n         if (self.$element.attr('disabled')) {\n            self.$input.attr('disabled', 'disabled');\n            return;\n         }\n\n         var text = $input.val(),\n         maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;\n         if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached)) {\n            self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);\n            $input.val('');\n            event.preventDefault();\n         }\n\n         // Reset internal input's size\n         var textLength = $input.val().length,\n            wordSpace = Math.ceil(textLength / 5),\n            size = textLength + wordSpace + 1;\n         $input.attr('size', Math.max(this.inputSize, $input.val().length));\n      }, self));\n\n      // Remove icon clicked\n      self.$container.on('click', '[data-role=remove]', $.proxy(function(event) {\n        if (self.$element.attr('disabled')) {\n          return;\n        }\n        self.remove($(event.target).closest('.tag').data('item'));\n      }, self));\n\n      // Only add existing value as tags when using strings as tags\n      if (self.options.itemValue === defaultOptions.itemValue) {\n        if (self.$element[0].tagName === 'INPUT') {\n            self.add(self.$element.val());\n        } else {\n          $('option', self.$element).each(function() {\n            self.add($(this).attr('value'), true);\n          });\n        }\n      }\n    },\n\n    /**\n     * Removes all tagsinput behaviour and unregsiter all event handlers\n     */\n    destroy: function() {\n      var self = this;\n\n      // Unbind events\n      self.$container.off('keypress', 'input');\n      self.$container.off('click', '[role=remove]');\n\n      self.$container.remove();\n      self.$element.removeData('tagsinput');\n      self.$element.show();\n    },\n\n    /**\n     * Sets focus on the tagsinput\n     */\n    focus: function() {\n      this.$input.focus();\n    },\n\n    /**\n     * Returns the internal input element\n     */\n    input: function() {\n      return this.$input;\n    },\n\n    /**\n     * Returns the element which is wrapped around the internal input. This\n     * is normally the $container, but typeahead.js moves the $input element.\n     */\n    findInputWrapper: function() {\n      var elt = this.$input[0],\n          container = this.$container[0];\n      while(elt && elt.parentNode !== container)\n        elt = elt.parentNode;\n\n      return $(elt);\n    }\n  };\n\n  /**\n   * Register JQuery plugin\n   */\n  $.fn.tagsinput = function(arg1, arg2) {\n    var results = [];\n\n    this.each(function() {\n      var tagsinput = $(this).data('tagsinput');\n      // Initialize a new tags input\n      if (!tagsinput) {\n          tagsinput = new TagsInput(this, arg1);\n          $(this).data('tagsinput', tagsinput);\n          results.push(tagsinput);\n\n          if (this.tagName === 'SELECT') {\n              $('option', $(this)).attr('selected', 'selected');\n          }\n\n          // Init tags from $(this).val()\n          $(this).val($(this).val());\n      } else if (!arg1 && !arg2) {\n          // tagsinput already exists\n          // no function, trying to init\n          results.push(tagsinput);\n      } else if(tagsinput[arg1] !== undefined) {\n          // Invoke function on existing tags input\n          var retVal = tagsinput[arg1](arg2);\n          if (retVal !== undefined)\n              results.push(retVal);\n      }\n    });\n\n    if ( typeof arg1 == 'string') {\n      // Return the results from the invoked function calls\n      return results.length > 1 ? results : results[0];\n    } else {\n      return results;\n    }\n  };\n\n  $.fn.tagsinput.Constructor = TagsInput;\n\n  /**\n   * Most options support both a string or number as well as a function as\n   * option value. This function makes sure that the option with the given\n   * key in the given options is wrapped in a function\n   */\n  function makeOptionItemFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var propertyName = options[key];\n      options[key] = function(item) { return item[propertyName]; };\n    }\n  }\n  function makeOptionFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var value = options[key];\n      options[key] = function() { return value; };\n    }\n  }\n  /**\n   * HtmlEncodes the given value\n   */\n  var htmlEncodeContainer = $('<div />');\n  function htmlEncode(value) {\n    if (value) {\n      return htmlEncodeContainer.text(value).html();\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Returns the position of the caret in the given input field\n   * http://flightschool.acylt.com/devnotes/caret-position-woes/\n   */\n  function doGetCaretPosition(oField) {\n    var iCaretPos = 0;\n    if (document.selection) {\n      oField.focus ();\n      var oSel = document.selection.createRange();\n      oSel.moveStart ('character', -oField.value.length);\n      iCaretPos = oSel.text.length;\n    } else if (oField.selectionStart || oField.selectionStart == '0') {\n      iCaretPos = oField.selectionStart;\n    }\n    return (iCaretPos);\n  }\n\n  /**\n    * Returns boolean indicates whether user has pressed an expected key combination. \n    * @param object keyPressEvent: JavaScript event object, refer\n    *     http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    * @param object lookupList: expected key combinations, as in:\n    *     [13, {which: 188, shiftKey: true}]\n    */\n  function keyCombinationInList(keyPressEvent, lookupList) {\n      var found = false;\n      $.each(lookupList, function (index, keyCombination) {\n          if (typeof (keyCombination) === 'number' && keyPressEvent.which === keyCombination) {\n              found = true;\n              return false;\n          }\n\n          if (keyPressEvent.which === keyCombination.which) {\n              var alt = !keyCombination.hasOwnProperty('altKey') || keyPressEvent.altKey === keyCombination.altKey,\n                  shift = !keyCombination.hasOwnProperty('shiftKey') || keyPressEvent.shiftKey === keyCombination.shiftKey,\n                  ctrl = !keyCombination.hasOwnProperty('ctrlKey') || keyPressEvent.ctrlKey === keyCombination.ctrlKey;\n              if (alt && shift && ctrl) {\n                  found = true;\n                  return false;\n              }\n          }\n      });\n\n      return found;\n  }\n\n  /**\n   * Initialize tagsinput behaviour on inputs and selects which have\n   * data-role=tagsinput\n   */\n  $(function() {\n    $(\"input[data-role=tagsinput], select[multiple][data-role=tagsinput]\").tagsinput();\n  });\n})(window.jQuery);\n"],"sourceRoot":"/source/"}