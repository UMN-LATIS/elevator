{"version":3,"file":"bootstrap-tagsinput.min.js","sources":["bootstrap-tagsinput.js"],"sourcesContent":["/*\n * bootstrap-tagsinput v0.8.0\n * \n */\n\n(function ($) {\n  \"use strict\";\n\n  var defaultOptions = {\n    tagClass: function(item) {\n      return 'label label-info';\n    },\n    focusClass: 'focus',\n    itemValue: function(item) {\n      return item ? item.toString() : item;\n    },\n    itemText: function(item) {\n      return this.itemValue(item);\n    },\n    itemTitle: function(item) {\n      return null;\n    },\n    freeInput: true,\n    addOnBlur: true,\n    maxTags: undefined,\n    maxChars: undefined,\n    confirmKeys: [13, 44],\n    delimiter: ',',\n    delimiterRegex: null,\n    cancelConfirmKeysOnEmpty: false,\n    onTagExists: function(item, $tag) {\n      $tag.hide().fadeIn();\n    },\n    trimValue: false,\n    allowDuplicates: false,\n    triggerChange: true\n  };\n\n  /**\n   * Constructor function\n   */\n  function TagsInput(element, options) {\n    this.isInit = true;\n    this.itemsArray = [];\n\n    this.$element = $(element);\n    this.$element.hide();\n\n    this.isSelect = (element.tagName === 'SELECT');\n    this.multiple = (this.isSelect && element.hasAttribute('multiple'));\n    this.objectItems = options && options.itemValue;\n    this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';\n    this.inputSize = Math.max(1, this.placeholderText.length);\n\n    this.$container = $('<div class=\"bootstrap-tagsinput\"></div>');\n    this.$input = $('<input type=\"text\" placeholder=\"' + this.placeholderText + '\"/>').appendTo(this.$container);\n\n    this.$element.before(this.$container);\n\n    this.build(options);\n    this.isInit = false;\n  }\n\n  TagsInput.prototype = {\n    constructor: TagsInput,\n\n    /**\n     * Adds the given item as a new tag. Pass true to dontPushVal to prevent\n     * updating the elements val()\n     */\n    add: function(item, dontPushVal, options) {\n      var self = this;\n\n      if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)\n        return;\n\n      // Ignore falsey values, except false\n      if (item !== false && !item)\n        return;\n\n      // Trim value\n      if (typeof item === \"string\" && self.options.trimValue) {\n        item = $.trim(item);\n      }\n\n      // Throw an error when trying to add an object while the itemValue option was not set\n      if (typeof item === \"object\" && !self.objectItems)\n        throw(\"Can't add objects when itemValue option is not set\");\n\n      // Ignore strings only containg whitespace\n      if (item.toString().match(/^\\s*$/))\n        return;\n\n      // If SELECT but not multiple, remove current tag\n      if (self.isSelect && !self.multiple && self.itemsArray.length > 0)\n        self.remove(self.itemsArray[0]);\n\n      if (typeof item === \"string\" && this.$element[0].tagName === 'INPUT') {\n        var delimiter = (self.options.delimiterRegex) ? self.options.delimiterRegex : self.options.delimiter;\n        var items = item.split(delimiter);\n        if (items.length > 1) {\n          for (var i = 0; i < items.length; i++) {\n            this.add(items[i], true);\n          }\n\n          if (!dontPushVal)\n            self.pushVal(self.options.triggerChange);\n          return;\n        }\n      }\n\n      var itemValue = self.options.itemValue(item),\n          itemText = self.options.itemText(item),\n          tagClass = self.options.tagClass(item),\n          itemTitle = self.options.itemTitle(item);\n\n      // Ignore items allready added\n      var existing = $.grep(self.itemsArray, function(item) { return self.options.itemValue(item) === itemValue; } )[0];\n      if (existing && !self.options.allowDuplicates) {\n        // Invoke onTagExists\n        if (self.options.onTagExists) {\n          var $existingTag = $(\".tag\", self.$container).filter(function() { return $(this).data(\"item\") === existing; });\n          self.options.onTagExists(item, $existingTag);\n        }\n        return;\n      }\n\n      // if length greater than limit\n      if (self.items().toString().length + item.length + 1 > self.options.maxInputLength)\n        return;\n\n      // raise beforeItemAdd arg\n      var beforeItemAddEvent = $.Event('beforeItemAdd', { item: item, cancel: false, options: options});\n      self.$element.trigger(beforeItemAddEvent);\n      if (beforeItemAddEvent.cancel)\n        return;\n\n      // register item in internal array and map\n      self.itemsArray.push(item);\n\n      // add a tag element\n\n      var $tag = $('<span class=\"tag ' + htmlEncode(tagClass) + (itemTitle !== null ? ('\" title=\"' + itemTitle) : '') + '\">' + htmlEncode(itemText) + '<span data-role=\"remove\"></span></span>');\n      $tag.data('item', item);\n      self.findInputWrapper().before($tag);\n      $tag.after(' ');\n\n      // Check to see if the tag exists in its raw or uri-encoded form\n      var optionExists = (\n        $('option[value=\"' + encodeURIComponent(itemValue) + '\"]', self.$element).length ||\n        $('option[value=\"' + htmlEncode(itemValue) + '\"]', self.$element).length\n      );\n\n      // add <option /> if item represents a value not present in one of the <select />'s options\n      if (self.isSelect && !optionExists) {\n        var $option = $('<option selected>' + htmlEncode(itemText) + '</option>');\n        $option.data('item', item);\n        $option.attr('value', itemValue);\n        self.$element.append($option);\n      }\n\n      if (!dontPushVal)\n        self.pushVal(self.options.triggerChange);\n\n      // Add class when reached maxTags\n      if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength)\n        self.$container.addClass('bootstrap-tagsinput-max');\n\n      // If using typeahead, once the tag has been added, clear the typeahead value so it does not stick around in the input.\n      if ($('.typeahead, .twitter-typeahead', self.$container).length) {\n        self.$input.typeahead('val', '');\n      }\n\n      if (this.isInit) {\n        self.$element.trigger($.Event('itemAddedOnInit', { item: item, options: options }));\n      } else {\n        self.$element.trigger($.Event('itemAdded', { item: item, options: options }));\n      }\n    },\n\n    /**\n     * Removes the given item. Pass true to dontPushVal to prevent updating the\n     * elements val()\n     */\n    remove: function(item, dontPushVal, options) {\n      var self = this;\n\n      if (self.objectItems) {\n        if (typeof item === \"object\")\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  self.options.itemValue(item); } );\n        else\n          item = $.grep(self.itemsArray, function(other) { return self.options.itemValue(other) ==  item; } );\n\n        item = item[item.length-1];\n      }\n\n      if (item) {\n        var beforeItemRemoveEvent = $.Event('beforeItemRemove', { item: item, cancel: false, options: options });\n        self.$element.trigger(beforeItemRemoveEvent);\n        if (beforeItemRemoveEvent.cancel)\n          return;\n\n        $('.tag', self.$container).filter(function() { return $(this).data('item') === item; }).remove();\n        $('option', self.$element).filter(function() { return $(this).data('item') === item; }).remove();\n        if($.inArray(item, self.itemsArray) !== -1)\n          self.itemsArray.splice($.inArray(item, self.itemsArray), 1);\n      }\n\n      if (!dontPushVal)\n        self.pushVal(self.options.triggerChange);\n\n      // Remove class when reached maxTags\n      if (self.options.maxTags > self.itemsArray.length)\n        self.$container.removeClass('bootstrap-tagsinput-max');\n\n      self.$element.trigger($.Event('itemRemoved',  { item: item, options: options }));\n    },\n\n    /**\n     * Removes all items\n     */\n    removeAll: function() {\n      var self = this;\n\n      $('.tag', self.$container).remove();\n      $('option', self.$element).remove();\n\n      while(self.itemsArray.length > 0)\n        self.itemsArray.pop();\n\n      self.pushVal(self.options.triggerChange);\n    },\n\n    /**\n     * Refreshes the tags so they match the text/value of their corresponding\n     * item.\n     */\n    refresh: function() {\n      var self = this;\n      $('.tag', self.$container).each(function() {\n        var $tag = $(this),\n            item = $tag.data('item'),\n            itemValue = self.options.itemValue(item),\n            itemText = self.options.itemText(item),\n            tagClass = self.options.tagClass(item);\n\n          // Update tag's class and inner text\n          $tag.attr('class', null);\n          $tag.addClass('tag ' + htmlEncode(tagClass));\n          $tag.contents().filter(function() {\n            return this.nodeType == 3;\n          })[0].nodeValue = htmlEncode(itemText);\n\n          if (self.isSelect) {\n            var option = $('option', self.$element).filter(function() { return $(this).data('item') === item; });\n            option.attr('value', itemValue);\n          }\n      });\n    },\n\n    /**\n     * Returns the items added as tags\n     */\n    items: function() {\n      return this.itemsArray;\n    },\n\n    /**\n     * Assembly value by retrieving the value of each item, and set it on the\n     * element.\n     */\n    pushVal: function() {\n      var self = this,\n          val = $.map(self.items(), function(item) {\n            return '\"' + self.options.itemValue(item).toString() + '\"';\n          });\n      self.$element.val(val.join(self.options.delimiter), true);\n\n      if (self.options.triggerChange)\n        self.$element.trigger('change');\n    },\n\n    /**\n     * Initializes the tags input behaviour on the element\n     */\n    build: function(options) {\n      var self = this;\n\n      self.options = $.extend({}, defaultOptions, options);\n      // When itemValue is set, freeInput should always be false\n      if (self.objectItems)\n        self.options.freeInput = false;\n\n      makeOptionItemFunction(self.options, 'itemValue');\n      makeOptionItemFunction(self.options, 'itemText');\n      makeOptionFunction(self.options, 'tagClass');\n\n      // Typeahead Bootstrap version 2.3.2\n      if (self.options.typeahead) {\n        var typeahead = self.options.typeahead || {};\n\n        makeOptionFunction(typeahead, 'source');\n\n        self.$input.typeahead($.extend({}, typeahead, {\n          source: function (query, process) {\n            function processItems(items) {\n              var texts = [];\n              console.log(items.length);\n              for (var i = 0; i < items.length; i++) {\n                var text = self.options.itemText(items[i]);\n                map[text] = items[i];\n                console.log(map);\n                console.log(text);\n                texts.push(text);\n              }\n              process(texts);\n            }\n\n            this.map = {};\n            var map = this.map,\n                data = typeahead.source(query);\n\n            if ($.isFunction(data.success)) {\n              // support for Angular callbacks\n              data.success(processItems);\n            } else if ($.isFunction(data.then)) {\n              // support for Angular promises\n              data.then(processItems);\n            } else {\n              // support for functions and jquery promises\n              $.when(data)\n               .then(processItems);\n            }\n          },\n          updater: function (text) {\n            self.add(this.map[text]);\n            return this.map[text];\n          },\n          matcher: function (text) {\n            return (text.toLowerCase().indexOf(this.query.trim().toLowerCase()) !== -1);\n          },\n          sorter: function (texts) {\n            return texts.sort();\n          },\n          highlighter: function (text) {\n            var regex = new RegExp( '(' + this.query + ')', 'gi' );\n            return text.replace( regex, \"<strong>$1</strong>\" );\n          }\n        }));\n      }\n\n      // typeahead.js\n      if (self.options.typeaheadjs) {\n\n          // Determine if main configurations were passed or simply a dataset\n          var typeaheadjs = self.options.typeaheadjs;\n          if (!$.isArray(typeaheadjs)) {\n              typeaheadjs = [null, typeaheadjs];\n          }\n          var valueKey = typeaheadjs[1].valueKey; // We should test typeaheadjs.size >= 1\n          var f_datum = valueKey ? function (datum) { return datum[valueKey];  }\n                                 : function (datum) {  return datum;  }\n          $.fn.typeahead.apply(self.$input,typeaheadjs).on('typeahead:selected', $.proxy(function (obj, datum) {\n              self.add( f_datum(datum) );\n              self.$input.typeahead('val', '');\n            }, self));\n\n      }\n\n      self.$container.on('click', $.proxy(function(event) {\n        if (! self.$element.attr('disabled')) {\n          self.$input.removeAttr('disabled');\n        }\n        self.$input.focus();\n      }, self));\n\n        if (self.options.addOnBlur && self.options.freeInput) {\n          self.$input.on('focusout', $.proxy(function(event) {\n              // HACK: only process on focusout when no typeahead opened, to\n              //       avoid adding the typeahead text as tag\n              if ($('.typeahead, .twitter-typeahead', self.$container).length === 0) {\n                self.add(self.$input.val());\n                self.$input.val('');\n              }\n          }, self));\n        }\n\n      // Toggle the 'focus' css class on the container when it has focus\n      self.$container.on({\n        focusin: function() {\n          self.$container.addClass(self.options.focusClass);\n        },\n        focusout: function() {\n          self.$container.removeClass(self.options.focusClass);\n        },\n      });\n\n      self.$container.on('keydown', 'input', $.proxy(function(event) {\n        var $input = $(event.target),\n            $inputWrapper = self.findInputWrapper();\n\n        if (self.$element.attr('disabled')) {\n          self.$input.attr('disabled', 'disabled');\n          return;\n        }\n\n        switch (event.which) {\n          // BACKSPACE\n          case 8:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var prev = $inputWrapper.prev();\n              if (prev.length) {\n                self.remove(prev.data('item'));\n              }\n            }\n            break;\n\n          // DELETE\n          case 46:\n            if (doGetCaretPosition($input[0]) === 0) {\n              var next = $inputWrapper.next();\n              if (next.length) {\n                self.remove(next.data('item'));\n              }\n            }\n            break;\n\n          // LEFT ARROW\n          case 37:\n            // Try to move the input before the previous tag\n            var $prevTag = $inputWrapper.prev();\n            if ($input.val().length === 0 && $prevTag[0]) {\n              $prevTag.before($inputWrapper);\n              $input.focus();\n            }\n            break;\n          // RIGHT ARROW\n          case 39:\n            // Try to move the input after the next tag\n            var $nextTag = $inputWrapper.next();\n            if ($input.val().length === 0 && $nextTag[0]) {\n              $nextTag.after($inputWrapper);\n              $input.focus();\n            }\n            break;\n         default:\n             // ignore\n         }\n\n        // Reset internal input's size\n        var textLength = $input.val().length,\n            wordSpace = Math.ceil(textLength / 5),\n            size = textLength + wordSpace + 1;\n        $input.attr('size', Math.max(this.inputSize, $input.val().length));\n      }, self));\n\n      self.$container.on('keypress', 'input', $.proxy(function(event) {\n         var $input = $(event.target);\n\n         if (self.$element.attr('disabled')) {\n            self.$input.attr('disabled', 'disabled');\n            return;\n         }\n\n         var text = $input.val(),\n         maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;\n         if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached)) {\n            // Only attempt to add a tag if there is data in the field\n            if (text.length !== 0) {\n               self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);\n               $input.val('');\n            }\n\n            // If the field is empty, let the event triggered fire as usual\n            if (self.options.cancelConfirmKeysOnEmpty === false) {\n                event.preventDefault();\n            }\n         }\n\n         // Reset internal input's size\n         var textLength = $input.val().length,\n            wordSpace = Math.ceil(textLength / 5),\n            size = textLength + wordSpace + 1;\n         $input.attr('size', Math.max(this.inputSize, $input.val().length));\n      }, self));\n\n      // Remove icon clicked\n      self.$container.on('click', '[data-role=remove]', $.proxy(function(event) {\n        if (self.$element.attr('disabled')) {\n          return;\n        }\n        self.remove($(event.target).closest('.tag').data('item'));\n      }, self));\n\n      // Only add existing value as tags when using strings as tags\n      if (self.options.itemValue === defaultOptions.itemValue) {\n        if (self.$element[0].tagName === 'INPUT') {\n            self.add(self.$element.val());\n        } else {\n          $('option', self.$element).each(function() {\n            self.add($(this).attr('value'), true);\n          });\n        }\n      }\n    },\n\n    /**\n     * Removes all tagsinput behaviour and unregsiter all event handlers\n     */\n    destroy: function() {\n      var self = this;\n\n      // Unbind events\n      self.$container.off('keypress', 'input');\n      self.$container.off('click', '[role=remove]');\n\n      self.$container.remove();\n      self.$element.removeData('tagsinput');\n      self.$element.show();\n    },\n\n    /**\n     * Sets focus on the tagsinput\n     */\n    focus: function() {\n      this.$input.focus();\n    },\n\n    /**\n     * Returns the internal input element\n     */\n    input: function() {\n      return this.$input;\n    },\n\n    /**\n     * Returns the element which is wrapped around the internal input. This\n     * is normally the $container, but typeahead.js moves the $input element.\n     */\n    findInputWrapper: function() {\n      var elt = this.$input[0],\n          container = this.$container[0];\n      while(elt && elt.parentNode !== container)\n        elt = elt.parentNode;\n\n      return $(elt);\n    }\n  };\n\n  /**\n   * Register JQuery plugin\n   */\n  $.fn.tagsinput = function(arg1, arg2, arg3) {\n    var results = [];\n\n    this.each(function() {\n      var tagsinput = $(this).data('tagsinput');\n      // Initialize a new tags input\n      if (!tagsinput) {\n          tagsinput = new TagsInput(this, arg1);\n          $(this).data('tagsinput', tagsinput);\n          results.push(tagsinput);\n\n          if (this.tagName === 'SELECT') {\n              $('option', $(this)).attr('selected', 'selected');\n          }\n\n          // Init tags from $(this).val()\n          $(this).val($(this).val());\n      } else if (!arg1 && !arg2) {\n          // tagsinput already exists\n          // no function, trying to init\n          results.push(tagsinput);\n      } else if(tagsinput[arg1] !== undefined) {\n          // Invoke function on existing tags input\n            if(tagsinput[arg1].length === 3 && arg3 !== undefined){\n               var retVal = tagsinput[arg1](arg2, null, arg3);\n            }else{\n               var retVal = tagsinput[arg1](arg2);\n            }\n          if (retVal !== undefined)\n              results.push(retVal);\n      }\n    });\n\n    if ( typeof arg1 == 'string') {\n      // Return the results from the invoked function calls\n      return results.length > 1 ? results : results[0];\n    } else {\n      return results;\n    }\n  };\n\n  $.fn.tagsinput.Constructor = TagsInput;\n\n  /**\n   * Most options support both a string or number as well as a function as\n   * option value. This function makes sure that the option with the given\n   * key in the given options is wrapped in a function\n   */\n  function makeOptionItemFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var propertyName = options[key];\n      options[key] = function(item) { return item[propertyName]; };\n    }\n  }\n  function makeOptionFunction(options, key) {\n    if (typeof options[key] !== 'function') {\n      var value = options[key];\n      options[key] = function() { return value; };\n    }\n  }\n  /**\n   * HtmlEncodes the given value\n   */\n  var htmlEncodeContainer = $('<div />');\n  function htmlEncode(value) {\n    if (value) {\n      return htmlEncodeContainer.text(value).html();\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Returns the position of the caret in the given input field\n   * http://flightschool.acylt.com/devnotes/caret-position-woes/\n   */\n  function doGetCaretPosition(oField) {\n    var iCaretPos = 0;\n    if (document.selection) {\n      oField.focus ();\n      var oSel = document.selection.createRange();\n      oSel.moveStart ('character', -oField.value.length);\n      iCaretPos = oSel.text.length;\n    } else if (oField.selectionStart || oField.selectionStart == '0') {\n      iCaretPos = oField.selectionStart;\n    }\n    return (iCaretPos);\n  }\n\n  /**\n    * Returns boolean indicates whether user has pressed an expected key combination.\n    * @param object keyPressEvent: JavaScript event object, refer\n    *     http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    * @param object lookupList: expected key combinations, as in:\n    *     [13, {which: 188, shiftKey: true}]\n    */\n  function keyCombinationInList(keyPressEvent, lookupList) {\n      var found = false;\n      $.each(lookupList, function (index, keyCombination) {\n          if (typeof (keyCombination) === 'number' && keyPressEvent.which === keyCombination) {\n              found = true;\n              return false;\n          }\n\n          if (keyPressEvent.which === keyCombination.which) {\n              var alt = !keyCombination.hasOwnProperty('altKey') || keyPressEvent.altKey === keyCombination.altKey,\n                  shift = !keyCombination.hasOwnProperty('shiftKey') || keyPressEvent.shiftKey === keyCombination.shiftKey,\n                  ctrl = !keyCombination.hasOwnProperty('ctrlKey') || keyPressEvent.ctrlKey === keyCombination.ctrlKey;\n              if (alt && shift && ctrl) {\n                  found = true;\n                  return false;\n              }\n          }\n      });\n\n      return found;\n  }\n\n  /**\n   * Initialize tagsinput behaviour on inputs and selects which have\n   * data-role=tagsinput\n   */\n  $(function() {\n    $(\"input[data-role=tagsinput], select[multiple][data-role=tagsinput]\").tagsinput();\n  });\n})(window.jQuery);"],"names":["$","defaultOptions","tagClass","item","focusClass","itemValue","toString","itemText","this","itemTitle","freeInput","addOnBlur","maxTags","undefined","maxChars","confirmKeys","delimiter","delimiterRegex","cancelConfirmKeysOnEmpty","onTagExists","$tag","hide","fadeIn","trimValue","allowDuplicates","triggerChange","TagsInput","element","options","isInit","itemsArray","$element","isSelect","tagName","multiple","hasAttribute","objectItems","placeholderText","attr","inputSize","Math","max","length","$container","$input","appendTo","before","build","makeOptionItemFunction","key","propertyName","makeOptionFunction","value","prototype","constructor","add","dontPushVal","self","trim","match","remove","items","split","i","pushVal","existing","grep","$existingTag","filter","data","maxInputLength","beforeItemAddEvent","Event","cancel","trigger","push","htmlEncode","findInputWrapper","after","optionExists","encodeURIComponent","$option","append","addClass","typeahead","other","beforeItemRemoveEvent","inArray","splice","removeClass","removeAll","pop","refresh","each","contents","nodeType","nodeValue","val","map","join","valueKey","f_datum","extend","source","query","process","processItems","texts","console","log","text","isFunction","success","then","when","updater","matcher","toLowerCase","indexOf","sorter","sort","highlighter","regex","RegExp","replace","typeaheadjs","isArray","datum","fn","apply","on","proxy","obj","event","removeAttr","focus","focusin","focusout","target","$inputWrapper","which","doGetCaretPosition","prev","next","$prevTag","$nextTag","textLength","ceil","maxLengthReached","keyPressEvent","found","lookupList","index","keyCombination","alt","hasOwnProperty","altKey","shift","shiftKey","ctrl","ctrlKey","substr","preventDefault","closest","destroy","off","removeData","show","input","elt","container","parentNode","tagsinput","arg1","arg2","arg3","results","retVal","Constructor","htmlEncodeContainer","html","oField","oSel","iCaretPos","document","selection","createRange","moveStart","selectionStart","window","jQuery"],"mappings":"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"}