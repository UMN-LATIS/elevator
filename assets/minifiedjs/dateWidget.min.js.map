{"version":3,"sources":["dateWidget.js"],"names":["modifyRange","event","$","this","val","closest","find","text","window","mozInnerScreenX","show","hide","parseDateString","dateString","length","Sugar","Date","create","isValid","dateNumeric","fromUTC","getTime","target","siblings","toLowerCase","indexOf","matches","replace","match","yearsAgo","bceDate","parseDate","document","ready","on","trigger"],"mappings":"AAIA,SAASA,YAAYC,GACA,GAAjBC,EAAEC,MAAMC,OACVF,EAAEC,MAAME,QAAQ,mBAAmBC,KAAK,eAAeC,KAAK,SAG7B,MAA1BC,OAAOC,gBACXP,EAAEC,MAAME,QAAQ,mBAAmBC,KAAK,cAAcI,OAGtDR,EAAEC,MAAME,QAAQ,mBAAmBC,KAAK,cAAcI,KAAK,QAAQ,iBAOpER,EAAEC,MAAME,QAAQ,mBAAmBC,KAAK,eAAeC,KAAK,QAC7B,MAA1BC,OAAOC,gBACXP,EAAEC,MAAME,QAAQ,mBAAmBC,KAAK,cAAcK,OAGtDT,EAAEC,MAAME,QAAQ,mBAAmBC,KAAK,cAAcK,KAAK,QAAQ,gBAUtE,SAASC,gBAAgBC,EAAYZ,GACpC,GAAGY,EAAWC,OAAS,EAAG,CACzB,GAAGC,MAAMC,KAAKC,OAAOJ,GAAYK,UAAW,CAC3C,IAAIC,EAAcJ,MAAMC,KAAKC,OAAOJ,EAAY,CAACO,SAAS,IAAOC,UAAU,IAI3E,OAHGpB,GACFC,EAAED,EAAMqB,QAAQC,SAAS,eAAenB,IAAIe,IAEtC,EAGP,IAA8C,GAA3CN,EAAWW,cAAcC,QAAQ,MAoBnC,OAAO,EAlBP,IACIC,GAFJb,EAAaA,EAAWc,QAAQ,KAAM,KAEbC,MADX,WAEd,GAAGF,EAAQZ,OAAO,EAAG,CACpB,IAAIe,EAAWH,EAAQ,IAC4B,GAAhDb,EAAWW,cAAcC,QAAQ,aACnCI,GAAsB,KAGvB,IAAIC,GAAY,EAAID,EAAW,SAAY,WAK3C,OAJG5B,GACFC,EAAED,EAAMqB,QAAQC,SAAS,eAAenB,IAAI0B,IAGtC,QAUV5B,EAAED,EAAMqB,QAAQC,SAAS,eAAenB,IAAI,IAI9C,SAAS2B,UAAU9B,GAElBW,gBADiBV,EAAEC,MAAMC,MACGH,GAG7BC,EAAE8B,UAAUC,OAAM,WACjB/B,EAAE8B,UAAUE,GAAI,SAAU,eAAgBlC,aAC1CE,EAAG,gBAAiBiC,QAAS,UAC7BjC,EAAE8B,UAAUE,GAAG,SAAU,YAAaH","file":"dateWidget.min.js","sourcesContent":["\n\n\n\nfunction modifyRange(event) {\n\tif($(this).val() == 1) {\n\t\t$(this).closest(\".widgetContents\").find('.startLabel').text(\"Start\");\n\t\t// Firefox fails to handle animation when items are off-screen.  Disable animation.\n\t\t// TODO: refactor this in a smarter way.\n\t\tif(!(window.mozInnerScreenX == null)) {\n\t\t\t$(this).closest(\".widgetContents\").find('.dateRange').show();\n\t\t}\n\t\telse {\n\t\t\t$(this).closest(\".widgetContents\").find('.dateRange').show('fast', function() {\n\n\t\t\t});\t\n\t\t}\n\t\t\n\t}\n\telse {\n\t\t$(this).closest(\".widgetContents\").find('.startLabel').text(\"Date\");\n\t\tif(!(window.mozInnerScreenX == null)) {\n\t\t\t$(this).closest(\".widgetContents\").find('.dateRange').hide();\n\t\t}\n\t\telse {\n\t\t\t$(this).closest(\".widgetContents\").find('.dateRange').hide('fast', function() {\n\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\n}\n\n\nfunction parseDateString(dateString, event) {\n\tif(dateString.length > 0) {\n\t\tif(Sugar.Date.create(dateString).isValid()) {\n\t\t\tvar dateNumeric = Sugar.Date.create(dateString, {fromUTC: true}).getTime()/1000;\n\t\t\tif(event) {\n\t\t\t\t$(event.target).siblings('.dateHidden').val(dateNumeric);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tif(dateString.toLowerCase().indexOf('bc') != -1) {\n\t\t\t\tdateString = dateString.replace(/,/g, '');\n\t\t\t\tvar pattern = /[0-9]+/g;\n\t\t\t\tvar matches = dateString.match(pattern);\n\t\t\t\tif(matches.length>0) {\n\t\t\t\t\tvar yearsAgo = matches[0];\n\t\t\t\t\tif(dateString.toLowerCase().indexOf('century') != -1) {\n\t\t\t\t\t\tyearsAgo = yearsAgo * 100;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar bceDate = (-1 * yearsAgo * 31556900) - (1970*31556900); // seconds in a year\n\t\t\t\t\tif(event) {\n\t\t\t\t\t\t$(event.target).siblings('.dateHidden').val(bceDate);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//TODO: make this trigger parse error instead!\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t$(event.target).siblings('.dateHidden').val(\"\");\n\t}\n}\n\nfunction parseDate(event) {\n\tvar dateString = $(this).val();\n\tparseDateString(dateString, event);\n}\n\n$(document).ready(function() {\n\t$(document).on( \"change\", \".rangeModify\", modifyRange );\n\t$( \".rangeModify\" ).trigger( \"change\" );\n\t$(document).on(\"change\", \".dateText\", parseDate);\n});\n"]}