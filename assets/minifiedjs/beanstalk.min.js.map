{"version":3,"sources":["beanstalk.js"],"names":["$","document","ready","__init","click","addServer","val","modal","window","location","href","on","find","this","attr","toggle","is","names","each","push","cookie","data","expires","length","result","addNewJob","fadeIn","hasClass","clearTimeout","timer","doAutoRefresh","toggleClass","reloader","contentType","cn","html","jn","formatJson","prop","text","clearTubes","host","port","myCoockie","server","alert","params","tubeName","tubeData","tubePriority","tubeDelay","tubeTtr","ajax","url","success","cleanFormNewJob","reload","type","dataType","error","console","log","retval","str","pos","strLen","indentStr","newLine","char","i","substring","nextChar","j","k","action","tplMain","tplBlock","secondary","Date","getTime","updateTable","setTimeout","td1","td2","il","l","innerText","innerHTML","textContent","r","$td1","color","css","background-color","animate","serialize"],"mappings":"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","file":"beanstalk.min.js","sourcesContent":["$(document).ready(\n        function() {\n\n            var timer;\n            var doAutoRefresh = false;\n\n            __init();\n\n            function __init() {\n                $('#servers-add .btn-info').click(function() {\n                    addServer($('#host').val(), $('#port').val());\n                    $(\"#host,#port\").val('');\n                    $('#servers-add').modal('hide');\n                    window.location.href = window.location.href;\n                    return false;\n                });\n                $('#addJob').on('click', function() {\n                    $('#modalAddJob').modal('toggle');\n                    return false;\n                });\n                $('#filter input[type=checkbox]').click(function() {\n                    $('table')\n                            .find('[name=' + $(this).attr('name') + ']')\n                            .toggle($(this).is(':checked'));\n                    var names = [];\n                    $('#filter input:checked').each(function() {\n                        names.push($(this).attr('name'));\n                    });\n                    $.cookie($('#filter').data('cookie'), names, {expires: 365});\n                    $('.row-full').attr('colspan', names.length);\n                });\n\n                $('#tubeSave').on('click', function() {\n                    var result = addNewJob();\n\n                    if (result == 'empty') {\n                        $('#tubeSaveAlert').fadeIn('fast');\n                    } else {\n                        $('#modalAddJob').modal('toggle');\n                    }\n\n                    return false;\n                });\n\n                $('#autoRefresh').on('click', function() {\n                    if (!$('#autoRefresh').hasClass('btn-success')) {\n                        reloader();\n                        $('#autoRefresh').toggleClass('btn-success');\n                        $('#autoRefresh i').toggleClass('icon-white');\n                    } else {\n                        clearTimeout(timer);\n                        doAutoRefresh = false;\n                        $('#autoRefresh').toggleClass('btn-success');\n                        $('#autoRefresh i').toggleClass('icon-white');\n                    }\n\n                    return false;\n                });\n\n                if (contentType == 'json') {\n                    var cn = $('pre code').html();\n                    var jn = formatJson(cn);\n                    $('pre code').html(jn);\n                }\n                $('#clearTubesSelect').on('click', function() {\n                    $('#clear-tubes input[type=checkbox]:regex(name,' + $(\"#tubeSelector\").val() + ')').prop('checked', true);\n                    $.cookie(\"tubeSelector\", $(\"#tubeSelector\").val(), {\n                        expires: 365\n                    });\n                    $('#clearTubes').text('Clear ' + $('#clear-tubes input[type=checkbox]:checked').length + ' selected tubes');\n                });\n                $('#clearTubes').on('click', function() {\n                    clearTubes();\n                });\n            }\n\n            function addServer(host, port) {\n                if (host) {\n                    myCoockie = $.cookie(\"beansServers\");\n                    if (myCoockie == null) {\n                        server = host + \":\" + port;\n                    } else {\n                        server = myCoockie + \";\" + host + \":\" + port;\n                    }\n                    $.cookie(\"beansServers\", server, {\n                        expires: 365\n                    });\n                } else {\n                    alert(\"Some fields empty..\");\n                }\n            }\n\n            function addNewJob() {\n\n                if (!$('#tubeName').val() || !$('#tubeData').val()) {\n                    return 'empty';\n                }\n\n                var params = {\n                    'tubeName': $('#tubeName').val(),\n                    'tubeData': $('#tubeData').val(),\n                    'tubePriority': $('#tubePriority').val(),\n                    'tubeDelay': $('#tubeDelay').val(),\n                    'tubeTtr': $('#tubeTtr').val()\n                }\n\n                $.ajax({\n                    'url': url + '?action=addjob',\n                    'data': params,\n                    'success': function(data) {\n                        var result = data.result;\n                        cleanFormNewJob();\n                        location.reload();\n                    },\n                    'type': 'POST',\n                    'dataType': 'json',\n                    'error': function() {\n                        console.log('error ajax...');\n                    }\n                });\n            }\n\n            function cleanFormNewJob() {\n                // $('#tubeName').val('');\n                $('#tubeData').val('');\n                $('#tubePriority').val('');\n                $('#tubeDelay').val('');\n                $('#tubeTtr').val('');\n            }\n\n            function formatJson(val) {\n\n                var retval = '';\n                var str = val;\n                var pos = 0;\n                var strLen = str.length;\n                var indentStr = '    ';\n                var newLine = \"\\n\";\n                var char = '';\n\n                for (var i = 0; i < strLen; i++) {\n                    char = str.substring(i, i + 1);\n                    nextChar = str.substring(i + 1, i + 2);\n                    if ((char == '}' || char == ']') && nextChar != newLine) {\n\n                        retval = retval + newLine;\n                        pos = pos - 1;\n                        for (var j = 0; j < pos; j++) {\n                            retval = retval + indentStr;\n                        }\n                    }\n                    retval = retval + char;\n\n                    if ((char == '{' || char == '[' || char == ',') && nextChar != newLine) {\n                        retval = retval + newLine;\n                        if (char == '{' || char == '[') {\n                            pos = pos + 1;\n                        }\n\n                        for (var k = 0; k < pos; k++) {\n                            retval = retval + indentStr;\n                        }\n                    }\n                }\n\n                return retval;\n\n            }\n\n            function reloader() {\n                var params = {\n                    'action': 'reloader',\n                    'tplMain': 'ajax',\n                    'tplBlock': 'allTubes',\n                    'secondary': new Date().getTime()\n                }\n                var res;\n\n                doAutoRefresh = true;\n                $.ajax({\n                    'url': url,\n                    'data': params,\n                    'success': function(data) {\n                        if (doAutoRefresh) {\n                            // wrapping all of this to prevent last update\n                            // after you turn it off\n                            var html = $('#idAllTubes').html();\n                            $('#idAllTubes').html(data);\n                            $('#idAllTubesCopy').html(html);\n                            updateTable();\n                            timer = setTimeout(reloader, 500);\n                        }\n                    },\n                    'type': 'GET',\n                    'dataType': 'html',\n                    'error': function() {\n                        console.log('error ajax...');\n                    }\n                });\n            }\n\n            function updateTable() {\n                var td1 = $('#idAllTubes table').find('td'), td2 = $('#idAllTubesCopy table').find('td');\n                for (i = 0, il = td1.length; i < il; i++) {\n                    if (typeof td2[i] === 'undefined' || typeof td1[i] === 'undefined') {                    // tube is missing\n                        continue;\n                    }\n                    var l = td1[i].innerText || td1[i].innerHTML || td1[i].textContent;\n                    var r = td2[i].innerText || td2[i].innerHTML || td2[i].textContent;\n                    if (l != r) {\n                        var $td1 = $(td1[i]), color = $td1.css('background-color');\n                        $td1.css({\n                            'background-color': '#afa'\n                        }).animate({\n                            'background-color': color\n                        }, 500);\n                    }\n                }\n            }\n\n            function clearTubes() {\n                if ($('#clear-tubes input[type=checkbox]:checked').length === 0) {\n                    return;\n                }\n\n                $.ajax({\n                    'url': url + '&action=clearTubes',\n                    'data': $('#clear-tubes input[type=checkbox]:checked').serialize(),\n                    'success': function(data) {\n                        var result = data.result;\n                        location.reload();\n                    },\n                    'type': 'POST',\n                    'error': function() {\n                        alert('error from ajax (clear might take a while, be patient)...');\n                    }\n                });\n            }\n        }\n);\n"],"sourceRoot":"/source/"}