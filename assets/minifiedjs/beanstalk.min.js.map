{"version":3,"file":"beanstalk.min.js","sources":["beanstalk.js"],"sourcesContent":["$(document).ready(\n        function() {\n\n            var timer;\n            var doAutoRefresh = false;\n\n            __init();\n\n            function __init() {\n                $('#servers-add .btn-info').click(function() {\n                    addServer($('#host').val(), $('#port').val());\n                    $(\"#host,#port\").val('');\n                    $('#servers-add').modal('hide');\n                    window.location.href = window.location.href;\n                    return false;\n                });\n                $('#addJob').on('click', function() {\n                    $('#modalAddJob').modal('toggle');\n                    return false;\n                });\n                $('#filter input[type=checkbox]').click(function() {\n                    $('table')\n                            .find('[name=' + $(this).attr('name') + ']')\n                            .toggle($(this).is(':checked'));\n                    var names = [];\n                    $('#filter input:checked').each(function() {\n                        names.push($(this).attr('name'));\n                    });\n                    $.cookie($('#filter').data('cookie'), names, {expires: 365});\n                    $('.row-full').attr('colspan', names.length);\n                });\n\n                $('#tubeSave').on('click', function() {\n                    var result = addNewJob();\n\n                    if (result == 'empty') {\n                        $('#tubeSaveAlert').fadeIn('fast');\n                    } else {\n                        $('#modalAddJob').modal('toggle');\n                    }\n\n                    return false;\n                });\n\n                $('#autoRefresh').on('click', function() {\n                    if (!$('#autoRefresh').hasClass('btn-success')) {\n                        reloader();\n                        $('#autoRefresh').toggleClass('btn-success');\n                        $('#autoRefresh i').toggleClass('icon-white');\n                    } else {\n                        clearTimeout(timer);\n                        doAutoRefresh = false;\n                        $('#autoRefresh').toggleClass('btn-success');\n                        $('#autoRefresh i').toggleClass('icon-white');\n                    }\n\n                    return false;\n                });\n\n                if (contentType == 'json') {\n                    var cn = $('pre code').html();\n                    var jn = formatJson(cn);\n                    $('pre code').html(jn);\n                }\n                $('#clearTubesSelect').on('click', function() {\n                    $('#clear-tubes input[type=checkbox]:regex(name,' + $(\"#tubeSelector\").val() + ')').prop('checked', true);\n                    $.cookie(\"tubeSelector\", $(\"#tubeSelector\").val(), {\n                        expires: 365\n                    });\n                    $('#clearTubes').text('Clear ' + $('#clear-tubes input[type=checkbox]:checked').length + ' selected tubes');\n                });\n                $('#clearTubes').on('click', function() {\n                    clearTubes();\n                });\n            }\n\n            function addServer(host, port) {\n                if (host) {\n                    myCoockie = $.cookie(\"beansServers\");\n                    if (myCoockie == null) {\n                        server = host + \":\" + port;\n                    } else {\n                        server = myCoockie + \";\" + host + \":\" + port;\n                    }\n                    $.cookie(\"beansServers\", server, {\n                        expires: 365\n                    });\n                } else {\n                    alert(\"Some fields empty..\");\n                }\n            }\n\n            function addNewJob() {\n\n                if (!$('#tubeName').val() || !$('#tubeData').val()) {\n                    return 'empty';\n                }\n\n                var params = {\n                    'tubeName': $('#tubeName').val(),\n                    'tubeData': $('#tubeData').val(),\n                    'tubePriority': $('#tubePriority').val(),\n                    'tubeDelay': $('#tubeDelay').val(),\n                    'tubeTtr': $('#tubeTtr').val()\n                }\n\n                $.ajax({\n                    'url': url + '?action=addjob',\n                    'data': params,\n                    'success': function(data) {\n                        var result = data.result;\n                        cleanFormNewJob();\n                        location.reload();\n                    },\n                    'type': 'POST',\n                    'dataType': 'json',\n                    'error': function() {\n                        console.log('error ajax...');\n                    }\n                });\n            }\n\n            function cleanFormNewJob() {\n                // $('#tubeName').val('');\n                $('#tubeData').val('');\n                $('#tubePriority').val('');\n                $('#tubeDelay').val('');\n                $('#tubeTtr').val('');\n            }\n\n            function formatJson(val) {\n\n                var retval = '';\n                var str = val;\n                var pos = 0;\n                var strLen = str.length;\n                var indentStr = '    ';\n                var newLine = \"\\n\";\n                var char = '';\n\n                for (var i = 0; i < strLen; i++) {\n                    char = str.substring(i, i + 1);\n                    nextChar = str.substring(i + 1, i + 2);\n                    if ((char == '}' || char == ']') && nextChar != newLine) {\n\n                        retval = retval + newLine;\n                        pos = pos - 1;\n                        for (var j = 0; j < pos; j++) {\n                            retval = retval + indentStr;\n                        }\n                    }\n                    retval = retval + char;\n\n                    if ((char == '{' || char == '[' || char == ',') && nextChar != newLine) {\n                        retval = retval + newLine;\n                        if (char == '{' || char == '[') {\n                            pos = pos + 1;\n                        }\n\n                        for (var k = 0; k < pos; k++) {\n                            retval = retval + indentStr;\n                        }\n                    }\n                }\n\n                return retval;\n\n            }\n\n            function reloader() {\n                var params = {\n                    'action': 'reloader',\n                    'tplMain': 'ajax',\n                    'tplBlock': 'allTubes',\n                    'secondary': new Date().getTime()\n                }\n                var res;\n\n                doAutoRefresh = true;\n                $.ajax({\n                    'url': url,\n                    'data': params,\n                    'success': function(data) {\n                        if (doAutoRefresh) {\n                            // wrapping all of this to prevent last update\n                            // after you turn it off\n                            var html = $('#idAllTubes').html();\n                            $('#idAllTubes').html(data);\n                            $('#idAllTubesCopy').html(html);\n                            updateTable();\n                            timer = setTimeout(reloader, 500);\n                        }\n                    },\n                    'type': 'GET',\n                    'dataType': 'html',\n                    'error': function() {\n                        console.log('error ajax...');\n                    }\n                });\n            }\n\n            function updateTable() {\n                var td1 = $('#idAllTubes table').find('td'), td2 = $('#idAllTubesCopy table').find('td');\n                for (i = 0, il = td1.length; i < il; i++) {\n                    if (typeof td2[i] === 'undefined' || typeof td1[i] === 'undefined') {                    // tube is missing\n                        continue;\n                    }\n                    var l = td1[i].innerText || td1[i].innerHTML || td1[i].textContent;\n                    var r = td2[i].innerText || td2[i].innerHTML || td2[i].textContent;\n                    if (l != r) {\n                        var $td1 = $(td1[i]), color = $td1.css('background-color');\n                        $td1.css({\n                            'background-color': '#afa'\n                        }).animate({\n                            'background-color': color\n                        }, 500);\n                    }\n                }\n            }\n\n            function clearTubes() {\n                if ($('#clear-tubes input[type=checkbox]:checked').length === 0) {\n                    return;\n                }\n\n                $.ajax({\n                    'url': url + '&action=clearTubes',\n                    'data': $('#clear-tubes input[type=checkbox]:checked').serialize(),\n                    'success': function(data) {\n                        var result = data.result;\n                        location.reload();\n                    },\n                    'type': 'POST',\n                    'error': function() {\n                        alert('error from ajax (clear might take a while, be patient)...');\n                    }\n                });\n            }\n        }\n);\n"],"names":["$","document","ready","timer","jn","doAutoRefresh","reloader","params","action","tplMain","tplBlock","secondary","Date","getTime","ajax","url","data","success","html","$td1","color","td1","find","td2","i","il","length","l","innerText","innerHTML","textContent","r","css","background-color","animate","setTimeout","type","dataType","error","console","log","click","host","port","val","myCoockie","cookie","server","expires","alert","modal","window","location","href","on","this","attr","toggle","is","names","each","push","tubeName","tubeData","tubePriority","tubeDelay","tubeTtr","result","reload","fadeIn","hasClass","clearTimeout","toggleClass","contentType","retval","str","pos","strLen","indentStr","newLine","char","substring","nextChar","j","k","prop","text","serialize"],"mappings":"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"}