{"version":3,"sources":["panzoom.js"],"names":["global","factory","define","amd","jQuery","exports","require","window","this","$","matrixEquals","first","second","i","length","createResetOptions","opts","options","range","animate","extend","Matrix","a","b","c","d","e","f","g","h","type","elements","Vector","x","y","z","Panzoom","elem","nodeType","error","contains","document","data","datakey","defaults","$elem","$set","$doc","ownerDocument","$parent","parent","isSVG","rsvg","test","namespaceURI","nodeName","toLowerCase","panning","_buildTransform","_transform","cssProps","transform","replace","rupper","_buildTransition","resetDimensions","$empty","self","each","name","enable","slice","Array","prototype","pointerEvents","PointerEvent","supportsInputEvent","input","createElement","setAttribute","oninput","rinline","floating","commaSpace","rmatrix","RegExp","matrix","isVector","inverse","determinant","events","pointertouch","eventNamespace","transition","cursor","disablePan","disableZoom","increment","minScale","maxScale","rangeStep","duration","easing","contain","constructor","instance","_initStyle","_bind","disabled","disable","_resetStyle","_unbind","isDisabled","destroy","removeData","container","width","innerWidth","height","innerHeight","dims","po","offset","getBoundingClientRect","left","top","margin","css","widthBorder","heightBorder","dimensions","reset","setMatrix","_origTransform","silent","_trigger","resetZoom","origMatrix","getMatrix","dValue","zoom","resetPan","pan","setTransform","method","getTransform","transformElem","exec","shift","marginW","marginH","diffW","diffH","scale","_checkDims","Math","abs","max","min","$zoomRange","val","join","isPanning","off","_transition","style","relative","focal","clientX","clientY","clientV","surfaceM","o","parentOffset","offsetM","scrollLeft","scrollTop","surfaceV","scaleBy","noSetRange","option","key","value","arguments","undefined","_setOptions","proxy","attr","styles","backface-visibility","transform-origin","overflow","position","ns","str_start","str_click","$reset","m","isFunction","touches","which","preventDefault","stopPropagation","_startMove","on","step","prop","$zoomIn","$zoomOut","add","startTransform","_getDistance","touch1","touch2","sqrt","pow","_getMiddle","event","triggerHandler","concat","call","move","moveEvent","endEvent","startDistance","startScale","startMiddle","startPageX","startPageY","original","origPageX","origPageY","panOptions","middle","diff","pageX","pageY","fn","panzoom","args","ret","charAt","apply","push"],"mappings":"CASC,SAASA,EAAQC,GAEK,kBAAXC,SAAyBA,OAAOC,IAC1CD,QAAS,SAAU,kBAAoB,SAASE,GAC/C,MAAOH,GAAQD,EAAQI,KAGK,gBAAZC,SACjBJ,EAAQD,EAAQM,QAAQ,UAAWA,QAAQ,mBAG3CL,EAAQD,EAAQA,EAAOI,SAEL,mBAAXG,QAAyBA,OAASC,KAAM,SAASD,EAAQE,GACjE,YAqCA,SAASC,GAAaC,EAAOC,GAE5B,IADA,GAAIC,GAAIF,EAAMG,SACND,GACP,IAAKF,EAAME,MAAQD,EAAOC,GACzB,OAAO,CAGT,QAAO,EAQR,QAASE,GAAmBC,GAC3B,GAAIC,IAAYC,OAAO,EAAMC,SAAS,EAMtC,OALoB,iBAATH,GACVC,EAAQE,QAAUH,EAElBP,EAAEW,OAAOH,EAASD,GAEZC,EAQR,QAASI,GAAOC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGhB,GACrB,UAAdJ,EAAEqB,KAAKR,GACVd,KAAKuB,WACHT,EAAE,IAAKA,EAAE,IAAKA,EAAE,IAChBA,EAAE,IAAKA,EAAE,IAAKA,EAAE,GACb,EAAO,EAAO,GAGnBd,KAAKuB,UACJT,EAAGC,EAAGC,EACNC,EAAGC,EAAGC,EACNC,GAAK,EAAGC,GAAK,EAAGhB,GAAK,GA4ExB,QAASmB,GAAOC,EAAGC,EAAGC,GACrB3B,KAAKuB,UAAaE,EAAGC,EAAGC,GAwBzB,QAASC,GAAQC,EAAMpB,GAGtB,KAAMT,eAAgB4B,IACrB,MAAO,IAAIA,GAAQC,EAAMpB,EAIJ,KAAlBoB,EAAKC,UACR7B,EAAE8B,MAAM,sCAEJ9B,EAAE+B,SAASC,EAAUJ,IACzB5B,EAAE8B,MAAM,mDAIT,IAAId,GAAIhB,EAAEiC,KAAKL,EAAMM,EACrB,IAAIlB,EACH,MAAOA,EAKRjB,MAAKS,QAAUA,EAAUR,EAAEW,UAAWgB,EAAQQ,SAAU3B,GACxDT,KAAK6B,KAAOA,CACZ,IAAIQ,GAAQrC,KAAKqC,MAAQpC,EAAE4B,EAC3B7B,MAAKsC,KAAO7B,EAAQ6B,MAAQ7B,EAAQ6B,KAAKhC,OAASG,EAAQ6B,KAAOD,EACjErC,KAAKuC,KAAOtC,EAAE4B,EAAKW,eAAiBP,GACpCjC,KAAKyC,QAAUJ,EAAMK,SAIrB1C,KAAK2C,MAAQC,EAAKC,KAAKhB,EAAKiB,eAAiD,QAAhCjB,EAAKkB,SAASC,cAE3DhD,KAAKiD,SAAU,EAKfjD,KAAKkD,kBAILlD,KAAKmD,YAAcnD,KAAK2C,OAAS1C,EAAEmD,SAASC,UAAUC,QAAQC,EAAQ,OAAOP,cAG7EhD,KAAKwD,mBAGLxD,KAAKyD,iBAGL,IAAIC,GAASzD,IACT0D,EAAO3D,IACXC,GAAE2D,MAAO,UAAW,WAAY,aAAc,UAAY,SAASvD,EAAGwD,GACrEF,EAAME,GAASpD,EAASoD,IAAUH,IAGnC1D,KAAK8D,SAGL7D,EAAEiC,KAAKL,EAAMM,EAASnC,MA5OvB,GAAIiC,GAAWlC,EAAOkC,SAClBE,EAAU,SACV4B,EAAQC,MAAMC,UAAUF,MACxBG,IAAkBnE,EAAOoE,aACzBC,EAAqB,WACxB,GAAIC,GAAQpC,EAASqC,cAAc,QAEnC,OADAD,GAAME,aAAa,UAAW,UACE,kBAAlBF,GAAMG,WAIjBjB,EAAS,WACTX,EAAO,sBACP6B,EAAU,UAEVC,EAAW,mBACXC,EAAa,WACbC,EAAU,GAAIC,QACjB,aACAH,EAAWC,EACXD,EAAWC,EACXD,EAAWC,EACXD,EAAWC,EACXD,EAAWC,EACXD,EAAW,OAmnCZ,OA5jCA7D,GAAOoD,WAMNxC,EAAG,SAASqD,GACX,GAAIC,GAAWD,YAAkBtD,GAE7BV,EAAId,KAAKuB,SACZR,EAAI+D,EAAOvD,QAEZ,OAAIwD,IAAyB,IAAbhE,EAAET,OAEV,GAAIkB,GACVV,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACrCD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACrCD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAE5BA,EAAET,SAAWQ,EAAER,OAElB,GAAIO,GACVC,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACrCD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACrCD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAErCD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACrCD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACrCD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAErCD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACrCD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GACrCD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,KAGhC,GAMRiE,QAAS,WACR,GAAI/D,GAAI,EAAIjB,KAAKiF,cAChBnE,EAAId,KAAKuB,QACV,OAAO,IAAIV,GACVI,GAAMH,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC7BG,IAAOH,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC9BG,GAAMH,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAE7BG,IAAOH,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC9BG,GAAMH,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC7BG,IAAOH,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAE9BG,GAAMH,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC7BG,IAAOH,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC9BG,GAAMH,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,MAO/BmE,YAAa,WACZ,GAAInE,GAAId,KAAKuB,QACb,OAAOT,GAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,MAelHU,EAAOyC,UAAU/C,EAAIL,EAAOoD,UAAU/C,EAAI,SAASb,GAClD,MAAOL,MAAKuB,SAAUlB,IAiFvBuB,EAAQgD,QAAUA,EAGlBhD,EAAQsD,OAASjF,EAAEkF,aAEnBvD,EAAQQ,UAKPgD,eAAgB,WAGhBC,YAAY,EAGZC,OAAQ,OAGRC,YAAY,EACZC,aAAa,EAIbC,UAAW,GAEXC,SAAU,GACVC,SAAU,EAIVC,UAAW,IAGXC,SAAU,IAEVC,OAAQ,cAMRC,SAAS,GAGVnE,EAAQqC,WACP+B,YAAapE,EAKbqE,SAAU,WACT,MAAOjG,OAMR8D,OAAQ,WAEP9D,KAAKkG,aACLlG,KAAKmG,QACLnG,KAAKoG,UAAW,GAMjBC,QAAS,WACRrG,KAAKoG,UAAW,EAChBpG,KAAKsG,cACLtG,KAAKuG,WAMNC,WAAY,WACX,MAAOxG,MAAKoG,UAMbK,QAAS,WACRzG,KAAKqG,UACLpG,EAAEyG,WAAW1G,KAAK6B,KAAMM,IAQzBsB,gBAAiB,WAEhB,GAAIhB,GAAUzC,KAAKyC,OACnBzC,MAAK2G,WACJC,MAAOnE,EAAQoE,aACfC,OAAQrE,EAAQsE,cAEjB,IAGIC,GAHAC,EAAKxE,EAAQyE,SACbrF,EAAO7B,KAAK6B,KACZQ,EAAQrC,KAAKqC,KAEbrC,MAAK2C,OACRqE,EAAOnF,EAAKsF,wBACZH,GACCI,KAAMJ,EAAKI,KAAOH,EAAGG,KACrBC,IAAKL,EAAKK,IAAMJ,EAAGI,IACnBT,MAAOI,EAAKJ,MACZE,OAAQE,EAAKF,OACbQ,QAAUF,KAAM,EAAGC,IAAK,KAGzBL,GACCI,KAAMnH,EAAEsH,IAAI1F,EAAM,QAAQ,IAAS,EACnCwF,IAAKpH,EAAEsH,IAAI1F,EAAM,OAAO,IAAS,EACjC+E,MAAOvE,EAAMwE,aACbC,OAAQzE,EAAM0E,cACdO,QACCD,IAAKpH,EAAEsH,IAAI1F,EAAM,aAAa,IAAS,EACvCuF,KAAMnH,EAAEsH,IAAI1F,EAAM,cAAc,IAAS,IAI5CmF,EAAKQ,YAAevH,EAAEsH,IAAI1F,EAAM,mBAAmB,GAAQ5B,EAAEsH,IAAI1F,EAAM,oBAAoB,IAAU,EACrGmF,EAAKS,aAAgBxH,EAAEsH,IAAI1F,EAAM,kBAAkB,GAAQ5B,EAAEsH,IAAI1F,EAAM,qBAAqB,IAAU,EACtG7B,KAAK0H,WAAaV,GAQnBW,MAAO,SAASlH,GACfA,EAAUF,EAAmBE,EAE7B,IAAIqE,GAAS9E,KAAK4H,UAAU5H,KAAK6H,eAAgBpH,EAC5CA,GAAQqH,QACZ9H,KAAK+H,SAAS,QAASjD,IAQzBkD,UAAW,SAASvH,GACnBA,EAAUF,EAAmBE,EAC7B,IAAIwH,GAAajI,KAAKkI,UAAUlI,KAAK6H,eACrCpH,GAAQ0H,OAASF,EAAY,GAC7BjI,KAAKoI,KAAKH,EAAW,GAAIxH,IAO1B4H,SAAU,SAAS5H,GAClB,GAAIwH,GAAajI,KAAKkI,UAAUlI,KAAK6H,eACrC7H,MAAKsI,IAAIL,EAAW,GAAIA,EAAW,GAAI1H,EAAmBE,KAO3D8H,aAAc,SAASlF,GAItB,IAHA,GAAImF,GAASxI,KAAK2C,MAAQ,OAAS,QAC/BL,EAAOtC,KAAKsC,KACZjC,EAAIiC,EAAKhC,OACPD,KACLJ,EAAEuI,GAAQlG,EAAKjC,GAAI,YAAagD,IAYlCoF,aAAc,SAASpF,GACtB,GAAIf,GAAOtC,KAAKsC,KACZoG,EAAgBpG,EAAK,EAezB,OAdIe,GACHrD,KAAKuI,aAAalF,GAGlBA,EAAYpD,EAAED,KAAK2C,MAAQ,OAAS,SAAS+F,EAAe,aAK3C,SAAdrF,GAAyBuB,EAAQ/B,KAAKQ,IAEzCrD,KAAKuI,aAAalF,EAAYpD,EAAEsH,IAAImB,EAAe,cAG7CrF,GAAa,QAQrB6E,UAAW,SAAS7E,GACnB,GAAIyB,GAASF,EAAQ+D,KAAKtF,GAAarD,KAAKyI,eAI5C,OAHI3D,IACHA,EAAO8D,QAED9D,IAAY,EAAG,EAAG,EAAG,EAAG,EAAG,IAcnC8C,UAAW,SAAS9C,EAAQrE,GAC3B,IAAIT,KAAKoG,SAAT,CACK3F,IAAWA,MAEM,gBAAXqE,KACVA,EAAS9E,KAAKkI,UAAUpD,GAEzB,IAAIkC,GAAML,EAAWkC,EAASC,EAASC,EAAOC,EAAO5B,EAAMC,EAAKT,EAAOE,EACnEmC,GAASnE,EAAO,GAChBrC,EAAUzC,KAAKyC,QACfsD,EAAqC,mBAApBtF,GAAQsF,QAA0BtF,EAAQsF,QAAU/F,KAAKS,QAAQsF,OAyDtF,OAtDIA,KACHiB,EAAOhH,KAAKkJ,aACZvC,EAAY3G,KAAK2G,UACjBC,EAAQI,EAAKJ,MAAQI,EAAKQ,YAC1BV,EAASE,EAAKF,OAASE,EAAKS,aAE5BoB,GAAYjC,EAAQuC,KAAKC,IAAIH,GAAUtC,EAAUC,OAAS,EAC1DkC,GAAYhC,EAASqC,KAAKC,IAAIH,GAAUtC,EAAUG,QAAU,EAC5DM,EAAOJ,EAAKI,KAAOJ,EAAKM,OAAOF,KAC/BC,EAAML,EAAKK,IAAML,EAAKM,OAAOD,IACb,WAAZtB,GACHgD,EAAQnC,EAAQD,EAAUC,MAAQA,EAAQD,EAAUC,MAAQ,EAC5DoC,EAAQlC,EAASH,EAAUG,OAASA,EAASH,EAAUG,OAAS,EAChE+B,IAAYlC,EAAUC,MAAQA,GAAS,EACvCkC,IAAYnC,EAAUG,OAASA,GAAU,EACzChC,EAAO,GAAKqE,KAAKE,IAAIF,KAAKG,IAAIxE,EAAO,GAAI+D,EAAUzB,IAAQyB,EAAUzB,EAAO2B,GAC5EjE,EAAO,GAAKqE,KAAKE,IAAIF,KAAKG,IAAIxE,EAAO,GAAIgE,EAAUzB,IAAOyB,EAAUzB,EAAM2B,EAAQhC,EAAKS,gBAGvFqB,GAAW9B,EAAKS,aAAe,EAC/BsB,EAAQpC,EAAUC,MAAQA,EAAQD,EAAUC,MAAQA,EAAQ,EAC5DoC,EAAQrC,EAAUG,OAASA,EAASH,EAAUG,OAASA,EAAS,EAE/B,WAA7BrE,EAAQ8E,IAAI,cAA8B9C,EAAQ5B,KAAK5C,EAAEsH,IAAIvH,KAAK6B,KAAM,YAG3EkH,EAAQ,EAFRF,EAAUC,EAAU,EAIrBhE,EAAO,GAAKqE,KAAKG,IAChBH,KAAKE,IAAIvE,EAAO,GAAI+D,EAAUzB,IAC7ByB,EAAUzB,EAAO2B,GAEnBjE,EAAO,GAAKqE,KAAKG,IAChBH,KAAKE,IAAIvE,EAAO,GAAIgE,EAAUzB,IAC7ByB,EAAUzB,EAAM2B,KAII,SAApBvI,EAAQE,SAEXX,KAAKqF,YAAY5E,EAAQE,SAGtBF,EAAQC,OACXV,KAAKuJ,WAAWC,IAAIP,GAIrBjJ,KAAKuI,aAAa,UAAYzD,EAAO2E,KAAK,KAAO,KAE5ChJ,EAAQqH,QACZ9H,KAAK+H,SAAS,SAAUjD,GAGlBA,IAMR4E,UAAW,WACV,MAAO1J,MAAKiD,SAOboC,WAAY,SAASsE,GACpB,GAAK3J,KAAK4J,YAIV,IAHA,GAAIvE,GAAasE,IAAQ3J,KAAKS,QAAQ4E,WAAa,OAASrF,KAAK4J,YAC7DtH,EAAOtC,KAAKsC,KACZjC,EAAIiC,EAAKhC,OACPD,KAEDJ,EAAE4J,MAAMvH,EAAKjC,GAAI,gBAAkBgF,GACtCpF,EAAE4J,MAAMvH,EAAKjC,GAAI,aAAcgF,IAelCiD,IAAK,SAAS7G,EAAGC,EAAGjB,GACnB,IAAIT,KAAKS,QAAQ8E,WAAjB,CACK9E,IAAWA,KAChB,IAAIqE,GAASrE,EAAQqE,MAChBA,KACJA,EAAS9E,KAAKkI,aAGXzH,EAAQqJ,WACXrI,IAAMqD,EAAO,GACbpD,IAAMoD,EAAO,IAEdA,EAAO,GAAKrD,EACZqD,EAAO,GAAKpD,EACZ1B,KAAK4H,UAAU9C,EAAQrE,GAClBA,EAAQqH,QACZ9H,KAAK+H,SAAS,MAAOjD,EAAO,GAAIA,EAAO,MAqBzCsD,KAAM,SAASa,EAAOzI,GAEA,gBAAVyI,IACVzI,EAAOyI,EACPA,EAAQ,MACGzI,IACXA,KAED,IAAIC,GAAUR,EAAEW,UAAWZ,KAAKS,QAASD,EAEzC,KAAIC,EAAQ+E,YAAZ,CACA,GAAI7E,IAAU,EACVmE,EAASrE,EAAQqE,QAAU9E,KAAKkI,WAGf,iBAAVe,KACVA,GAASnE,EAAO,GAAMrE,EAAQgF,WAAawD,EAAQ,GAAK,GACxDtI,GAAU,GAIPsI,EAAQxI,EAAQkF,SACnBsD,EAAQxI,EAAQkF,SACNsD,EAAQxI,EAAQiF,WAC1BuD,EAAQxI,EAAQiF,SAIjB,IAAIqE,GAAQtJ,EAAQsJ,KACpB,IAAIA,IAAUtJ,EAAQ8E,WAAY,CAGjC,GAAIyB,GAAOhH,KAAKkJ,aACZc,EAAUD,EAAMC,QAChBC,EAAUF,EAAME,OAEfjK,MAAK2C,QACTqH,IAAYhD,EAAKJ,MAAQI,EAAKQ,aAAe,EAC7CyC,IAAYjD,EAAKF,OAASE,EAAKS,cAAgB,EAEhD,IAAIyC,GAAU,GAAI1I,GAAOwI,EAASC,EAAS,GACvCE,EAAW,GAAItJ,GAAOiE,GAEtBsF,EAAIpK,KAAKqK,cAAgBrK,KAAKyC,QAAQyE,SACtCoD,EAAU,GAAIzJ,GAAO,EAAG,EAAGuJ,EAAEhD,KAAOpH,KAAKuC,KAAKgI,aAAc,EAAG,EAAGH,EAAE/C,IAAMrH,KAAKuC,KAAKiI,aACpFC,EAAWN,EAASnF,UAAUvD,EAAE6I,EAAQtF,UAAUvD,EAAEyI,IACpDQ,EAAUzB,EAAQnE,EAAO,EAC7BqF,GAAWA,EAAS1I,EAAE,GAAIZ,IAAS6J,EAAS,EAAG,EAAGA,EAAS,EAAG,KAC9DR,EAAUI,EAAQ7I,EAAE0I,EAAS1I,EAAEgJ,IAC/B3F,EAAO,IAAMA,EAAO,IAAMkF,EAAUE,EAAQhJ,EAAE,IAC9C4D,EAAO,IAAMA,EAAO,IAAMmF,EAAUC,EAAQhJ,EAAE,IAI/C4D,EAAO,GAAKmE,EACZnE,EAAO,GAA+B,gBAAnBrE,GAAQ0H,OAAsB1H,EAAQ0H,OAASc,EAGlEjJ,KAAK4H,UAAU9C,GACdnE,QAAoC,iBAApBF,GAAQE,QAAwBF,EAAQE,QAAUA,EAElED,OAAQD,EAAQkK,aAIZlK,EAAQqH,QACZ9H,KAAK+H,SAAS,OAAQjD,EAAO,GAAIrE,KASnCmK,OAAQ,SAASC,EAAKC,GACrB,GAAIrK,EACJ,KAAKoK,EAEJ,MAAO5K,GAAEW,UAAWZ,KAAKS,QAG1B,IAAmB,gBAARoK,GAAkB,CAC5B,GAAyB,IAArBE,UAAUzK,OACb,MAA+B0K,UAAxBhL,KAAKS,QAASoK,GACpB7K,KAAKS,QAASoK,GACd,IAEFpK,MACAA,EAASoK,GAAQC,MAEjBrK,GAAUoK,CAGX7K,MAAKiL,YAAYxK,IAOlBwK,YAAa,SAASxK,GACrBR,EAAE2D,KAAKnD,EAASR,EAAEiL,MAAM,SAASL,EAAKC,GACrC,OAAOD,GACN,IAAK,aACJ7K,KAAKsG,aAEN,KAAK,UACL,IAAK,WACL,IAAK,aACL,IAAK,SACL,IAAK,cACL,IAAK,UACL,IAAK,WACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,iBACJtG,KAAKuG,UAGP,OADAvG,KAAKS,QAASoK,GAAQC,EACfD,GACN,IAAK,aACJ7K,KAAKkG,YAEN,KAAK,UACL,IAAK,WACL,IAAK,aACL,IAAK,SAEJlG,KAAM6K,GAAQC,CAEf,KAAK,cACL,IAAK,UACL,IAAK,WACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,iBACJ9K,KAAKmG,OACL,MACD,KAAK,SACJlG,EAAE4J,MAAM7J,KAAK6B,KAAM,SAAUiJ,EAC7B,MACD,KAAK,WACJ9K,KAAKuJ,WAAW4B,KAAK,MAAOL,EAC5B,MACD,KAAK,WACJ9K,KAAKuJ,WAAW4B,KAAK,MAAOL,EAC5B,MACD,KAAK,YACJ9K,KAAKuJ,WAAW4B,KAAK,OAAQL,EAC7B,MACD,KAAK,iBACJ9K,KAAKkD,iBACL,MACD,KAAK,WACL,IAAK,SACJlD,KAAKwD,kBAEN,KAAK,aACJxD,KAAKqF,YACL,MACD,KAAK,OACAyF,YAAiB7K,IAAK6K,EAAMxK,SAC/BN,KAAKsC,KAAOwI,EAEZ9K,KAAKkG,aACLlG,KAAKkD,qBAGNlD,QAMJkG,WAAY,WACX,GAAIkF,IAEHC,sBAAuB,SAEvBC,mBAAoBtL,KAAK2C,MAAQ,MAAQ,UAGrC3C,MAAKS,QAAQ8E,aACjB6F,EAAO9F,OAAStF,KAAKS,QAAQ6E,QAE9BtF,KAAKsC,KAAKiF,IAAI6D,EAGd,IAAI3I,GAAUzC,KAAKyC,OAEfA,GAAQnC,SAAWL,EAAE8C,SAASN,EAAQ,GAAI,UAC7C2I,GACCG,SAAU,UAEqB,WAA5B9I,EAAQ8E,IAAI,cACf6D,EAAOI,SAAW,YAEnB/I,EAAQ8E,IAAI6D,KAOd9E,YAAa,WACZtG,KAAKqC,MAAMkF,KACVjC,OAAU,GACVD,WAAc,KAEfrF,KAAKyC,QAAQ8E,KACZgE,SAAY,GACZC,SAAY,MAOdrF,MAAO,WACN,GAAIxC,GAAO3D,KACPS,EAAUT,KAAKS,QACfgL,EAAKhL,EAAQ2E,eACbsG,EAAYxH,EAAgB,cAAgBuH,EAAM,aAAeA,EAAK,aAAeA,EACrFE,EAAYzH,EAAgB,YAAcuH,EAAM,WAAaA,EAAK,SAAWA,EAC7EvG,KACA0G,EAAS5L,KAAK4L,OACdrC,EAAavJ,KAAKuJ,UAsDtB,IAnDAtJ,EAAE2D,MAAO,QAAS,SAAU,OAAQ,MAAO,MAAO,SAAW,WAC5D,GAAIiI,GAAIpL,EAAS,KAAOT,KACpBC,GAAE6L,WAAWD,KAChB3G,EAAQ,UAAYlF,KAAKgD,cAAgByI,GAAOI,KAM7CpL,EAAQ8E,YAAe9E,EAAQ+E,cACnCN,EAAQwG,GAAc,SAASxK,GAC9B,GAAI6K,IACW,eAAX7K,EAAEI,OAEJyK,EAAU7K,EAAE6K,WACS,IAAnBA,EAAQzL,QAAiBG,EAAQ8E,aAAkC,IAAnBwG,EAAQzL,OAE1DG,EAAQ8E,YAA0B,IAAZrE,EAAE8K,SAEzB9K,EAAE+K,iBACF/K,EAAEgL,kBACFvI,EAAKwI,WAAWjL,EAAG6K,MAItB/L,KAAKqC,MAAM+J,GAAGlH,GAGV0G,EAAOtL,QACVsL,EAAOQ,GAAGT,EAAW,SAASzK,GAC7BA,EAAE+K,iBACFtI,EAAKgE,UAKH4B,EAAWjJ,QACdiJ,EAAW4B,MAGVkB,KAAM5L,EAAQmF,YAAchE,EAAQQ,SAASwD,WAC5C2D,EAAW4B,KAAK,SAChB1K,EAAQmF,UACT0D,IAAK7I,EAAQiF,SACb2D,IAAK5I,EAAQkF,WACX2G,MACFxB,MAAO9K,KAAKkI,YAAY,MAKtBzH,EAAQ+E,YAAZ,CAIA,GAAI+G,GAAUvM,KAAKuM,QACfC,EAAWxM,KAAKwM,QAIhBD,GAAQjM,QAAUkM,EAASlM,SAE9BiM,EAAQH,GAAGT,EAAW,SAASzK,GAC9BA,EAAE+K,iBACFtI,EAAKyE,SAENoE,EAASJ,GAAGT,EAAW,SAASzK,GAC/BA,EAAE+K,iBACFtI,EAAKyE,MAAK,MAIRmB,EAAWjJ,SACd4E,KAEAA,GAAShB,EAAgB,cAAgB,aAAeuH,GAAO,WAC9D9H,EAAK0B,YAAW,IAIjBH,GAASd,EAAqB,QAAU,UAAYqH,GAAO,WAC1D9H,EAAKyE,MAAMpI,KAAK8K,OAASH,YAAY,KAEtCpB,EAAW6C,GAAGlH,MAOhBqB,QAAS,WACRvG,KAAKqC,MACHoK,IAAIzM,KAAKuM,SACTE,IAAIzM,KAAKwM,UACTC,IAAIzM,KAAK4L,QACTjC,IAAI3J,KAAKS,QAAQ2E,iBAMpBlC,gBAAiB,WAIhB,MAAOlD,MAAK6H,eAAiB7H,KAAKyI,aAAazI,KAAKS,QAAQiM,iBAO7DlJ,iBAAkB,WACjB,GAAIxD,KAAKmD,WAAY,CACpB,GAAI1C,GAAUT,KAAKS,OACnBT,MAAK4J,YAAc5J,KAAKmD,WAAa,IAAM1C,EAAQoF,SAAW,MAAQpF,EAAQqF,SAOhFoD,WAAY,WACX,GAAIlC,GAAOhH,KAAK0H,UAKhB,OAHKV,GAAKJ,OAAUI,EAAKF,QACxB9G,KAAKyD,kBAECzD,KAAK0H,YASbiF,aAAc,SAASZ,GACtB,GAAIa,GAASb,EAAQ,GACjBc,EAASd,EAAQ,EACrB,OAAO5C,MAAK2D,KAAK3D,KAAK4D,IAAI5D,KAAKC,IAAIyD,EAAO7C,QAAU4C,EAAO5C,SAAU,GAAKb,KAAK4D,IAAI5D,KAAKC,IAAIyD,EAAO5C,QAAU2C,EAAO3C,SAAU,KAO/H+C,WAAY,SAASjB,GACpB,GAAIa,GAASb,EAAQ,GACjBc,EAASd,EAAQ,EACrB,QACC/B,SAAW6C,EAAO7C,QAAU4C,EAAO5C,SAAW,EAAK4C,EAAO5C,QAC1DC,SAAW4C,EAAO5C,QAAU2C,EAAO3C,SAAW,EAAK2C,EAAO3C,UAU5DlC,SAAU,SAAUkF,GACE,gBAAVA,KACVA,EAAQ,UAAYA,GAErBjN,KAAKqC,MAAM6K,eAAeD,GAAQjN,MAAMmN,OAAOpJ,EAAMqJ,KAAKrC,UAAW,MAStEoB,WAAY,SAASc,EAAOlB,GAC3B,GAAIsB,GAAMC,EAAWC,EACpBC,EAAeC,EAAYC,EAC3BC,EAAYC,EACTjK,EAAO3D,KACPS,EAAUT,KAAKS,QACfgL,EAAKhL,EAAQ2E,eACbN,EAAS9E,KAAKkI,YACd2F,EAAW/I,EAAOf,MAAM,GACxB+J,GAAaD,EAAS,GACtBE,GAAaF,EAAS,GACtBG,GAAelJ,OAAQA,EAAQnE,QAAS,OAGxCuD,IACHoJ,EAAY,cACZC,EAAW,aACc,eAAfN,EAAM3L,MAChBgM,EAAY,YACZC,EAAW,aAEXD,EAAY,YACZC,EAAW,WAIZD,GAAa7B,EACb8B,GAAY9B,EAGZzL,KAAKqF,YAAW,GAGhBrF,KAAKiD,SAAU,EAGfjD,KAAK+H,SAAS,QAASkF,EAAOlB,GAE1BA,GAA8B,IAAnBA,EAAQzL,QACtBkN,EAAgBxN,KAAK2M,aAAaZ,GAClC0B,GAAc3I,EAAO,GACrB4I,EAAc1N,KAAKgN,WAAWjB,GAC9BsB,EAAO,SAASnM,GACfA,EAAE+K,gBAGF,IAAIgC,GAAStK,EAAKqJ,WAAWjB,EAAU7K,EAAE6K,SACrCmC,EAAOvK,EAAKgJ,aAAaZ,GAAWyB,CAGxC7J,GAAKyE,KAAK8F,GAAQzN,EAAQgF,UAAY,KAAOgI,GAC5C1D,MAAOkE,EACPnJ,OAAQA,EACRnE,SAAS,IAIVgD,EAAK2E,KACHxD,EAAO,GAAKmJ,EAAOjE,QAAU0D,EAAY1D,SACzClF,EAAO,GAAKmJ,EAAOhE,QAAUyD,EAAYzD,QAC1C+D,GAEDN,EAAcO,KAGfN,EAAaV,EAAMkB,MACnBP,EAAaX,EAAMmB,MAMnBf,EAAO,SAASnM,GACfA,EAAE+K,iBACFtI,EAAK2E,IACJwF,EAAY5M,EAAEiN,MAAQR,EACtBI,EAAY7M,EAAEkN,MAAQR,EACtBI,KAMH/N,EAAEgC,GACA0H,IAAI8B,GACJW,GAAGkB,EAAWD,GACdjB,GAAGmB,EAAU,SAASrM,GACtBA,EAAE+K,iBAEFhM,EAAED,MAAM2J,IAAI8B,GACZ9H,EAAKV,SAAU,EAIf/B,EAAEI,KAAO,aACTqC,EAAKoE,SAAS7G,EAAG4D,GAAS5E,EAAa4E,EAAQ+I,QAMnD5N,EAAE2B,QAAUA,EAQZ3B,EAAEoO,GAAGC,QAAU,SAAS7N,GACvB,GAAIwF,GAAUsI,EAAM1C,EAAG2C,CAGvB,OAAuB,gBAAZ/N,IACV+N,KACAD,EAAOxK,EAAMqJ,KAAKrC,UAAW,GAC7B/K,KAAK4D,KAAK,WACTqC,EAAWhG,EAAEiC,KAAKlC,KAAMmC,GAEnB8D,EAI4B,MAAtBxF,EAAQgO,OAAO,IACY,mBAA7B5C,EAAI5F,EAAUxF,KAEYuK,UAAjCa,EAAIA,EAAE6C,MAAMzI,EAAUsI,KAEvBC,EAAIG,KAAK9C,GART2C,EAAIG,KAAK3D,UAeJwD,EAAIlO,OACM,IAAfkO,EAAIlO,OAAekO,EAAI,GAAKA,EAC7BxO,MAGKA,KAAK4D,KAAK,WAAa,GAAIhC,GAAQ5B,KAAMS,MAG1CmB","file":"panzoom.min.js","sourcesContent":["/**\n * @license jquery.panzoom.js v@VERSION\n * Updated: @DATE\n * Add pan and zoom functionality to any element\n * Copyright (c) 2014 timmy willison\n * Released under the MIT license\n * https://github.com/timmywil/jquery.panzoom/blob/master/MIT-License.txt\n */\n\n(function(global, factory) {\n\t// AMD\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine([ 'jquery', './pointertouch' ], function(jQuery) {\n\t\t\treturn factory(global, jQuery);\n\t\t});\n\t// CommonJS/Browserify\n\t} else if (typeof exports === 'object') {\n\t\tfactory(global, require('jquery'), require('./pointertouch'));\n\t// Global\n\t} else {\n\t\tfactory(global, global.jQuery);\n\t}\n}(typeof window !== 'undefined' ? window : this, function(window, $) {\n\t'use strict';\n\n\t// INSERT FIXHOOK\n\n\tvar document = window.document;\n\tvar datakey = '__pz__';\n\tvar slice = Array.prototype.slice;\n\tvar pointerEvents = !!window.PointerEvent;\n\tvar supportsInputEvent = (function() {\n\t\tvar input = document.createElement('input');\n\t\tinput.setAttribute('oninput', 'return');\n\t\treturn typeof input.oninput === 'function';\n\t})();\n\n\t// Regex\n\tvar rupper = /([A-Z])/g;\n\tvar rsvg = /^http:[\\w\\.\\/]+svg$/;\n\tvar rinline = /^inline/;\n\n\tvar floating = '(\\\\-?[\\\\d\\\\.e]+)';\n\tvar commaSpace = '\\\\,?\\\\s*';\n\tvar rmatrix = new RegExp(\n\t\t'^matrix\\\\(' +\n\t\tfloating + commaSpace +\n\t\tfloating + commaSpace +\n\t\tfloating + commaSpace +\n\t\tfloating + commaSpace +\n\t\tfloating + commaSpace +\n\t\tfloating + '\\\\)$'\n\t);\n\n\t/**\n\t * Utility for determing transform matrix equality\n\t * Checks backwards to test translation first\n\t * @param {Array} first\n\t * @param {Array} second\n\t */\n\tfunction matrixEquals(first, second) {\n\t\tvar i = first.length;\n\t\twhile(--i) {\n\t\t\tif (+first[i] !== +second[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Creates the options object for reset functions\n\t * @param {Boolean|Object} opts See reset methods\n\t * @returns {Object} Returns the newly-created options object\n\t */\n\tfunction createResetOptions(opts) {\n\t\tvar options = { range: true, animate: true };\n\t\tif (typeof opts === 'boolean') {\n\t\t\toptions.animate = opts;\n\t\t} else {\n\t\t\t$.extend(options, opts);\n\t\t}\n\t\treturn options;\n\t}\n\n\t/**\n\t * Represent a transformation matrix with a 3x3 matrix for calculations\n\t * Matrix functions adapted from Louis Remi's jQuery.transform (https://github.com/louisremi/jquery.transform.js)\n\t * @param {Array|Number} a An array of six values representing a 2d transformation matrix\n\t */\n\tfunction Matrix(a, b, c, d, e, f, g, h, i) {\n\t\tif ($.type(a) === 'array') {\n\t\t\tthis.elements = [\n\t\t\t\t+a[0], +a[2], +a[4],\n\t\t\t\t+a[1], +a[3], +a[5],\n\t\t\t\t    0,     0,     1\n\t\t\t];\n\t\t} else {\n\t\t\tthis.elements = [\n\t\t\t\ta, b, c,\n\t\t\t\td, e, f,\n\t\t\t\tg || 0, h || 0, i || 1\n\t\t\t];\n\t\t}\n\t}\n\n\tMatrix.prototype = {\n\t\t/**\n\t\t * Multiply a 3x3 matrix by a similar matrix or a vector\n\t\t * @param {Matrix|Vector} matrix\n\t\t * @return {Matrix|Vector} Returns a vector if multiplying by a vector\n\t\t */\n\t\tx: function(matrix) {\n\t\t\tvar isVector = matrix instanceof Vector;\n\n\t\t\tvar a = this.elements,\n\t\t\t\tb = matrix.elements;\n\n\t\t\tif (isVector && b.length === 3) {\n\t\t\t\t// b is actually a vector\n\t\t\t\treturn new Vector(\n\t\t\t\t\ta[0] * b[0] + a[1] * b[1] + a[2] * b[2],\n\t\t\t\t\ta[3] * b[0] + a[4] * b[1] + a[5] * b[2],\n\t\t\t\t\ta[6] * b[0] + a[7] * b[1] + a[8] * b[2]\n\t\t\t\t);\n\t\t\t} else if (b.length === a.length) {\n\t\t\t\t// b is a 3x3 matrix\n\t\t\t\treturn new Matrix(\n\t\t\t\t\ta[0] * b[0] + a[1] * b[3] + a[2] * b[6],\n\t\t\t\t\ta[0] * b[1] + a[1] * b[4] + a[2] * b[7],\n\t\t\t\t\ta[0] * b[2] + a[1] * b[5] + a[2] * b[8],\n\n\t\t\t\t\ta[3] * b[0] + a[4] * b[3] + a[5] * b[6],\n\t\t\t\t\ta[3] * b[1] + a[4] * b[4] + a[5] * b[7],\n\t\t\t\t\ta[3] * b[2] + a[4] * b[5] + a[5] * b[8],\n\n\t\t\t\t\ta[6] * b[0] + a[7] * b[3] + a[8] * b[6],\n\t\t\t\t\ta[6] * b[1] + a[7] * b[4] + a[8] * b[7],\n\t\t\t\t\ta[6] * b[2] + a[7] * b[5] + a[8] * b[8]\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false; // fail\n\t\t},\n\t\t/**\n\t\t * Generates an inverse of the current matrix\n\t\t * @returns {Matrix}\n\t\t */\n\t\tinverse: function() {\n\t\t\tvar d = 1 / this.determinant(),\n\t\t\t\ta = this.elements;\n\t\t\treturn new Matrix(\n\t\t\t\td * ( a[8] * a[4] - a[7] * a[5]),\n\t\t\t\td * (-(a[8] * a[1] - a[7] * a[2])),\n\t\t\t\td * ( a[5] * a[1] - a[4] * a[2]),\n\n\t\t\t\td * (-(a[8] * a[3] - a[6] * a[5])),\n\t\t\t\td * ( a[8] * a[0] - a[6] * a[2]),\n\t\t\t\td * (-(a[5] * a[0] - a[3] * a[2])),\n\n\t\t\t\td * ( a[7] * a[3] - a[6] * a[4]),\n\t\t\t\td * (-(a[7] * a[0] - a[6] * a[1])),\n\t\t\t\td * ( a[4] * a[0] - a[3] * a[1])\n\t\t\t);\n\t\t},\n\t\t/**\n\t\t * Calculates the determinant of the current matrix\n\t\t * @returns {Number}\n\t\t */\n\t\tdeterminant: function() {\n\t\t\tvar a = this.elements;\n\t\t\treturn a[0] * (a[8] * a[4] - a[7] * a[5]) - a[3] * (a[8] * a[1] - a[7] * a[2]) + a[6] * (a[5] * a[1] - a[4] * a[2]);\n\t\t}\n\t};\n\n\t/**\n\t * Create a vector containing three values\n\t */\n\tfunction Vector(x, y, z) {\n\t\tthis.elements = [ x, y, z ];\n\t}\n\n\t/**\n\t * Get the element at zero-indexed index i\n\t * @param {Number} i\n\t */\n\tVector.prototype.e = Matrix.prototype.e = function(i) {\n\t\treturn this.elements[ i ];\n\t};\n\n\t/**\n\t * Create a Panzoom object for a given element\n\t * @constructor\n\t * @param {Element} elem - Element to use pan and zoom\n\t * @param {Object} [options] - An object literal containing options to override default options\n\t *  (See Panzoom.defaults for ones not listed below)\n\t * @param {jQuery} [options.$zoomIn] - zoom in buttons/links collection (you can also bind these yourself\n\t *  e.g. $button.on('click', function(e) { e.preventDefault(); $elem.panzoom('zoomIn'); });)\n\t * @param {jQuery} [options.$zoomOut] - zoom out buttons/links collection on which to bind zoomOut\n\t * @param {jQuery} [options.$zoomRange] - zoom in/out with this range control\n\t * @param {jQuery} [options.$reset] - Reset buttons/links collection on which to bind the reset method\n\t * @param {Function} [options.on[Start|Change|Zoom|Pan|End|Reset] - Optional callbacks for panzoom events\n\t */\n\tfunction Panzoom(elem, options) {\n\n\t\t// Allow instantiation without `new` keyword\n\t\tif (!(this instanceof Panzoom)) {\n\t\t\treturn new Panzoom(elem, options);\n\t\t}\n\n\t\t// Sanity checks\n\t\tif (elem.nodeType !== 1) {\n\t\t\t$.error('Panzoom called on non-Element node');\n\t\t}\n\t\tif (!$.contains(document, elem)) {\n\t\t\t$.error('Panzoom element must be attached to the document');\n\t\t}\n\n\t\t// Don't remake\n\t\tvar d = $.data(elem, datakey);\n\t\tif (d) {\n\t\t\treturn d;\n\t\t}\n\n\t\t// Extend default with given object literal\n\t\t// Each instance gets its own options\n\t\tthis.options = options = $.extend({}, Panzoom.defaults, options);\n\t\tthis.elem = elem;\n\t\tvar $elem = this.$elem = $(elem);\n\t\tthis.$set = options.$set && options.$set.length ? options.$set : $elem;\n\t\tthis.$doc = $(elem.ownerDocument || document);\n\t\tthis.$parent = $elem.parent();\n\n\t\t// This is SVG if the namespace is SVG\n\t\t// However, while <svg> elements are SVG, we want to treat those like other elements\n\t\tthis.isSVG = rsvg.test(elem.namespaceURI) && elem.nodeName.toLowerCase() !== 'svg';\n\n\t\tthis.panning = false;\n\n\t\t// Save the original transform value\n\t\t// Save the prefixed transform style key\n\t\t// Set the starting transform\n\t\tthis._buildTransform();\n\n\t\t// Build the appropriately-prefixed transform style property name\n\t\t// De-camelcase\n\t\tthis._transform = !this.isSVG && $.cssProps.transform.replace(rupper, '-$1').toLowerCase();\n\n\t\t// Build the transition value\n\t\tthis._buildTransition();\n\n\t\t// Build containment dimensions\n\t\tthis.resetDimensions();\n\n\t\t// Add zoom and reset buttons to `this`\n\t\tvar $empty = $();\n\t\tvar self = this;\n\t\t$.each([ '$zoomIn', '$zoomOut', '$zoomRange', '$reset' ], function(i, name) {\n\t\t\tself[ name ] = options[ name ] || $empty;\n\t\t});\n\n\t\tthis.enable();\n\n\t\t// Save the instance\n\t\t$.data(elem, datakey, this);\n\t}\n\n\t// Attach regex for possible use (immutable)\n\tPanzoom.rmatrix = rmatrix;\n\n\t// Container for event names\n\tPanzoom.events = $.pointertouch;\n\n\tPanzoom.defaults = {\n\t\t// Should always be non-empty\n\t\t// Used to bind jQuery events without collisions\n\t\t// A guid is not added here as different instantiations/versions of panzoom\n\t\t// on the same element is not supported, so don't do it.\n\t\teventNamespace: '.panzoom',\n\n\t\t// Whether or not to transition the scale\n\t\ttransition: true,\n\n\t\t// Default cursor style for the element\n\t\tcursor: 'move',\n\n\t\t// There may be some use cases for zooming without panning or vice versa\n\t\tdisablePan: false,\n\t\tdisableZoom: false,\n\n\t\t// The increment at which to zoom\n\t\t// adds/subtracts to the scale each time zoomIn/Out is called\n\t\tincrement: 0.3,\n\n\t\tminScale: 0.4,\n\t\tmaxScale: 5,\n\n\t\t// The default step for the range input\n\t\t// Precendence: default < HTML attribute < option setting\n\t\trangeStep: 0.05,\n\n\t\t// Animation duration (ms)\n\t\tduration: 200,\n\t\t// CSS easing used for scale transition\n\t\teasing: 'ease-in-out',\n\n\t\t// Indicate that the element should be contained within it's parent when panning\n\t\t// Note: this does not affect zooming outside of the parent\n\t\t// Set this value to 'invert' to only allow panning outside of the parent element (basically the opposite of the normal use of contain)\n\t\t// 'invert' is useful for a large panzoom element where you don't want to show anything behind it\n\t\tcontain: false\n\t};\n\n\tPanzoom.prototype = {\n\t\tconstructor: Panzoom,\n\n\t\t/**\n\t\t * @returns {Panzoom} Returns the instance\n\t\t */\n\t\tinstance: function() {\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Enable or re-enable the panzoom instance\n\t\t */\n\t\tenable: function() {\n\t\t\t// Unbind first\n\t\t\tthis._initStyle();\n\t\t\tthis._bind();\n\t\t\tthis.disabled = false;\n\t\t},\n\n\t\t/**\n\t\t * Disable panzoom\n\t\t */\n\t\tdisable: function() {\n\t\t\tthis.disabled = true;\n\t\t\tthis._resetStyle();\n\t\t\tthis._unbind();\n\t\t},\n\n\t\t/**\n\t\t * @returns {Boolean} Returns whether the current panzoom instance is disabled\n\t\t */\n\t\tisDisabled: function() {\n\t\t\treturn this.disabled;\n\t\t},\n\n\t\t/**\n\t\t * Destroy the panzoom instance\n\t\t */\n\t\tdestroy: function() {\n\t\t\tthis.disable();\n\t\t\t$.removeData(this.elem, datakey);\n\t\t},\n\n\t\t/**\n\t\t * Builds the restricing dimensions from the containment element\n\t\t * Also used with focal points\n\t\t * Call this method whenever the dimensions of the element or parent are changed\n\t\t */\n\t\tresetDimensions: function() {\n\t\t\t// Reset container properties\n\t\t\tvar $parent = this.$parent;\n\t\t\tthis.container = {\n\t\t\t\twidth: $parent.innerWidth(),\n\t\t\t\theight: $parent.innerHeight()\n\t\t\t};\n\t\t\tvar po = $parent.offset();\n\t\t\tvar elem = this.elem;\n\t\t\tvar $elem = this.$elem;\n\t\t\tvar dims;\n\t\t\tif (this.isSVG) {\n\t\t\t\tdims = elem.getBoundingClientRect();\n\t\t\t\tdims = {\n\t\t\t\t\tleft: dims.left - po.left,\n\t\t\t\t\ttop: dims.top - po.top,\n\t\t\t\t\twidth: dims.width,\n\t\t\t\t\theight: dims.height,\n\t\t\t\t\tmargin: { left: 0, top: 0 }\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tdims = {\n\t\t\t\t\tleft: $.css(elem, 'left', true) || 0,\n\t\t\t\t\ttop: $.css(elem, 'top', true) || 0,\n\t\t\t\t\twidth: $elem.innerWidth(),\n\t\t\t\t\theight: $elem.innerHeight(),\n\t\t\t\t\tmargin: {\n\t\t\t\t\t\ttop: $.css(elem, 'marginTop', true) || 0,\n\t\t\t\t\t\tleft: $.css(elem, 'marginLeft', true) || 0\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tdims.widthBorder = ($.css(elem, 'borderLeftWidth', true) + $.css(elem, 'borderRightWidth', true)) || 0;\n\t\t\tdims.heightBorder = ($.css(elem, 'borderTopWidth', true) + $.css(elem, 'borderBottomWidth', true)) || 0;\n\t\t\tthis.dimensions = dims;\n\t\t},\n\n\t\t/**\n\t\t * Return the element to it's original transform matrix\n\t\t * @param {Boolean} [options] If a boolean is passed, animate the reset (default: true). If an options object is passed, simply pass that along to setMatrix.\n\t\t * @param {Boolean} [options.silent] Silence the reset event\n\t\t */\n\t\treset: function(options) {\n\t\t\toptions = createResetOptions(options);\n\t\t\t// Reset the transform to its original value\n\t\t\tvar matrix = this.setMatrix(this._origTransform, options);\n\t\t\tif (!options.silent) {\n\t\t\t\tthis._trigger('reset', matrix);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Only resets zoom level\n\t\t * @param {Boolean|Object} [options] Whether to animate the reset (default: true) or an object of options to pass to zoom()\n\t\t */\n\t\tresetZoom: function(options) {\n\t\t\toptions = createResetOptions(options);\n\t\t\tvar origMatrix = this.getMatrix(this._origTransform);\n\t\t\toptions.dValue = origMatrix[ 3 ];\n\t\t\tthis.zoom(origMatrix[0], options);\n\t\t},\n\n\t\t/**\n\t\t * Only reset panning\n\t\t * @param {Boolean|Object} [options] Whether to animate the reset (default: true) or an object of options to pass to pan()\n\t\t */\n\t\tresetPan: function(options) {\n\t\t\tvar origMatrix = this.getMatrix(this._origTransform);\n\t\t\tthis.pan(origMatrix[4], origMatrix[5], createResetOptions(options));\n\t\t},\n\n\t\t/**\n\t\t * Sets a transform on the $set\n\t\t * @param {String} transform\n\t\t */\n\t\tsetTransform: function(transform) {\n\t\t\tvar method = this.isSVG ? 'attr' : 'style';\n\t\t\tvar $set = this.$set;\n\t\t\tvar i = $set.length;\n\t\t\twhile(i--) {\n\t\t\t\t$[method]($set[i], 'transform', transform);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Retrieving the transform is different for SVG\n\t\t *  (unless a style transform is already present)\n\t\t * Uses the $set collection for retrieving the transform\n\t\t * @param {String} [transform] Pass in an transform value (like 'scale(1.1)')\n\t\t *  to have it formatted into matrix format for use by Panzoom\n\t\t * @returns {String} Returns the current transform value of the element\n\t\t */\n\t\tgetTransform: function(transform) {\n\t\t\tvar $set = this.$set;\n\t\t\tvar transformElem = $set[0];\n\t\t\tif (transform) {\n\t\t\t\tthis.setTransform(transform);\n\t\t\t} else {\n\t\t\t\t// Retrieve the transform\n\t\t\t\ttransform = $[this.isSVG ? 'attr' : 'style'](transformElem, 'transform');\n\t\t\t}\n\n\t\t\t// Convert any transforms set by the user to matrix format\n\t\t\t// by setting to computed\n\t\t\tif (transform !== 'none' && !rmatrix.test(transform)) {\n\t\t\t\t// Get computed and set for next time\n\t\t\t\tthis.setTransform(transform = $.css(transformElem, 'transform'));\n\t\t\t}\n\n\t\t\treturn transform || 'none';\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the current transform matrix for $elem (or turn a transform into it's array values)\n\t\t * @param {String} [transform] matrix-formatted transform value\n\t\t * @returns {Array} Returns the current transform matrix split up into it's parts, or a default matrix\n\t\t */\n\t\tgetMatrix: function(transform) {\n\t\t\tvar matrix = rmatrix.exec(transform || this.getTransform());\n\t\t\tif (matrix) {\n\t\t\t\tmatrix.shift();\n\t\t\t}\n\t\t\treturn matrix || [ 1, 0, 0, 1, 0, 0 ];\n\t\t},\n\n\t\t/**\n\t\t * Given a matrix object, quickly set the current matrix of the element\n\t\t * @param {Array|String} matrix\n\t\t * @param {Boolean} [animate] Whether to animate the transform change\n\t\t * @param {Object} [options]\n\t\t * @param {Boolean|String} [options.animate] Whether to animate the transform change, or 'skip' indicating that it is unnecessary to set\n\t\t * @param {Boolean} [options.contain] Override the global contain option\n\t\t * @param {Boolean} [options.range] If true, $zoomRange's value will be updated.\n\t\t * @param {Boolean} [options.silent] If true, the change event will not be triggered\n\t\t * @returns {Array} Returns the newly-set matrix\n\t\t */\n\t\tsetMatrix: function(matrix, options) {\n\t\t\tif (this.disabled) { return; }\n\t\t\tif (!options) { options = {}; }\n\t\t\t// Convert to array\n\t\t\tif (typeof matrix === 'string') {\n\t\t\t\tmatrix = this.getMatrix(matrix);\n\t\t\t}\n\t\t\tvar dims, container, marginW, marginH, diffW, diffH, left, top, width, height;\n\t\t\tvar scale = +matrix[0];\n\t\t\tvar $parent = this.$parent;\n\t\t\tvar contain = typeof options.contain !== 'undefined' ? options.contain : this.options.contain;\n\n\t\t\t// Apply containment\n\t\t\tif (contain) {\n\t\t\t\tdims = this._checkDims();\n\t\t\t\tcontainer = this.container;\n\t\t\t\twidth = dims.width + dims.widthBorder;\n\t\t\t\theight = dims.height + dims.heightBorder;\n\t\t\t\t// Use absolute value of scale here as negative scale doesn't mean even smaller\n\t\t\t\tmarginW = ((width * Math.abs(scale)) - container.width) / 2;\n\t\t\t\tmarginH = ((height * Math.abs(scale)) - container.height) / 2;\n\t\t\t\tleft = dims.left + dims.margin.left;\n\t\t\t\ttop = dims.top + dims.margin.top;\n\t\t\t\tif (contain === 'invert') {\n\t\t\t\t\tdiffW = width > container.width ? width - container.width : 0;\n\t\t\t\t\tdiffH = height > container.height ? height - container.height : 0;\n\t\t\t\t\tmarginW += (container.width - width) / 2;\n\t\t\t\t\tmarginH += (container.height - height) / 2;\n\t\t\t\t\tmatrix[4] = Math.max(Math.min(matrix[4], marginW - left), -marginW - left - diffW);\n\t\t\t\t\tmatrix[5] = Math.max(Math.min(matrix[5], marginH - top), -marginH - top - diffH + dims.heightBorder);\n\t\t\t\t} else {\n\t\t\t\t\t// marginW += dims.widthBorder / 2;\n\t\t\t\t\tmarginH += dims.heightBorder / 2;\n\t\t\t\t\tdiffW = container.width > width ? container.width - width : 0;\n\t\t\t\t\tdiffH = container.height > height ? container.height - height : 0;\n\t\t\t\t\t// If the element is not naturally centered, assume full margin right\n\t\t\t\t\tif ($parent.css('textAlign') !== 'center' || !rinline.test($.css(this.elem, 'display'))) {\n\t\t\t\t\t\tmarginW = marginH = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdiffW = 0;\n\t\t\t\t\t}\n\t\t\t\t\tmatrix[4] = Math.min(\n\t\t\t\t\t\tMath.max(matrix[4], marginW - left),\n\t\t\t\t\t\t-marginW - left + diffW\n\t\t\t\t\t);\n\t\t\t\t\tmatrix[5] = Math.min(\n\t\t\t\t\t\tMath.max(matrix[5], marginH - top),\n\t\t\t\t\t\t-marginH - top + diffH\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options.animate !== 'skip') {\n\t\t\t\t// Set transition\n\t\t\t\tthis.transition(!options.animate);\n\t\t\t}\n\t\t\t// Update range\n\t\t\tif (options.range) {\n\t\t\t\tthis.$zoomRange.val(scale);\n\t\t\t}\n\n\t\t\t// Set the matrix on this.$set\n\t\t\tthis.setTransform('matrix(' + matrix.join(',') + ')');\n\n\t\t\tif (!options.silent) {\n\t\t\t\tthis._trigger('change', matrix);\n\t\t\t}\n\n\t\t\treturn matrix;\n\t\t},\n\n\t\t/**\n\t\t * @returns {Boolean} Returns whether the panzoom element is currently being dragged\n\t\t */\n\t\tisPanning: function() {\n\t\t\treturn this.panning;\n\t\t},\n\n\t\t/**\n\t\t * Apply the current transition to the element, if allowed\n\t\t * @param {Boolean} [off] Indicates that the transition should be turned off\n\t\t */\n\t\ttransition: function(off) {\n\t\t\tif (!this._transition) { return; }\n\t\t\tvar transition = off || !this.options.transition ? 'none' : this._transition;\n\t\t\tvar $set = this.$set;\n\t\t\tvar i = $set.length;\n\t\t\twhile(i--) {\n\t\t\t\t// Avoid reflows when zooming\n\t\t\t\tif ($.style($set[i], 'transition') !== transition) {\n\t\t\t\t\t$.style($set[i], 'transition', transition);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Pan the element to the specified translation X and Y\n\t\t * Note: this is not the same as setting jQuery#offset() or jQuery#position()\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Object} [options] These options are passed along to setMatrix\n\t\t * @param {Array} [options.matrix] The matrix being manipulated (if already known so it doesn't have to be retrieved again)\n\t\t * @param {Boolean} [options.silent] Silence the pan event. Note that this will also silence the setMatrix change event.\n\t\t * @param {Boolean} [options.relative] Make the x and y values relative to the existing matrix\n\t\t */\n\t\tpan: function(x, y, options) {\n\t\t\tif (this.options.disablePan) { return; }\n\t\t\tif (!options) { options = {}; }\n\t\t\tvar matrix = options.matrix;\n\t\t\tif (!matrix) {\n\t\t\t\tmatrix = this.getMatrix();\n\t\t\t}\n\t\t\t// Cast existing matrix values to numbers\n\t\t\tif (options.relative) {\n\t\t\t\tx += +matrix[4];\n\t\t\t\ty += +matrix[5];\n\t\t\t}\n\t\t\tmatrix[4] = x;\n\t\t\tmatrix[5] = y;\n\t\t\tthis.setMatrix(matrix, options);\n\t\t\tif (!options.silent) {\n\t\t\t\tthis._trigger('pan', matrix[4], matrix[5]);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Zoom in/out the element using the scale properties of a transform matrix\n\t\t * @param {Number|Boolean} [scale] The scale to which to zoom or a boolean indicating to transition a zoom out\n\t\t * @param {Object} [opts] All global options can be overwritten by this options object. For example, override the default increment.\n\t\t * @param {Boolean} [opts.noSetRange] Specify that the method should not set the $zoomRange value (as is the case when $zoomRange is calling zoom on change)\n\t\t * @param {jQuery.Event|Object} [opts.focal] A focal point on the panzoom element on which to zoom.\n\t\t *  If an object, set the clientX and clientY properties to the position relative to the parent\n\t\t * @param {Boolean} [opts.animate] Whether to animate the zoom (defaults to true if scale is not a number, false otherwise)\n\t\t * @param {Boolean} [opts.silent] Silence the zoom event\n\t\t * @param {Array} [opts.matrix] Optionally pass the current matrix so it doesn't need to be retrieved\n\t\t * @param {Number} [opts.dValue] Think of a transform matrix as four values a, b, c, d\n\t\t *  where a/d are the horizontal/vertical scale values and b/c are the skew values\n\t\t *  (5 and 6 of matrix array are the tx/ty transform values).\n\t\t *  Normally, the scale is set to both the a and d values of the matrix.\n\t\t *  This option allows you to specify a different d value for the zoom.\n\t\t *  For instance, to flip vertically, you could set -1 as the dValue.\n\t\t */\n\t\tzoom: function(scale, opts) {\n\t\t\t// Shuffle arguments\n\t\t\tif (typeof scale === 'object') {\n\t\t\t\topts = scale;\n\t\t\t\tscale = null;\n\t\t\t} else if (!opts) {\n\t\t\t\topts = {};\n\t\t\t}\n\t\t\tvar options = $.extend({}, this.options, opts);\n\t\t\t// Check if disabled\n\t\t\tif (options.disableZoom) { return; }\n\t\t\tvar animate = false;\n\t\t\tvar matrix = options.matrix || this.getMatrix();\n\n\t\t\t// Calculate zoom based on increment\n\t\t\tif (typeof scale !== 'number') {\n\t\t\t\tscale = +matrix[0] + (options.increment * (scale ? -1 : 1));\n\t\t\t\tanimate = true;\n\t\t\t}\n\n\t\t\t// Constrain scale\n\t\t\tif (scale > options.maxScale) {\n\t\t\t\tscale = options.maxScale;\n\t\t\t} else if (scale < options.minScale) {\n\t\t\t\tscale = options.minScale;\n\t\t\t}\n\n\t\t\t// Calculate focal point based on scale\n\t\t\tvar focal = options.focal;\n\t\t\tif (focal && !options.disablePan) {\n\t\t\t\t// Adapted from code by Florian Günther\n\t\t\t\t// https://github.com/florianguenther/zui53\n\t\t\t\tvar dims = this._checkDims();\n\t\t\t\tvar clientX = focal.clientX;\n\t\t\t\tvar clientY = focal.clientY;\n\t\t\t\t// Adjust the focal point for default transform-origin => 50% 50%\n\t\t\t\tif (!this.isSVG) {\n\t\t\t\t\tclientX -= (dims.width + dims.widthBorder) / 2;\n\t\t\t\t\tclientY -= (dims.height + dims.heightBorder) / 2;\n\t\t\t\t}\n\t\t\t\tvar clientV = new Vector(clientX, clientY, 1);\n\t\t\t\tvar surfaceM = new Matrix(matrix);\n\t\t\t\t// Supply an offset manually if necessary\n\t\t\t\tvar o = this.parentOffset || this.$parent.offset();\n\t\t\t\tvar offsetM = new Matrix(1, 0, o.left - this.$doc.scrollLeft(), 0, 1, o.top - this.$doc.scrollTop());\n\t\t\t\tvar surfaceV = surfaceM.inverse().x(offsetM.inverse().x(clientV));\n\t\t\t\tvar scaleBy = scale / matrix[0];\n\t\t\t\tsurfaceM = surfaceM.x(new Matrix([ scaleBy, 0, 0, scaleBy, 0, 0 ]));\n\t\t\t\tclientV = offsetM.x(surfaceM.x(surfaceV));\n\t\t\t\tmatrix[4] = +matrix[4] + (clientX - clientV.e(0));\n\t\t\t\tmatrix[5] = +matrix[5] + (clientY - clientV.e(1));\n\t\t\t}\n\n\t\t\t// Set the scale\n\t\t\tmatrix[0] = scale;\n\t\t\tmatrix[3] = typeof options.dValue === 'number' ? options.dValue : scale;\n\n\t\t\t// Calling zoom may still pan the element\n\t\t\tthis.setMatrix(matrix, {\n\t\t\t\tanimate: typeof options.animate === 'boolean' ? options.animate : animate,\n\t\t\t\t// Set the zoomRange value\n\t\t\t\trange: !options.noSetRange\n\t\t\t});\n\n\t\t\t// Trigger zoom event\n\t\t\tif (!options.silent) {\n\t\t\t\tthis._trigger('zoom', matrix[0], options);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Get/set option on an existing instance\n\t\t * @returns {Array|undefined} If getting, returns an array of all values\n\t\t *   on each instance for a given key. If setting, continue chaining by returning undefined.\n\t\t */\n\t\toption: function(key, value) {\n\t\t\tvar options;\n\t\t\tif (!key) {\n\t\t\t\t// Avoids returning direct reference\n\t\t\t\treturn $.extend({}, this.options);\n\t\t\t}\n\n\t\t\tif (typeof key === 'string') {\n\t\t\t\tif (arguments.length === 1) {\n\t\t\t\t\treturn this.options[ key ] !== undefined ?\n\t\t\t\t\t\tthis.options[ key ] :\n\t\t\t\t\t\tnull;\n\t\t\t\t}\n\t\t\t\toptions = {};\n\t\t\t\toptions[ key ] = value;\n\t\t\t} else {\n\t\t\t\toptions = key;\n\t\t\t}\n\n\t\t\tthis._setOptions(options);\n\t\t},\n\n\t\t/**\n\t\t * Internally sets options\n\t\t * @param {Object} options - An object literal of options to set\n\t\t */\n\t\t_setOptions: function(options) {\n\t\t\t$.each(options, $.proxy(function(key, value) {\n\t\t\t\tswitch(key) {\n\t\t\t\t\tcase 'disablePan':\n\t\t\t\t\t\tthis._resetStyle();\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase '$zoomIn':\n\t\t\t\t\tcase '$zoomOut':\n\t\t\t\t\tcase '$zoomRange':\n\t\t\t\t\tcase '$reset':\n\t\t\t\t\tcase 'disableZoom':\n\t\t\t\t\tcase 'onStart':\n\t\t\t\t\tcase 'onChange':\n\t\t\t\t\tcase 'onZoom':\n\t\t\t\t\tcase 'onPan':\n\t\t\t\t\tcase 'onEnd':\n\t\t\t\t\tcase 'onReset':\n\t\t\t\t\tcase 'eventNamespace':\n\t\t\t\t\t\tthis._unbind();\n\t\t\t\t}\n\t\t\t\tthis.options[ key ] = value;\n\t\t\t\tswitch(key) {\n\t\t\t\t\tcase 'disablePan':\n\t\t\t\t\t\tthis._initStyle();\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase '$zoomIn':\n\t\t\t\t\tcase '$zoomOut':\n\t\t\t\t\tcase '$zoomRange':\n\t\t\t\t\tcase '$reset':\n\t\t\t\t\t\t// Set these on the instance\n\t\t\t\t\t\tthis[ key ] = value;\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase 'disableZoom':\n\t\t\t\t\tcase 'onStart':\n\t\t\t\t\tcase 'onChange':\n\t\t\t\t\tcase 'onZoom':\n\t\t\t\t\tcase 'onPan':\n\t\t\t\t\tcase 'onEnd':\n\t\t\t\t\tcase 'onReset':\n\t\t\t\t\tcase 'eventNamespace':\n\t\t\t\t\t\tthis._bind();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cursor':\n\t\t\t\t\t\t$.style(this.elem, 'cursor', value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'minScale':\n\t\t\t\t\t\tthis.$zoomRange.attr('min', value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'maxScale':\n\t\t\t\t\t\tthis.$zoomRange.attr('max', value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'rangeStep':\n\t\t\t\t\t\tthis.$zoomRange.attr('step', value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'startTransform':\n\t\t\t\t\t\tthis._buildTransform();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'duration':\n\t\t\t\t\tcase 'easing':\n\t\t\t\t\t\tthis._buildTransition();\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase 'transition':\n\t\t\t\t\t\tthis.transition();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '$set':\n\t\t\t\t\t\tif (value instanceof $ && value.length) {\n\t\t\t\t\t\t\tthis.$set = value;\n\t\t\t\t\t\t\t// Reset styles\n\t\t\t\t\t\t\tthis._initStyle();\n\t\t\t\t\t\t\tthis._buildTransform();\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\t\t},\n\n\t\t/**\n\t\t * Initialize base styles for the element and its parent\n\t\t */\n\t\t_initStyle: function() {\n\t\t\tvar styles = {\n\t\t\t\t// Promote the element to it's own compositor layer\n\t\t\t\t'backface-visibility': 'hidden',\n\t\t\t\t// Set to defaults for the namespace\n\t\t\t\t'transform-origin': this.isSVG ? '0 0' : '50% 50%'\n\t\t\t};\n\t\t\t// Set elem styles\n\t\t\tif (!this.options.disablePan) {\n\t\t\t\tstyles.cursor = this.options.cursor;\n\t\t\t}\n\t\t\tthis.$set.css(styles);\n\n\t\t\t// Set parent to relative if set to static\n\t\t\tvar $parent = this.$parent;\n\t\t\t// No need to add styles to the body\n\t\t\tif ($parent.length && !$.nodeName($parent[0], 'body')) {\n\t\t\t\tstyles = {\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t};\n\t\t\t\tif ($parent.css('position') === 'static') {\n\t\t\t\t\tstyles.position = 'relative';\n\t\t\t\t}\n\t\t\t\t$parent.css(styles);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Undo any styles attached in this plugin\n\t\t */\n\t\t_resetStyle: function() {\n\t\t\tthis.$elem.css({\n\t\t\t\t'cursor': '',\n\t\t\t\t'transition': ''\n\t\t\t});\n\t\t\tthis.$parent.css({\n\t\t\t\t'overflow': '',\n\t\t\t\t'position': ''\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Binds all necessary events\n\t\t */\n\t\t_bind: function() {\n\t\t\tvar self = this;\n\t\t\tvar options = this.options;\n\t\t\tvar ns = options.eventNamespace;\n\t\t\tvar str_start = pointerEvents ? 'pointerdown' + ns : ('touchstart' + ns + ' mousedown' + ns);\n\t\t\tvar str_click = pointerEvents ? 'pointerup' + ns : ('touchend' + ns + ' click' + ns);\n\t\t\tvar events = {};\n\t\t\tvar $reset = this.$reset;\n\t\t\tvar $zoomRange = this.$zoomRange;\n\n\t\t\t// Bind panzoom events from options\n\t\t\t$.each([ 'Start', 'Change', 'Zoom', 'Pan', 'End', 'Reset' ], function() {\n\t\t\t\tvar m = options[ 'on' + this ];\n\t\t\t\tif ($.isFunction(m)) {\n\t\t\t\t\tevents[ 'panzoom' + this.toLowerCase() + ns ] = m;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Bind $elem drag and click/touchdown events\n\t\t\t// Bind touchstart if either panning or zooming is enabled\n\t\t\tif (!options.disablePan || !options.disableZoom) {\n\t\t\t\tevents[ str_start ] = function(e) {\n\t\t\t\t\tvar touches;\n\t\t\t\t\tif (e.type === 'touchstart' ?\n\t\t\t\t\t\t// Touch\n\t\t\t\t\t\t(touches = e.touches) &&\n\t\t\t\t\t\t\t((touches.length === 1 && !options.disablePan) || touches.length === 2) :\n\t\t\t\t\t\t// Mouse/Pointer: Ignore right click\n\t\t\t\t\t\t!options.disablePan && e.which === 1) {\n\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tself._startMove(e, touches);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.$elem.on(events);\n\n\t\t\t// Bind reset\n\t\t\tif ($reset.length) {\n\t\t\t\t$reset.on(str_click, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Set default attributes for the range input\n\t\t\tif ($zoomRange.length) {\n\t\t\t\t$zoomRange.attr({\n\t\t\t\t\t// Only set the range step if explicit or\n\t\t\t\t\t// set the default if there is no attribute present\n\t\t\t\t\tstep: options.rangeStep === Panzoom.defaults.rangeStep &&\n\t\t\t\t\t\t$zoomRange.attr('step') ||\n\t\t\t\t\t\toptions.rangeStep,\n\t\t\t\t\tmin: options.minScale,\n\t\t\t\t\tmax: options.maxScale\n\t\t\t\t}).prop({\n\t\t\t\t\tvalue: this.getMatrix()[0]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// No bindings if zooming is disabled\n\t\t\tif (options.disableZoom) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar $zoomIn = this.$zoomIn;\n\t\t\tvar $zoomOut = this.$zoomOut;\n\n\t\t\t// Bind zoom in/out\n\t\t\t// Don't bind one without the other\n\t\t\tif ($zoomIn.length && $zoomOut.length) {\n\t\t\t\t// preventDefault cancels future mouse events on touch events\n\t\t\t\t$zoomIn.on(str_click, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.zoom();\n\t\t\t\t});\n\t\t\t\t$zoomOut.on(str_click, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.zoom(true);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ($zoomRange.length) {\n\t\t\t\tevents = {};\n\t\t\t\t// Cannot prevent default action here, just use pointerdown/mousedown\n\t\t\t\tevents[ (pointerEvents ? 'pointerdown' : 'mousedown') + ns ] = function() {\n\t\t\t\t\tself.transition(true);\n\t\t\t\t};\n\t\t\t\t// Zoom on input events if available and change events\n\t\t\t\t// See https://github.com/timmywil/jquery.panzoom/issues/90\n\t\t\t\tevents[ (supportsInputEvent ? 'input' : 'change') + ns ] = function() {\n\t\t\t\t\tself.zoom(+this.value, { noSetRange: true });\n\t\t\t\t};\n\t\t\t\t$zoomRange.on(events);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Unbind all events\n\t\t */\n\t\t_unbind: function() {\n\t\t\tthis.$elem\n\t\t\t\t.add(this.$zoomIn)\n\t\t\t\t.add(this.$zoomOut)\n\t\t\t\t.add(this.$reset)\n\t\t\t\t.off(this.options.eventNamespace);\n\t\t},\n\n\t\t/**\n\t\t * Builds the original transform value\n\t\t */\n\t\t_buildTransform: function() {\n\t\t\t// Save the original transform\n\t\t\t// Retrieving this also adds the correct prefixed style name\n\t\t\t// to jQuery's internal $.cssProps\n\t\t\treturn this._origTransform = this.getTransform(this.options.startTransform);\n\t\t},\n\n\t\t/**\n\t\t * Set transition property for later use when zooming\n\t\t * If SVG, create necessary animations elements for translations and scaling\n\t\t */\n\t\t_buildTransition: function() {\n\t\t\tif (this._transform) {\n\t\t\t\tvar options = this.options;\n\t\t\t\tthis._transition = this._transform + ' ' + options.duration + 'ms ' + options.easing;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Checks dimensions to make sure they don't need to be re-calculated\n\t\t */\n\t\t_checkDims: function() {\n\t\t\tvar dims = this.dimensions;\n\t\t\t// Rebuild if width or height is still 0\n\t\t\tif (!dims.width || !dims.height) {\n\t\t\t\tthis.resetDimensions();\n\t\t\t}\n\t\t\treturn this.dimensions;\n\t\t},\n\n\t\t/**\n\t\t * Calculates the distance between two touch points\n\t\t * Remember pythagorean?\n\t\t * @param {Array} touches\n\t\t * @returns {Number} Returns the distance\n\t\t */\n\t\t_getDistance: function(touches) {\n\t\t\tvar touch1 = touches[0];\n\t\t\tvar touch2 = touches[1];\n\t\t\treturn Math.sqrt(Math.pow(Math.abs(touch2.clientX - touch1.clientX), 2) + Math.pow(Math.abs(touch2.clientY - touch1.clientY), 2));\n\t\t},\n\n\t\t/**\n\t\t * Constructs an approximated point in the middle of two touch points\n\t\t * @returns {Object} Returns an object containing pageX and pageY\n\t\t */\n\t\t_getMiddle: function(touches) {\n\t\t\tvar touch1 = touches[0];\n\t\t\tvar touch2 = touches[1];\n\t\t\treturn {\n\t\t\t\tclientX: ((touch2.clientX - touch1.clientX) / 2) + touch1.clientX,\n\t\t\t\tclientY: ((touch2.clientY - touch1.clientY) / 2) + touch1.clientY\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Trigger a panzoom event on our element\n\t\t * The event is passed the Panzoom instance\n\t\t * @param {String|jQuery.Event} event\n\t\t * @param {Mixed} arg1[, arg2, arg3, ...] Arguments to append to the trigger\n\t\t */\n\t\t_trigger: function (event) {\n\t\t\tif (typeof event === 'string') {\n\t\t\t\tevent = 'panzoom' + event;\n\t\t\t}\n\t\t\tthis.$elem.triggerHandler(event, [this].concat(slice.call(arguments, 1)));\n\t\t},\n\n\t\t/**\n\t\t * Starts the pan\n\t\t * This is bound to mouse/touchmove on the element\n\t\t * @param {jQuery.Event} event An event with pageX, pageY, and possibly the touches list\n\t\t * @param {TouchList} [touches] The touches list if present\n\t\t */\n\t\t_startMove: function(event, touches) {\n\t\t\tvar move, moveEvent, endEvent,\n\t\t\t\tstartDistance, startScale, startMiddle,\n\t\t\t\tstartPageX, startPageY;\n\t\t\tvar self = this;\n\t\t\tvar options = this.options;\n\t\t\tvar ns = options.eventNamespace;\n\t\t\tvar matrix = this.getMatrix();\n\t\t\tvar original = matrix.slice(0);\n\t\t\tvar origPageX = +original[4];\n\t\t\tvar origPageY = +original[5];\n\t\t\tvar panOptions = { matrix: matrix, animate: 'skip' };\n\n\t\t\t// Use proper events\n\t\t\tif (pointerEvents) {\n\t\t\t\tmoveEvent = 'pointermove';\n\t\t\t\tendEvent = 'pointerup';\n\t\t\t} else if (event.type === 'touchstart') {\n\t\t\t\tmoveEvent = 'touchmove';\n\t\t\t\tendEvent = 'touchend';\n\t\t\t} else {\n\t\t\t\tmoveEvent = 'mousemove';\n\t\t\t\tendEvent = 'mouseup';\n\t\t\t}\n\n\t\t\t// Add namespace\n\t\t\tmoveEvent += ns;\n\t\t\tendEvent += ns;\n\n\t\t\t// Remove any transitions happening\n\t\t\tthis.transition(true);\n\n\t\t\t// Indicate that we are currently panning\n\t\t\tthis.panning = true;\n\n\t\t\t// Trigger start event\n\t\t\tthis._trigger('start', event, touches);\n\n\t\t\tif (touches && touches.length === 2) {\n\t\t\t\tstartDistance = this._getDistance(touches);\n\t\t\t\tstartScale = +matrix[0];\n\t\t\t\tstartMiddle = this._getMiddle(touches);\n\t\t\t\tmove = function(e) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t// Calculate move on middle point\n\t\t\t\t\tvar middle = self._getMiddle(touches = e.touches);\n\t\t\t\t\tvar diff = self._getDistance(touches) - startDistance;\n\n\t\t\t\t\t// Set zoom\n\t\t\t\t\tself.zoom(diff * (options.increment / 100) + startScale, {\n\t\t\t\t\t\tfocal: middle,\n\t\t\t\t\t\tmatrix: matrix,\n\t\t\t\t\t\tanimate: false\n\t\t\t\t\t});\n\n\t\t\t\t\t// Set pan\n\t\t\t\t\tself.pan(\n\t\t\t\t\t\t+matrix[4] + middle.clientX - startMiddle.clientX,\n\t\t\t\t\t\t+matrix[5] + middle.clientY - startMiddle.clientY,\n\t\t\t\t\t\tpanOptions\n\t\t\t\t\t);\n\t\t\t\t\tstartMiddle = middle;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tstartPageX = event.pageX;\n\t\t\t\tstartPageY = event.pageY;\n\n\t\t\t\t/**\n\t\t\t\t * Mousemove/touchmove function to pan the element\n\t\t\t\t * @param {Object} e Event object\n\t\t\t\t */\n\t\t\t\tmove = function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.pan(\n\t\t\t\t\t\torigPageX + e.pageX - startPageX,\n\t\t\t\t\t\torigPageY + e.pageY - startPageY,\n\t\t\t\t\t\tpanOptions\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Bind the handlers\n\t\t\t$(document)\n\t\t\t\t.off(ns)\n\t\t\t\t.on(moveEvent, move)\n\t\t\t\t.on(endEvent, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t// Unbind all document events\n\t\t\t\t\t$(this).off(ns);\n\t\t\t\t\tself.panning = false;\n\t\t\t\t\t// Trigger our end event\n\t\t\t\t\t// Simply set the type to \"panzoomend\" to pass through all end properties\n\t\t\t\t\t// jQuery's `not` is used here to compare Array equality\n\t\t\t\t\te.type = 'panzoomend';\n\t\t\t\t\tself._trigger(e, matrix, !matrixEquals(matrix, original));\n\t\t\t\t});\n\t\t}\n\t};\n\n\t// Add Panzoom as a static property\n\t$.Panzoom = Panzoom;\n\n\t/**\n\t * Extend jQuery\n\t * @param {Object|String} options - The name of a method to call on the prototype\n\t *  or an object literal of options\n\t * @returns {jQuery|Mixed} jQuery instance for regular chaining or the return value(s) of a panzoom method call\n\t */\n\t$.fn.panzoom = function(options) {\n\t\tvar instance, args, m, ret;\n\n\t\t// Call methods widget-style\n\t\tif (typeof options === 'string') {\n\t\t\tret = [];\n\t\t\targs = slice.call(arguments, 1);\n\t\t\tthis.each(function() {\n\t\t\t\tinstance = $.data(this, datakey);\n\n\t\t\t\tif (!instance) {\n\t\t\t\t\tret.push(undefined);\n\n\t\t\t\t// Ignore methods beginning with `_`\n\t\t\t\t} else if (options.charAt(0) !== '_' &&\n\t\t\t\t\ttypeof (m = instance[ options ]) === 'function' &&\n\t\t\t\t\t// If nothing is returned, do not add to return values\n\t\t\t\t\t(m = m.apply(instance, args)) !== undefined) {\n\n\t\t\t\t\tret.push(m);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Return an array of values for the jQuery instances\n\t\t\t// Or the value itself if there is only one\n\t\t\t// Or keep chaining\n\t\t\treturn ret.length ?\n\t\t\t\t(ret.length === 1 ? ret[0] : ret) :\n\t\t\t\tthis;\n\t\t}\n\n\t\treturn this.each(function() { new Panzoom(this, options); });\n\t};\n\n\treturn Panzoom;\n}));"],"sourceRoot":"/source/"}