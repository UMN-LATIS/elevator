{"version":3,"file":"bootbox.min.js","sources":["bootbox.js"],"sourcesContent":["/**\n * bootbox.js [v4.1.0]\n *\n * http://bootboxjs.com/license.txt\n */\n// @see https://github.com/makeusabrew/bootbox/issues/71\nwindow.bootbox = window.bootbox || (function init($, undefined) {\n  \"use strict\";\n\n  // the base DOM structure needed to create a modal\n  var templates = {\n    dialog:\n      \"<div class='bootbox modal' tabindex='-1' role='dialog'>\" +\n        \"<div class='modal-dialog'>\" +\n          \"<div class='modal-content'>\" +\n            \"<div class='modal-body'><div class='bootbox-body'></div></div>\" +\n          \"</div>\" +\n        \"</div>\" +\n      \"</div>\",\n    header:\n      \"<div class='modal-header'>\" +\n        \"<h4 class='modal-title'></h4>\" +\n      \"</div>\",\n    footer:\n      \"<div class='modal-footer'></div>\",\n    closeButton:\n      \"<button type='button' class='bootbox-close-button close'>&times;</button>\",\n    form:\n      \"<form class='bootbox-form'></form>\",\n    inputs: {\n      text:\n        \"<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />\",\n      email:\n        \"<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />\",\n      select:\n        \"<select class='bootbox-input bootbox-input-select form-control'></select>\",\n      checkbox:\n        \"<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /></label></div>\"\n    }\n  };\n\n  // cache a reference to the jQueryfied body element\n  var appendTo = $(\"body\");\n\n  var defaults = {\n    // default language\n    locale: \"en\",\n    // show backdrop or not\n    backdrop: true,\n    // animate the modal in/out\n    animate: true,\n    // additional class string applied to the top level dialog\n    className: null,\n    // whether or not to include a close button\n    closeButton: true,\n    // show the dialog immediately by default\n    show: true\n  };\n\n  // our public object; augmented after our private API\n  var exports = {};\n\n  /**\n   * @private\n   */\n  function _t(key) {\n    var locale = locales[defaults.locale];\n    return locale ? locale[key] : locales.en[key];\n  }\n\n  function processCallback(e, dialog, callback) {\n    e.preventDefault();\n\n    // by default we assume a callback will get rid of the dialog,\n    // although it is given the opportunity to override this\n\n    // so, if the callback can be invoked and it *explicitly returns false*\n    // then we'll set a flag to keep the dialog active...\n    var preserveDialog = $.isFunction(callback) && callback(e) === false;\n\n    // ... otherwise we'll bin it\n    if (!preserveDialog) {\n      dialog.modal(\"hide\");\n    }\n  }\n\n  function getKeyLength(obj) {\n    // @TODO defer to Object.keys(x).length if available?\n    var k, t = 0;\n    for (k in obj) {\n      t ++;\n    }\n    return t;\n  }\n\n  function each(collection, iterator) {\n    var index = 0;\n    $.each(collection, function(key, value) {\n      iterator(key, value, index++);\n    });\n  }\n\n  function sanitize(options) {\n    var buttons;\n    var total;\n\n    if (typeof options !== \"object\") {\n      throw new Error(\"Please supply an object of options\");\n    }\n\n    if (!options.message) {\n      throw new Error(\"Please specify a message\");\n    }\n\n    // make sure any supplied options take precedence over defaults\n    options = $.extend({}, defaults, options);\n\n    if (!options.buttons) {\n      options.buttons = {};\n    }\n\n    // we only support Bootstrap's \"static\" and false backdrop args\n    // supporting true would mean you could dismiss the dialog without\n    // explicitly interacting with it\n    options.backdrop = options.backdrop ? \"static\" : false;\n\n    buttons = options.buttons;\n\n    total = getKeyLength(buttons);\n\n    each(buttons, function(key, button, index) {\n\n      if ($.isFunction(button)) {\n        // short form, assume value is our callback. Since button\n        // isn't an object it isn't a reference either so re-assign it\n        button = buttons[key] = {\n          callback: button\n        };\n      }\n\n      // before any further checks make sure by now button is the correct type\n      if ($.type(button) !== \"object\") {\n        throw new Error(\"button with key \" + key + \" must be an object\");\n      }\n\n      if (!button.label) {\n        // the lack of an explicit label means we'll assume the key is good enough\n        button.label = key;\n      }\n\n      if (!button.className) {\n        if (total <= 2 && index === total-1) {\n          // always add a primary to the main option in a two-button dialog\n          button.className = \"btn-primary\";\n        } else {\n          button.className = \"btn-default\";\n        }\n      }\n    });\n\n    return options;\n  }\n\n  /**\n   * map a flexible set of arguments into a single returned object\n   * if args.length is already one just return it, otherwise\n   * use the properties argument to map the unnamed args to\n   * object properties\n   * so in the latter case:\n   * mapArguments([\"foo\", $.noop], [\"message\", \"callback\"])\n   * -> { message: \"foo\", callback: $.noop }\n   */\n  function mapArguments(args, properties) {\n    var argn = args.length;\n    var options = {};\n\n    if (argn < 1 || argn > 2) {\n      throw new Error(\"Invalid argument length\");\n    }\n\n    if (argn === 2 || typeof args[0] === \"string\") {\n      options[properties[0]] = args[0];\n      options[properties[1]] = args[1];\n    } else {\n      options = args[0];\n    }\n\n    return options;\n  }\n\n  /**\n   * merge a set of default dialog options with user supplied arguments\n   */\n  function mergeArguments(defaults, args, properties) {\n    return $.extend(\n      // deep merge\n      true,\n      // ensure the target is an empty, unreferenced object\n      {},\n      // the base options object for this type of dialog (often just buttons)\n      defaults,\n      // args could be an object or array; if it's an array properties will\n      // map it to a proper options object\n      mapArguments(\n        args,\n        properties\n      )\n    );\n  }\n\n  /**\n   * this entry-level method makes heavy use of composition to take a simple\n   * range of inputs and return valid options suitable for passing to bootbox.dialog\n   */\n  function mergeDialogOptions(className, labels, properties, args) {\n    //  build up a base set of dialog properties\n    var baseOptions = {\n      className: \"bootbox-\" + className,\n      buttons: createLabels.apply(null, labels)\n    };\n\n    // ensure the buttons properties generated, *after* merging\n    // with user args are still valid against the supplied labels\n    return validateButtons(\n      // merge the generated base properties with user supplied arguments\n      mergeArguments(\n        baseOptions,\n        args,\n        // if args.length > 1, properties specify how each arg maps to an object key\n        properties\n      ),\n      labels\n    );\n  }\n\n  /**\n   * from a given list of arguments return a suitable object of button labels\n   * all this does is normalise the given labels and translate them where possible\n   * e.g. \"ok\", \"confirm\" -> { ok: \"OK, cancel: \"Annuleren\" }\n   */\n  function createLabels() {\n    var buttons = {};\n\n    for (var i = 0, j = arguments.length; i < j; i++) {\n      var argument = arguments[i];\n      var key = argument.toLowerCase();\n      var value = argument.toUpperCase();\n\n      buttons[key] = {\n        label: _t(value)\n      };\n    }\n\n    return buttons;\n  }\n\n  function validateButtons(options, buttons) {\n    var allowedButtons = {};\n    each(buttons, function(key, value) {\n      allowedButtons[value] = true;\n    });\n\n    each(options.buttons, function(key) {\n      if (allowedButtons[key] === undefined) {\n        throw new Error(\"button key \" + key + \" is not allowed (options are \" + buttons.join(\"\\n\") + \")\");\n      }\n    });\n\n    return options;\n  }\n\n  exports.alert = function() {\n    var options;\n\n    options = mergeDialogOptions(\"alert\", [\"ok\"], [\"message\", \"callback\"], arguments);\n\n    if (options.callback && !$.isFunction(options.callback)) {\n      throw new Error(\"alert requires callback property to be a function when provided\");\n    }\n\n    /**\n     * overrides\n     */\n    options.buttons.ok.callback = options.onEscape = function() {\n      if ($.isFunction(options.callback)) {\n        return options.callback();\n      }\n      return true;\n    };\n\n    return exports.dialog(options);\n  };\n\n  exports.confirm = function() {\n    var options;\n\n    options = mergeDialogOptions(\"confirm\", [\"cancel\", \"confirm\"], [\"message\", \"callback\"], arguments);\n\n    /**\n     * overrides; undo anything the user tried to set they shouldn't have\n     */\n    options.buttons.cancel.callback = options.onEscape = function() {\n      return options.callback(false);\n    };\n\n    options.buttons.confirm.callback = function() {\n      return options.callback(true);\n    };\n\n    // confirm specific validation\n    if (!$.isFunction(options.callback)) {\n      throw new Error(\"confirm requires a callback\");\n    }\n\n    return exports.dialog(options);\n  };\n\n  exports.prompt = function() {\n    var options;\n    var defaults;\n    var dialog;\n    var form;\n    var input;\n    var shouldShow;\n    var inputOptions;\n\n    // we have to create our form first otherwise\n    // its value is undefined when gearing up our options\n    // @TODO this could be solved by allowing message to\n    // be a function instead...\n    form = $(templates.form);\n\n    // prompt defaults are more complex than others in that\n    // users can override more defaults\n    // @TODO I don't like that prompt has to do a lot of heavy\n    // lifting which mergeDialogOptions can *almost* support already\n    // just because of 'value' and 'inputType' - can we refactor?\n    defaults = {\n      className: \"bootbox-prompt\",\n      buttons: createLabels(\"cancel\", \"confirm\"),\n      value: \"\",\n      inputType: \"text\"\n    };\n\n    options = validateButtons(\n      mergeArguments(defaults, arguments, [\"title\", \"callback\"]),\n      [\"cancel\", \"confirm\"]\n    );\n\n    // capture the user's show value; we always set this to false before\n    // spawning the dialog to give us a chance to attach some handlers to\n    // it, but we need to make sure we respect a preference not to show it\n    shouldShow = (options.show === undefined) ? true : options.show;\n\n    /**\n     * overrides; undo anything the user tried to set they shouldn't have\n     */\n    options.message = form;\n\n    options.buttons.cancel.callback = options.onEscape = function() {\n      return options.callback(null);\n    };\n\n    options.buttons.confirm.callback = function() {\n      var value;\n\n      switch (options.inputType) {\n        case \"text\":\n        case \"email\":\n        case \"select\":\n          value = input.val();\n          break;\n\n        case \"checkbox\":\n          var checkedItems = input.find(\"input:checked\");\n\n          // we assume that checkboxes are always multiple,\n          // hence we default to an empty array\n          value = [];\n\n          each(checkedItems, function(_, item) {\n            value.push($(item).val());\n          });\n          break;\n      }\n\n      return options.callback(value);\n    };\n\n    options.show = false;\n\n    // prompt specific validation\n    if (!options.title) {\n      throw new Error(\"prompt requires a title\");\n    }\n\n    if (!$.isFunction(options.callback)) {\n      throw new Error(\"prompt requires a callback\");\n    }\n\n    if (!templates.inputs[options.inputType]) {\n      throw new Error(\"invalid prompt type\");\n    }\n\n    // create the input based on the supplied type\n    input = $(templates.inputs[options.inputType]);\n\n    switch (options.inputType) {\n      case \"text\":\n      case \"email\":\n        input.val(options.value);\n        break;\n\n      case \"select\":\n        var groups = {};\n        inputOptions = options.inputOptions || [];\n\n        if (!inputOptions.length) {\n          throw new Error(\"prompt with select requires options\");\n        }\n\n        each(inputOptions, function(_, option) {\n\n          // assume the element to attach to is the input...\n          var elem = input;\n\n          if (option.value === undefined || option.text === undefined) {\n            throw new Error(\"given options in wrong format\");\n          }\n\n\n          // ... but override that element if this option sits in a group\n\n          if (option.group) {\n            // initialise group if necessary\n            if (!groups[option.group]) {\n              groups[option.group] = $(\"<optgroup/>\").attr(\"label\", option.group);\n            }\n\n            elem = groups[option.group];\n          }\n\n          elem.append(\"<option value='\" + option.value + \"'>\" + option.text + \"</option>\");\n        });\n\n        each(groups, function(_, group) {\n          input.append(group);\n        });\n\n        // safe to set a select's value as per a normal input\n        input.val(options.value);\n        break;\n\n      case \"checkbox\":\n        var values   = $.isArray(options.value) ? options.value : [options.value];\n        inputOptions = options.inputOptions || [];\n\n        if (!inputOptions.length) {\n          throw new Error(\"prompt with checkbox requires options\");\n        }\n\n        if (!inputOptions[0].value || !inputOptions[0].text) {\n          throw new Error(\"given options in wrong format\");\n        }\n\n        // checkboxes have to nest within a containing element, so\n        // they break the rules a bit and we end up re-assigning\n        // our 'input' element to this container instead\n        input = $(\"<div/>\");\n\n        each(inputOptions, function(_, option) {\n          var checkbox = $(templates.inputs[options.inputType]);\n\n          checkbox.find(\"input\").attr(\"value\", option.value);\n          checkbox.find(\"label\").append(option.text);\n\n          // we've ensured values is an array so we can always iterate over it\n          each(values, function(_, value) {\n            if (value === option.value) {\n              checkbox.find(\"input\").prop(\"checked\", true);\n            }\n          });\n\n          input.append(checkbox);\n        });\n        break;\n    }\n\n    if (options.placeholder) {\n      input.attr(\"placeholder\", options.placeholder);\n    }\n\n    // now place it in our form\n    form.append(input);\n\n    form.on(\"submit\", function(e) {\n      e.preventDefault();\n      // @TODO can we actually click *the* button object instead?\n      // e.g. buttons.confirm.click() or similar\n      dialog.find(\".btn-primary\").click();\n    });\n\n    dialog = exports.dialog(options);\n\n    // clear the existing handler focusing the submit button...\n    dialog.off(\"shown.bs.modal\");\n\n    // ...and replace it with one focusing our input, if possible\n    dialog.on(\"shown.bs.modal\", function() {\n      input.focus();\n    });\n\n    if (shouldShow === true) {\n      dialog.modal(\"show\");\n    }\n\n    return dialog;\n  };\n\n  exports.dialog = function(options) {\n    options = sanitize(options);\n\n    var dialog = $(templates.dialog);\n    var body = dialog.find(\".modal-body\");\n    var buttons = options.buttons;\n    var buttonStr = \"\";\n    var callbacks = {\n      onEscape: options.onEscape\n    };\n\n    each(buttons, function(key, button) {\n\n      // @TODO I don't like this string appending to itself; bit dirty. Needs reworking\n      // can we just build up button elements instead? slower but neater. Then button\n      // can just become a template too\n      buttonStr += \"<button data-bb-handler='\" + key + \"' type='button' class='btn \" + button.className + \"'>\" + button.label + \"</button>\";\n      callbacks[key] = button.callback;\n    });\n\n    body.find(\".bootbox-body\").html(options.message);\n\n    if (options.animate === true) {\n      dialog.addClass(\"fade\");\n    }\n\n    if (options.className) {\n      dialog.addClass(options.className);\n    }\n\n    if (options.title) {\n      body.before(templates.header);\n    }\n\n    if (options.closeButton) {\n      var closeButton = $(templates.closeButton);\n\n      if (options.title) {\n        dialog.find(\".modal-header\").prepend(closeButton);\n      } else {\n        closeButton.css(\"margin-top\", \"-10px\").prependTo(body);\n      }\n    }\n\n    if (options.title) {\n      dialog.find(\".modal-title\").html(options.title);\n    }\n\n    if (buttonStr.length) {\n      body.after(templates.footer);\n      dialog.find(\".modal-footer\").html(buttonStr);\n    }\n\n\n    /**\n     * Bootstrap event listeners; used handle extra\n     * setup & teardown required after the underlying\n     * modal has performed certain actions\n     */\n\n    dialog.on(\"hidden.bs.modal\", function(e) {\n      // ensure we don't accidentally intercept hidden events triggered\n      // by children of the current dialog. We shouldn't anymore now BS\n      // namespaces its events; but still worth doing\n      if (e.target === this) {\n        dialog.remove();\n      }\n    });\n\n    /*\n    dialog.on(\"show.bs.modal\", function() {\n      // sadly this doesn't work; show is called *just* before\n      // the backdrop is added so we'd need a setTimeout hack or\n      // otherwise... leaving in as would be nice\n      if (options.backdrop) {\n        dialog.next(\".modal-backdrop\").addClass(\"bootbox-backdrop\");\n      }\n    });\n    */\n\n    dialog.on(\"shown.bs.modal\", function() {\n      dialog.find(\".btn-primary:first\").focus();\n    });\n\n    /**\n     * Bootbox event listeners; experimental and may not last\n     * just an attempt to decouple some behaviours from their\n     * respective triggers\n     */\n\n    dialog.on(\"escape.close.bb\", function(e) {\n      if (callbacks.onEscape) {\n        processCallback(e, dialog, callbacks.onEscape);\n      }\n    });\n\n    /**\n     * Standard jQuery event listeners; used to handle user\n     * interaction with our dialog\n     */\n\n    dialog.on(\"click\", \".modal-footer button\", function(e) {\n      var callbackKey = $(this).data(\"bb-handler\");\n\n      processCallback(e, dialog, callbacks[callbackKey]);\n\n    });\n\n    dialog.on(\"click\", \".bootbox-close-button\", function(e) {\n      // onEscape might be falsy but that's fine; the fact is\n      // if the user has managed to click the close button we\n      // have to close the dialog, callback or not\n      processCallback(e, dialog, callbacks.onEscape);\n    });\n\n    dialog.on(\"keyup\", function(e) {\n      if (e.which === 27) {\n        dialog.trigger(\"escape.close.bb\");\n      }\n    });\n\n    // the remainder of this method simply deals with adding our\n    // dialogent to the DOM, augmenting it with Bootstrap's modal\n    // functionality and then giving the resulting object back\n    // to our caller\n\n    appendTo.append(dialog);\n\n    dialog.modal({\n      backdrop: options.backdrop,\n      keyboard: false,\n      show: false\n    });\n\n    if (options.show) {\n      dialog.modal(\"show\");\n    }\n\n    // @TODO should we return the raw element here or should\n    // we wrap it in an object on which we can expose some neater\n    // methods, e.g. var d = bootbox.alert(); d.hide(); instead\n    // of d.modal(\"hide\");\n\n   /*\n    function BBDialog(elem) {\n      this.elem = elem;\n    }\n\n    BBDialog.prototype = {\n      hide: function() {\n        return this.elem.modal(\"hide\");\n      },\n      show: function() {\n        return this.elem.modal(\"show\");\n      }\n    };\n    */\n\n    return dialog;\n\n  };\n\n  exports.setDefaults = function() {\n    var values = {};\n\n    if (arguments.length === 2) {\n      // allow passing of single key/value...\n      values[arguments[0]] = arguments[1];\n    } else {\n      // ... and as an object too\n      values = arguments[0];\n    }\n\n    $.extend(defaults, values);\n  };\n\n  exports.hideAll = function() {\n    $(\".bootbox\").modal(\"hide\");\n  };\n\n\n  /**\n   * standard locales. Please add more according to ISO 639-1 standard. Multiple language variants are\n   * unlikely to be required. If this gets too large it can be split out into separate JS files.\n   */\n  var locales = {\n    br : {\n      OK      : \"OK\",\n      CANCEL  : \"Cancelar\",\n      CONFIRM : \"Sim\"\n    },\n    da : {\n      OK      : \"OK\",\n      CANCEL  : \"Annuller\",\n      CONFIRM : \"Accepter\"\n    },\n    de : {\n      OK      : \"OK\",\n      CANCEL  : \"Abbrechen\",\n      CONFIRM : \"Akzeptieren\"\n    },\n    en : {\n      OK      : \"OK\",\n      CANCEL  : \"Cancel\",\n      CONFIRM : \"OK\"\n    },\n    es : {\n      OK      : \"OK\",\n      CANCEL  : \"Cancelar\",\n      CONFIRM : \"Aceptar\"\n    },\n    fi : {\n      OK      : \"OK\",\n      CANCEL  : \"Peruuta\",\n      CONFIRM : \"OK\"\n    },\n    fr : {\n      OK      : \"OK\",\n      CANCEL  : \"Annuler\",\n      CONFIRM : \"D'accord\"\n    },\n    it : {\n      OK      : \"OK\",\n      CANCEL  : \"Annulla\",\n      CONFIRM : \"Conferma\"\n    },\n    nl : {\n      OK      : \"OK\",\n      CANCEL  : \"Annuleren\",\n      CONFIRM : \"Accepteren\"\n    },\n    no : {\n      OK      : \"OK\",\n      CANCEL  : \"Avbryt\",\n      CONFIRM : \"OK\"\n    },\n    pl : {\n      OK      : \"OK\",\n      CANCEL  : \"Anuluj\",\n      CONFIRM : \"Potwierdź\"\n    },\n    ru : {\n      OK      : \"OK\",\n      CANCEL  : \"Отмена\",\n      CONFIRM : \"Применить\"\n    },\n    zh_CN : {\n      OK      : \"OK\",\n      CANCEL  : \"取消\",\n      CONFIRM : \"确认\"\n    },\n    zh_TW : {\n      OK      : \"OK\",\n      CANCEL  : \"取消\",\n      CONFIRM : \"確認\"\n    }\n  };\n\n  exports.init = function(_$) {\n    window.bootbox = init(_$ || $);\n  };\n\n  return exports;\n\n}(window.jQuery));\n"],"names":["window","bootbox","init","$","undefined","templates","dialog","header","footer","closeButton","form","inputs","text","email","select","checkbox","appendTo","defaults","locale","backdrop","animate","className","show","exports","processCallback","e","callback","preventDefault","isFunction","modal","each","collection","iterator","index","key","value","sanitize","options","buttons","total","Error","message","extend","obj","k","t","button","type","label","mergeArguments","args","properties","argn","length","mergeDialogOptions","labels","validateButtons","createLabels","apply","i","j","arguments","argument","toLowerCase","toUpperCase","locales","en","allowedButtons","join","alert","ok","onEscape","confirm","cancel","prompt","input","inputType","shouldShow","val","checkedItems","find","_","item","push","title","inputOptions","groups","option","elem","group","attr","append","values","isArray","prop","placeholder","on","click","off","focus","body","buttonStr","callbacks","html","addClass","before","prepend","css","prependTo","after","target","this","remove","callbackKey","data","which","trigger","keyboard","setDefaults","hideAll","br","OK","CANCEL","CONFIRM","da","de","es","fi","fr","it","nl","no","pl","ru","zh_CN","zh_TW","_$","jQuery"],"mappings":"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"}