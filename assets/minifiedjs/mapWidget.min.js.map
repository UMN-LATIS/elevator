{"version":3,"sources":["mapWidget.js"],"names":["map","markers","loadMap","targetElement","clearMarkers","off","remove","layer1","L","esri","basemapLayer","detectRetina","maxNativeZoom","maxZoom","layer2","layer3","layers","setView","control","Topo","Satellite","Satellite Labels","addTo","$","find","attr","on","e","name","trigger","prop","clearLayers","createMarker","latitude","longitude","latitudeElement","longitudeElement","zoomToElement","newMarker","Marker","draggable","addLayer","val","target","getLatLng","lat","lng","centerLeafletMapOnMarker","marker","latLngs","markerBounds","latLngBounds","fitBounds","document","address","this","closest","first","options","position","google","maps","Geocoder","geocode","results","status","GeocoderStatus","OK","geometry","location","length","parent","html","mapElement","revealMap","parentElement","getLayers","latlng","layerGroup"],"mappings":"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","file":"mapWidget.min.js","sourcesContent":["\nvar map = null;\nvar markers = null;\n\nfunction loadMap(targetElement) {\n\tif(map) {\n\t\tclearMarkers();\n\t\tmap.off();\n\t\tmap.remove();\n\t}\n\tlayer1= L.esri.basemapLayer(\"Topographic\", {\n\t\t\"detectRetina\": true,\n\t\tmaxNativeZoom:18,\n\t\tmaxZoom:21\n\t});\n\tlayer2= L.esri.basemapLayer(\"Imagery\", \n\t\t{\"detectRetina\": true,\n\t\tmaxNativeZoom:18,\n\t\tmaxZoom:20\n\t}\n\t);\n\n\tvar layer3 = L.esri.basemapLayer('ImageryLabels');\n\n\n\tmap = L.map(targetElement, {\n\t\tlayers: [layer1],\n\t}).setView([40, -94], 5);\n\n\tL.control.layers({\"Topo\": layer1, \"Satellite\": layer2}, {\"Satellite Labels\": layer3}).addTo(map);\n\n\t// parsley freaks out and breaks the page if checkboxes don't have namesm but leaflet doesn't assign one for the toggles\n\t$(\".leaflet-control-layers-overlays\").find(\".leaflet-control-layers-selector\").attr(\"name\",\"satelliteToggle\");\n\t\n\tmap.on('baselayerchange', function(e) {\n\t  if(e.name == \"Satellite\") {\n\t    $(\".leaflet-control-layers-overlays\").find(\".leaflet-control-layers-selector\").trigger(\"click\");\n\t  }\n\t  else {\n\n\t    if($(\".leaflet-control-layers-overlays\").find(\".leaflet-control-layers-selector\").prop(\"checked\") == true) {\n\n\t      $(\".leaflet-control-layers-overlays\").find(\".leaflet-control-layers-selector\").trigger(\"click\"); \n\t    }\n\t   \n\t  }\n\t});\n\n}\n\n\n\n\n$(document).on(\"click\",\".clearMarker\", function() {\n\tclearMarkers();\n});\n\nfunction clearMarkers() {\n\tif(markers) {\n\t\tmarkers.clearLayers();\n\t}\n}\n\nfunction createMarker(latitude, longitude, latitudeElement, longitudeElement, zoomToElement) {\n\tvar newMarker = new L.Marker([latitude, longitude], {draggable: true});\n\tmarkers.addLayer(newMarker);\n\tmap.addLayer(markers);\n\tnewMarker.on('dragend', function (e) {\n\t\tlatitudeElement.val(e.target.getLatLng().lat);\n\t\tlongitudeElement.val(e.target.getLatLng().lng);\n\t});\n\n\tif(zoomToElement) {\n\t\tcenterLeafletMapOnMarker(newMarker);\n\t}\n\treturn newMarker;\n}\n\n\nfunction centerLeafletMapOnMarker(marker) {\n\tvar latLngs = [ marker.getLatLng() ];\n\tvar markerBounds = L.latLngBounds(latLngs);\n\tmap.fitBounds(markerBounds, {maxZoom: 15});\n}\n\n$(document).on(\"click\",\".searchMap\", function() {\n\tvar address = $(this).closest(\".mapContainer\").find(\".address\").first().val();\n\tvar mapElement = $(this).closest(\".mapContainer\").find(\".mapWidget\");\n\tvar latitudeElement = $(this).closest(\".mapContainer\").find('.latitude');\n\tvar longitudeElement = $(this).closest(\".mapContainer\").find('.longitude');\n\n\tclearMarkers();\n\n\tvar options = {\n\t\tposition: null\n\t};\n\t// TODO: check query limit\n\tvar geocoder = new google.maps.Geocoder();\n\n\tgeocoder.geocode({'address': address}, function(results, status) {\n\t\tif (status == google.maps.GeocoderStatus.OK) {\n\t\t\toptions.position  = results[0].geometry.location;\n\t\t\toptions.geocode   = true;\n\n\t\t\tvar latitude = results[0].geometry.location.lat();\n\t\t\tvar longitude = results[0].geometry.location.lng();\n\t\t\tmarker = createMarker(latitude, longitude, latitudeElement, longitudeElement, true);\n\t\t\tlatitudeElement.val(latitude);\n\t\t\tlongitudeElement.val(longitude);\n\t\t\t$(latitudeElement).trigger(\"change\"); // fire change event so sidebar updates\n\t\t\t$(longitudeElement).trigger(\"change\"); // fire change event so sidebar updates\n\n\t\t}\n\t});\n\n\n});\n\n\n$(document).on(\"change\",\".geoField\", function() {\n\tclearMarkers();\n\n\tvar latitudeElement = $(this).closest(\".mapContainer\").find('.latitude');\n\tvar longitudeElement = $(this).closest(\".mapContainer\").find('.longitude');\n\n\tif(latitudeElement.val().length===0 || longitudeElement.val().length===0) {\n\t\treturn;\n\t}\n\n\tcreateMarker(latitudeElement.val(), longitudeElement.val(),latitudeElement, longitudeElement, false);\n\n});\n\n$(document).on(\"hidden.bs.collapse\", \".maphost\", function(){\n\t\n\tclearMarkers();\n\tmap.off();\n\tmap.remove();\n\n\tvar mapButton = $(this).parent().find(\".mapToggle\");\n\tmapButton.html(\"Reveal Map\");\n\n});\n\n$(document).on(\"shown.bs.collapse\", \".maphost\", function (){\n\tvar mapButton = $(this).parent().find(\".mapToggle\");\n\tmapButton.html(\"Hide Map\");\n\tvar mapElement = $(this).find(\".mapWidget\");\n\tvar latitudeElement = $(this).parent().find('.latitude');\n\tvar longitudeElement = $(this).parent().find('.longitude');\n\trevealMap(mapElement[0], latitudeElement, longitudeElement);\n\n});\n\nvar revealMap = function(parentElement, latitudeElement, longitudeElement) {\n\t\n\tloadMap(parentElement);\n\n\n\tmap.on('click', function(e){\n\t\tif(markers.getLayers().length > 0) {\n\t\t\treturn;\n\t\t}\n\t\tcreateMarker(e.latlng.lat, e.latlng.lng, latitudeElement, longitudeElement, false);\n\t\tlatitudeElement.val(e.latlng.lat);\n\t\tlongitudeElement.val(e.latlng.lng);\n\n\t});\n\n\tvar longitude = longitudeElement.val();\n\tvar latitude = latitudeElement.val();\n\n\tif(!markers) {\n\t\tmarkers = new L.layerGroup();\n\t}\n\n\tif(longitude!==\"\") {\n\t\tcreateMarker(latitude, longitude, latitudeElement, longitudeElement,true);\n\t}\n\telse {\n\t\tmap.setView([46, -94], 6);\n\t}\n\n\n\n}\n"]}