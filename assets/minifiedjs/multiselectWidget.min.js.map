{"version":3,"sources":["multiselectWidget.js"],"names":["loadGroup","targetId","sourceContent","$","find","each","index","el","selectIndex","data","category","entryList","keys","Object","sort","key","value","append","attr","text","groupSelected","selectedItems","replace","val","trigger","loadCascadeNumber","parentGroup","targetCategory","target","i","targetElement","selectedItem","selectElement","empty","isNumeric","length","itemName","document","on","e","this","closest","selectedElements","filter"],"mappings":"AAEA,QAASA,WAAUC,GACAC,cAAcD,EAChCE,GAAE,IAAIF,GAAUG,KAAK,gBAAgBC,KAAK,SAASC,EAAOC,GACzD,GAAIC,GAAcL,EAAEI,GAAIE,KAAK,iBACzBC,EAAWP,EAAEI,GAAIE,KAAK,WAE1B,IAAmB,IAAhBD,EAAmB,CACrB,GAAIG,GAAYT,cAAcD,GAAUS,EACxC,IAAGC,EAAW,CACb,GAAIC,GAAOC,OAAOD,KAAKD,EACvBC,GAAKE,OAELX,EAAEE,KAAKO,EAAK,SAASG,EAAKC,GACzBb,EAAEI,GAAIU,OAAOd,EAAE,qBAAqBe,KAAK,QAAQF,GAAOG,KAAKH,KAE9D,IAAII,GAAgBC,cAAcpB,EAMlCS,GAAWA,EAASY,QAAQ,gBAAiB,IAC1CF,EAAcV,KAChBP,EAAEI,GAAIgB,IAAIH,EAAcV,IACxBP,EAAEI,GAAIiB,QAAQ,eA2BnB,QAASC,mBAAkBC,EAAalB,GAEvC,GAEImB,GAFAC,EAAS1B,cAAcC,EAAEuB,GAAaR,KAAK,OAC3CE,EAAgBC,cAAclB,EAAEuB,GAAaR,KAAK,MAEtD,KAAIW,EAAE,EAAGA,EAAErB,EAAaqB,IAAK,CAC5B,GAAIC,GAAgB3B,EAAEuB,GAAatB,KAAK,uBAAyByB,EAAI,IACrEF,GAAiBxB,EAAE2B,GAAerB,KAAK,WACvC,IAAIsB,GAAe5B,EAAE2B,GAAeP,KACpCK,GAASA,EAAOD,GAAgBI,GAIjC,GAAIC,GAAgB7B,EAAEuB,GAAatB,KAAK,uBAAyBI,EAAc,IAG/E,IADAmB,EAAiBxB,EAAE6B,GAAevB,KAAK,YACnCkB,IAGJC,EAASA,EAAOD,GAChBxB,EAAE6B,GAAeC,QACjB9B,EAAE6B,GAAef,OAAO,qBAEH,mBAAXW,IAAV,CAKA,GAAIhB,GAAOC,OAAOD,KAAKgB,EAWvB,KAVIzB,EAAE+B,UAAUtB,EAAK,KAKpBgB,EAAOd,OACPF,EAAOC,OAAOD,KAAKgB,IAJnBhB,EAAKE,OAONqB,OAASvB,EAAKuB,OACTN,EAAI,EAAGA,EAAIM,OAAQN,IAAK,CAC5Bd,IAAMH,EAAKiB,GACXb,MAAQY,EAAOb,IACf,IAAIqB,EAEHA,GADEjC,EAAE+B,UAAUnB,KACHC,MAGAD,IAEZZ,EAAE6B,GAAef,OAAOd,EAAE,qBAAqBe,KAAK,QAAQkB,GAAUjB,KAAKiB,IAQ5ET,EAAiBA,EAAeL,QAAQ,gBAAiB,IACtDF,EAAcO,KAChBxB,EAAE6B,GAAeT,IAAIH,EAAcO,IACnCxB,EAAE6B,GAAeR,QAAQ,YA/E3BrB,EAAEkC,UAAUC,GAAG,SAAU,eAAgB,SAASC,GAEjD,GAAI/B,GAAcL,EAAEqC,MAAM/B,KAAK,iBAE3BiB,GADWvB,EAAEqC,MAAM/B,KAAK,YACVN,EAAEqC,MAAMC,QAAQ,sBAC9BC,EAAmBvC,EAAEuB,GAAatB,KAAK,wBAAwBuC,OAAO,WACzE,MAAOxC,GAAEqC,MAAMtB,KAAK,sBAAwBV,GAG7CL,GAAEuC,GAAkBrC,KAAK,SAASC,EAAOC,GACxCJ,EAAEI,GAAIgB,IAAI,MAIXE,kBAAkBC,EAAalB,EAAY","file":"multiselectWidget.min.js","sourcesContent":["\n\nfunction loadGroup(targetId) {\n\tvar targetArray = sourceContent[targetId];\n\t$(\"#\"+targetId).find(\".multiSelect\").each(function(index, el) {\n\t\tvar selectIndex = $(el).data(\"cascadenumber\");\n\t\tvar category = $(el).data(\"category\");\n\n\t\tif(selectIndex === 0) {\n\t\t\tvar entryList = sourceContent[targetId][category];\n\t\t\tif(entryList) {\n\t\t\t\tvar keys = Object.keys(entryList);\n\t\t\t\tkeys.sort();\n\n\t\t\t\t$.each(keys,function(key, value) {\n\t\t\t\t\t$(el).append($(\"<option></option>\").attr(\"value\",value).text(value));\n\t\t\t\t});\n\t\t\t\tvar groupSelected = selectedItems[targetId];\n\t\t\t\t// console.log(category);\n\t\t\t\t// console.log(selectedItems[targetId]);\n\t\t\t\t// console.log(groupSelected);\n\t\t\t\t// this is a horrible hack.  We store categories with sanitized key names, but our multiselector stores them properly.\n\t\t\t\t//\n\t\t\t\tcategory = category.replace(/[^A-Za-z0-9]/g, '');\n\t\t\t\tif(groupSelected[category]) {\n\t\t\t\t\t$(el).val(groupSelected[category]);\n\t\t\t\t\t$(el).trigger(\"change\");\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t});\n}\n\n$(document).on(\"change\", \".multiSelect\", function(e) {\n\n\tvar selectIndex = $(this).data(\"cascadenumber\");\n\tvar category = $(this).data(\"category\");\n\tvar parentGroup = $(this).closest('.multiselectGroup');\n\tvar selectedElements = $(parentGroup).find(\"[data-cascadenumber]\").filter(function() {\n\t\treturn $(this).attr(\"data-cascadenumber\") > selectIndex;\n\t});\n\n\t$(selectedElements).each(function(index, el) {\n\t\t$(el).val(\"\");\n\t});\n\n\n\tloadCascadeNumber(parentGroup, selectIndex+1);\n\n});\n\n\nfunction loadCascadeNumber(parentGroup, selectIndex) {\n\n\tvar target = sourceContent[$(parentGroup).attr(\"id\")];\n\tvar groupSelected = selectedItems[$(parentGroup).attr(\"id\")];\n\tvar targetCategory;\n\tfor(i=0; i<selectIndex; i++) {\n\t\tvar targetElement = $(parentGroup).find(\"[data-cascadenumber=\" + i + \"]\");\n\t\ttargetCategory = $(targetElement).data(\"category\");\n\t\tvar selectedItem = $(targetElement).val();\n\t\ttarget = target[targetCategory][selectedItem];\n\n\t}\n\n\tvar selectElement = $(parentGroup).find(\"[data-cascadenumber=\" + selectIndex + \"]\");\n\n\ttargetCategory = $(selectElement).data(\"category\");\n\tif(!targetCategory) {\n\t\treturn;\n\t}\n\ttarget = target[targetCategory];\n\t$(selectElement).empty();\n\t$(selectElement).append(\"<option></option>\");\n\n\tif(typeof target === 'undefined') {\n\t\treturn;\n\t}\n\n\t// sort alphabetically, handle both object and array cases\n\tvar keys = Object.keys(target);\n\tif(!$.isNumeric(keys[0])) {\n\n\t\tkeys.sort();\n\t}\n\telse {\n\t\ttarget.sort();\n\t\tkeys = Object.keys(target);\n\t}\n\n\tlength = keys.length;\n\tfor (i = 0; i < length; i++) {\n\t\tkey = keys[i];\n\t\tvalue = target[key];\n\t\tvar itemName;\n\t\tif($.isNumeric(key)) {\n\t\t\titemName = value;\n\t\t}\n\t\telse {\n\t\t\titemName = key;\n\t\t}\n\t\t$(selectElement).append($(\"<option></option>\").attr(\"value\",itemName).text(itemName));\n\t}\n\n\n\t// $.each(target, function(key, value) {\n\n\n\t// });\n\ttargetCategory = targetCategory.replace(/[^A-Za-z0-9]/g, '');\n\tif(groupSelected[targetCategory]) {\n\t\t$(selectElement).val(groupSelected[targetCategory]);\n\t\t$(selectElement).trigger(\"change\");\n\n\t}\n\n\n}"],"sourceRoot":"/source/"}