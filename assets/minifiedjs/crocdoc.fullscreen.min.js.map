{"version":3,"file":"crocdoc.fullscreen.min.js","sources":["crocdoc.fullscreen.js"],"sourcesContent":["/**\n * @fileOverview The fullscreen plugin\n * @author lakenen\n */\n\nCrocodoc.addPlugin('fullscreen', function (scope) {\n    'use strict';\n\n    // shorter way of defining\n    // 'fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange'\n    var FULLSCREENCHANGE_EVENT = ['', ' webkit', ' moz', ' ']\n        .join('fullscreenchange') +\n        // @NOTE: IE 11 uses upper-camel-case for this, which is apparently necessary\n        'MSFullscreenChange';\n\n    var $el, el,\n        util = scope.getUtility('common'),\n        viewerConfig = scope.getConfig(),\n        viewerAPI = viewerConfig.api,\n        requestFullscreen,\n        cancelFullscreen,\n        useFakeFullscreen = true,\n        isFakeFullscreen = false;\n\n    /**\n     * Return true if full screen is active\n     * @returns {boolean}\n     * @private\n     */\n    function isFullscreen() {\n        return document.fullScreenElement ||\n            document.webkitFullscreenElement ||\n            document.mozFullScreenElement ||\n            document.msFullscreenElement ||\n            isFakeFullscreen;\n    }\n\n    /**\n     * Handle fullscreenchange events\n     * @returns {void}\n     * @private\n     */\n    function fullscreenchangeHandler() {\n        viewerAPI.fire('fullscreenchange');\n        if (isFullscreen()) {\n            $el.addClass('crocodoc-fullscreen');\n            viewerAPI.fire('fullscreenenter');\n        } else {\n            $el.removeClass('crocodoc-fullscreen');\n            viewerAPI.fire('fullscreenexit');\n        }\n    }\n\n    /**\n     * Handle keydown events\n     * @param   {Event} event The keydown event\n     * @returns {void}\n     * @private\n     */\n    function handleKeydown(event) {\n        if (event.keyCode === 27) { // ESC\n            exitFullscreen();\n        }\n    }\n\n    /**\n     * Enter fake fullscreen mode\n     * @returns {void}\n     * @private\n     */\n    function fakeRequestFullscreen() {\n        if (useFakeFullscreen) {\n            isFakeFullscreen = true;\n            $(window).on('keydown', handleKeydown);\n            $el.addClass('crocodoc-fakefullscreen');\n            fullscreenchangeHandler();\n        }\n    }\n\n    /**\n     * Exit fake fullscreen mode\n     * @returns {void}\n     * @private\n     */\n    function fakeCancelFullscreen() {\n        isFakeFullscreen = false;\n        $(window).off('keydown', handleKeydown);\n        $el.removeClass('crocodoc-fakefullscreen');\n        fullscreenchangeHandler();\n    }\n\n    /**\n     * @param {Element} element The element to make full screen\n     * @returns {void}\n     * @private\n     */\n    function enterFullscreen() {\n        requestFullscreen.call(el);\n    }\n\n    /**\n     * Exit full screen\n     * @returns {void}\n     * @private\n     */\n    function exitFullscreen() {\n        cancelFullscreen.call(document);\n    }\n\n    /**\n     * Return true if native fullscreen mode is supported\n     * @returns {Boolean} Whether fullscreen mode is supported\n     * @private\n     */\n    function isNativeFullscreenSupported() {\n        return requestFullscreen !== fakeRequestFullscreen;\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n\n        /**\n         * Initialize the fullscreen plugin\n         * @param {Object} config Config options for the fullscreen plugin\n         * @param {Element} config.element The element to use for fullscreen\n         * @param {boolen} config.useFakeFullscreen Whether to use fake fullscreen mode\n         * @returns {void}\n         */\n        init: function (config) {\n            config = config || {};\n            if (typeof config.useFakeFullscreen !== 'undefined') {\n                useFakeFullscreen = config.useFakeFullscreen;\n            }\n\n            if (viewerConfig.useWindowAsViewport) {\n                // fake fullscreen mode is redundant if the window is used as\n                // the viewport, so turn it off\n                useFakeFullscreen = false;\n                el = document.documentElement;\n                $el = $(el);\n            } else {\n                if (config.element) {\n                    $el = $(config.element);\n                } else {\n                    $el = viewerConfig.$el;\n                }\n                el = $el[0];\n            }\n\n            // init browser-specific request/cancel fullscreen methods\n            requestFullscreen = el.requestFullScreen ||\n                                el.requestFullscreen ||\n                                el.mozRequestFullScreen ||\n                                el.webkitRequestFullScreen ||\n                                el.msRequestFullscreen ||\n                                fakeRequestFullscreen;\n\n            // fullscreen APIs are completely insane\n            cancelFullscreen =  document.cancelFullScreen ||\n                                document.exitFullscreen ||\n                                document.mozCancelFullScreen ||\n                                document.webkitCancelFullScreen ||\n                                document.msExitFullscreen ||\n                                fakeCancelFullscreen;\n\n            // add enter/exit fullscreen methods to the viewer API\n            util.extend(viewerAPI, {\n                enterFullscreen: enterFullscreen,\n                exitFullscreen: exitFullscreen,\n                isFullscreen: isFullscreen,\n                isFullscreenSupported: isNativeFullscreenSupported\n            });\n\n            $(document).on(FULLSCREENCHANGE_EVENT, fullscreenchangeHandler);\n        },\n\n        /**\n         * Destroy the fullscreen plugin\n         * @returns {void}\n         */\n        destroy: function () {\n            viewerAPI.exitFullscreen();\n            $(document).off(FULLSCREENCHANGE_EVENT, fullscreenchangeHandler);\n        }\n    };\n});\n"],"names":["Crocodoc","addPlugin","scope","$el","el","requestFullscreen","cancelFullscreen","FULLSCREENCHANGE_EVENT","join","util","getUtility","viewerConfig","getConfig","viewerAPI","api","useFakeFullscreen","isFakeFullscreen","isFullscreen","document","fullScreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","fullscreenchangeHandler","fire","addClass","removeClass","handleKeydown","event","keyCode","exitFullscreen","fakeRequestFullscreen","$","window","on","fakeCancelFullscreen","off","enterFullscreen","call","isNativeFullscreenSupported","init","config","useWindowAsViewport","documentElement","element","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","extend","isFullscreenSupported","destroy"],"mappings":"AAKAA,SAASC,UAAU,aAAc,SAAUC,GAKvC,IAKIC,EAAKC,EAILC,EACAC,EAVAC,EAAyB,CAAC,GAAI,UAAW,OAAQ,KAChDC,KAAK,kBAAkB,EAExB,qBAGAC,EAAOP,EAAMQ,WAAW,QAAQ,EAChCC,EAAeT,EAAMU,UAAU,EAC/BC,EAAYF,EAAaG,IAGzBC,EAAoB,CAAA,EACpBC,EAAmB,CAAA,EAOvB,SAASC,IACL,OAAOC,SAASC,mBACZD,SAASE,yBACTF,SAASG,sBACTH,SAASI,qBACTN,CACR,CAOA,SAASO,IACLV,EAAUW,KAAK,kBAAkB,EAC7BP,EAAa,GACbd,EAAIsB,SAAS,qBAAqB,EAClCZ,EAAUW,KAAK,iBAAiB,IAEhCrB,EAAIuB,YAAY,qBAAqB,EACrCb,EAAUW,KAAK,gBAAgB,EAEvC,CAQA,SAASG,EAAcC,GACG,KAAlBA,EAAMC,SACNC,EAAe,CAEvB,CAOA,SAASC,IACDhB,IACAC,EAAmB,CAAA,EACnBgB,EAAEC,MAAM,EAAEC,GAAG,UAAWP,CAAa,EACrCxB,EAAIsB,SAAS,yBAAyB,EACtCF,EAAwB,EAEhC,CAOA,SAASY,IACLnB,EAAmB,CAAA,EACnBgB,EAAEC,MAAM,EAAEG,IAAI,UAAWT,CAAa,EACtCxB,EAAIuB,YAAY,yBAAyB,EACzCH,EAAwB,CAC5B,CAOA,SAASc,IACLhC,EAAkBiC,KAAKlC,CAAE,CAC7B,CAOA,SAAS0B,IACLxB,EAAiBgC,KAAKpB,QAAQ,CAClC,CAOA,SAASqB,IACL,OAAOlC,IAAsB0B,CACjC,CAMA,MAAO,CASHS,KAAM,SAAUC,GAE4B,KAAA,KADxCA,EAASA,GAAU,IACD1B,oBACdA,EAAoB0B,EAAO1B,mBAG3BJ,EAAa+B,qBAGb3B,EAAoB,CAAA,EACpBX,EAAKc,SAASyB,gBACdxC,EAAM6B,EAAE5B,CAAE,IAGND,EADAsC,EAAOG,QACDZ,EAAES,EAAOG,OAAO,EAEhBjC,EAAaR,IAEvBC,EAAKD,EAAI,IAIbE,EAAoBD,EAAGyC,mBACHzC,EAAGC,mBACHD,EAAG0C,sBACH1C,EAAG2C,yBACH3C,EAAG4C,qBACHjB,EAGpBzB,EAAoBY,SAAS+B,kBACT/B,SAASY,gBACTZ,SAASgC,qBACThC,SAASiC,wBACTjC,SAASkC,kBACTjB,EAGpB1B,EAAK4C,OAAOxC,EAAW,CACnBwB,gBAAiBA,EACjBP,eAAgBA,EAChBb,aAAcA,EACdqC,sBAAuBf,CAC3B,CAAC,EAEDP,EAAEd,QAAQ,EAAEgB,GAAG3B,EAAwBgB,CAAuB,CAClE,EAMAgC,QAAS,WACL1C,EAAUiB,eAAe,EACzBE,EAAEd,QAAQ,EAAEkB,IAAI7B,EAAwBgB,CAAuB,CACnE,CACJ,CACJ,CAAC"}