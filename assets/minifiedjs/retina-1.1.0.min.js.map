{"version":3,"sources":["retina-1.1.0.js"],"names":["Retina","suffixReplace","match","config","retinaImageSuffix","RetinaImagePath","path","at_2x_path","this","perform_check","undefined","document","createElement","locationObject","href","pathname","replace","regexMatch","parts","split","join","RetinaImage","el","getAttribute","length","that","check_2x_variant","hasVariant","swap","root","exports","window","check_mime_type","force_original_dimensions","configure","options","prop","hasOwnProperty","init","context","existing_onload","onload","i","image","images","getElementsByTagName","retinaImages","getAttributeNode","src","substr","push","isRetina","mediaQuery","devicePixelRatio","matchMedia","matches","confirmed_paths","prototype","is_external","domain","callback","http","XMLHttpRequest","open","onreadystatechange","readyState","status","type","getResponseHeader","send","load","complete","style","width","height","classList","contains","setAttribute","naturalHeight","offsetHeight","setTimeout"],"mappings":"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","file":"retina-1.1.0.min.js","sourcesContent":["(function() {\n    var root = (typeof exports === 'undefined' ? window : exports);\n    var config = {\n        // An option to choose a suffix for 2x images\n        retinaImageSuffix : '@2x',\n\n        // Ensure Content-Type is an image before trying to load @2x image\n        // https://github.com/imulus/retinajs/pull/45)\n        check_mime_type: true,\n\n        // Resize high-resolution images to original image's pixel dimensions\n        // https://github.com/imulus/retinajs/issues/8\n        force_original_dimensions: true\n    };\n\n    function Retina() {}\n\n    root.Retina = Retina;\n\n    Retina.configure = function(options) {\n        if (options === null) {\n            options = {};\n        }\n\n        for (var prop in options) {\n            if (options.hasOwnProperty(prop)) {\n                config[prop] = options[prop];\n            }\n        }\n    };\n\n    Retina.init = function(context) {\n        if (context === null) {\n            context = root;\n        }\n\n        var existing_onload = context.onload || function(){};\n\n        context.onload = function() {\n            var images = document.getElementsByTagName('img'), retinaImages = [], i, image;\n            for (i = 0; i < images.length; i += 1) {\n                image = images[i];\n                // dcl3: dont try to load b64 images\n                if (!!!image.getAttributeNode('data-no-retina') && (image.src.substr(0,8)!= \"data:ima\")) {\n                    retinaImages.push(new RetinaImage(image));\n                }\n            }\n            existing_onload();\n        };\n    };\n\n    Retina.isRetina = function(){\n        var mediaQuery = '(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-resolution: 1.5dppx)';\n\n        if (root.devicePixelRatio > 1) {\n            return true;\n        }\n\n        if (root.matchMedia && root.matchMedia(mediaQuery).matches) {\n            return true;\n        }\n\n        return false;\n    };\n\n\n    var regexMatch = /\\.\\w+$/;\n    function suffixReplace (match) {\n        return config.retinaImageSuffix + match;\n    }\n\n    function RetinaImagePath(path, at_2x_path) {\n        this.path = path || '';\n        if (typeof at_2x_path !== 'undefined' && at_2x_path !== null) {\n            this.at_2x_path = at_2x_path;\n            this.perform_check = false;\n        } else {\n            if (undefined !== document.createElement) {\n                var locationObject = document.createElement('a');\n                locationObject.href = this.path;\n                locationObject.pathname = locationObject.pathname.replace(regexMatch, suffixReplace);\n                this.at_2x_path = locationObject.href;\n            } else {\n                var parts = this.path.split('?');\n                parts[0] = parts[0].replace(regexMatch, suffixReplace);\n                this.at_2x_path = parts.join('?');\n            }\n            this.perform_check = true;\n        }\n    }\n\n    root.RetinaImagePath = RetinaImagePath;\n\n    RetinaImagePath.confirmed_paths = [];\n\n    RetinaImagePath.prototype.is_external = function() {\n        return !!(this.path.match(/^https?\\:/i) && !this.path.match('//' + document.domain) && this.path.match(/^s3/i));\n    };\n\n    RetinaImagePath.prototype.check_2x_variant = function(callback) {\n        var http, that = this;\n        if (this.is_external()) {\n            return callback(false);\n        } else if (!this.perform_check && typeof this.at_2x_path !== 'undefined' && this.at_2x_path !== null) {\n            return callback(true);\n        } else if (this.at_2x_path in RetinaImagePath.confirmed_paths) {\n            return callback(true);\n        } else {\n            http = new XMLHttpRequest();\n            http.open('HEAD', this.at_2x_path);\n            http.onreadystatechange = function() {\n                if (http.readyState !== 4) {\n                    return callback(false);\n                }\n\n                if (http.status >= 200 && http.status <= 399) {\n                    if (config.check_mime_type) {\n                        var type = http.getResponseHeader('Content-Type');\n                        if (type === null || !type.match(/^image/i)) {\n                            return callback(false);\n                        }\n                    }\n\n                    RetinaImagePath.confirmed_paths.push(that.at_2x_path);\n                    return callback(true);\n                } else {\n                    return callback(false);\n                }\n            };\n            http.send();\n        }\n    };\n\n\n    function RetinaImage(el) {\n        this.el = el;\n\n        // if we don't actually have a path, don't try to check it.\n        if((this.el.getAttribute('src') === null || this.el.getAttribute('src').length ===0) && (this.el.getAttribute('data-at2x') === null || this.el.getAttribute('data-at2x').length ===0)) {\n            return;\n        }\n\n        this.path = new RetinaImagePath(this.el.getAttribute('src'), this.el.getAttribute('data-at2x'));\n\n        var that = this;\n        this.path.check_2x_variant(function(hasVariant) {\n            if (hasVariant) {\n                that.swap();\n            }\n        });\n    }\n\n    root.RetinaImage = RetinaImage;\n\n    RetinaImage.prototype.swap = function(path) {\n        if (typeof path === 'undefined') {\n            path = this.path.at_2x_path;\n        }\n\n        var that = this;\n        function load() {\n            if (! that.el.complete) {\n                setTimeout(load, 5);\n            } else {\n                if (config.force_original_dimensions) {\n\n                  if(!that.el.style.width && !that.el.style.height && !that.el.classList.contains('noResizeRetina')) {\n// TODO: WTF? dcl3\n                    //    that.el.setAttribute('width', that.el.naturalWidth || that.el.offsetWidth);\n                        that.el.setAttribute('height',that.el.naturalHeight || that.el.offsetHeight);\n                  }\n                }\n\n\n                that.el.setAttribute('src', path);\n            }\n        }\n        load();\n    };\n\n\n    if (Retina.isRetina()) {\n        Retina.init(root);\n    }\n})();\n"],"sourceRoot":"/source/"}