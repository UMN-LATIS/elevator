{"version":3,"file":"parsley.min.js","sources":["parsley.js"],"sourcesContent":["/*\n * Parsley.js allows you to verify your form inputs frontend side, without writing a line of javascript. Or so..\n *\n * Author: Guillaume Potier - @guillaumepotier\n*/\n\n!function ($) {\n\n  'use strict';\n\n  /**\n  * Validator class stores all constraints functions and associated messages.\n  * Provides public interface to add, remove or modify them\n  *\n  * @class Validator\n  * @constructor\n  */\n  var Validator = function ( options ) {\n    /**\n    * Error messages\n    *\n    * @property messages\n    * @type {Object}\n    */\n    this.messages = {\n        defaultMessage: \"This value seems to be invalid.\"\n      , type: {\n            email:      \"This value should be a valid email.\"\n          , url:        \"This value should be a valid url.\"\n          , urlstrict:  \"This value should be a valid url.\"\n          , number:     \"This value should be a valid number.\"\n          , digits:     \"This value should be digits.\"\n          , dateIso:    \"This value should be a valid date (YYYY-MM-DD).\"\n          , alphanum:   \"This value should be alphanumeric.\"\n          , phone:      \"This value should be a valid phone number.\"\n        }\n      , notnull:        \"This value should not be null.\"\n      , notblank:       \"This value should not be blank.\"\n      , required:       \"This value is required.\"\n      , regexp:         \"This value seems to be invalid.\"\n      , min:            \"This value should be greater than or equal to %s.\"\n      , max:            \"This value should be lower than or equal to %s.\"\n      , range:          \"This value should be between %s and %s.\"\n      , minlength:      \"This value is too short. It should have %s characters or more.\"\n      , maxlength:      \"This value is too long. It should have %s characters or less.\"\n      , rangelength:    \"This value length is invalid. It should be between %s and %s characters long.\"\n      , mincheck:       \"You must select at least %s choices.\"\n      , maxcheck:       \"You must select %s choices or less.\"\n      , rangecheck:     \"You must select between %s and %s choices.\"\n      , equalto:        \"This value should be the same.\"\n    },\n\n    this.init( options );\n  };\n\n  Validator.prototype = {\n\n    constructor: Validator\n\n    /**\n    * Validator list. Built-in validators functions\n    *\n    * @property validators\n    * @type {Object}\n    */\n    , validators: {\n      notnull: function () {\n        return {\n          validate: function ( val ) {\n            return val.length > 0;\n          }\n          , priority: 2\n        }\n      }\n      , notblank: function () {\n        return {\n          validate: function ( val ) {\n            return 'string' === typeof val && '' !== val.replace( /^\\s+/g, '' ).replace( /\\s+$/g, '' );\n          }\n          , priority: 2\n        }\n      }\n      , required: function () {\n        var that = this;\n        return {\n          validate: function ( val ) {\n            // for checkboxes and select multiples. Check there is at least one required value\n            if ( 'object' === typeof val ) {\n              for ( var i in val ) {\n                if ( that.required().validate( val[ i ] ) ) {\n                  return true;\n                }\n              }\n\n              return false;\n            }\n\n            return that.notnull().validate( val ) && that.notblank().validate( val );\n          }\n          , priority: 512\n        }\n      }\n      , type: function () {\n        return {\n          validate: function ( val, type ) {\n            var regExp;\n\n            switch ( type ) {\n              case 'number':\n                regExp = /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/;\n                break;\n              case 'digits':\n                regExp = /^\\d+$/;\n                break;\n              case 'alphanum':\n                regExp = /^\\w+$/;\n                break;\n              case 'email':\n                regExp = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))){2,6}$/i;\n                break;\n              case 'url':\n                val = new RegExp( '(https?|s?ftp|git)', 'i' ).test( val ) ? val : 'http://' + val;\n                /* falls through */\n              case 'urlstrict':\n                regExp = /^(https?|s?ftp|git):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n                break;\n              case 'dateIso':\n                regExp = /^(\\d{4})\\D?(0[1-9]|1[0-2])\\D?([12]\\d|0[1-9]|3[01])$/;\n                break;\n              case 'phone':\n                regExp = /^((\\+\\d{1,3}(-| )?\\(?\\d\\)?(-| )?\\d{1,5})|(\\(?\\d{2,6}\\)?))(-| )?(\\d{3,4})(-| )?(\\d{4})(( x| ext)\\d{1,5}){0,1}$/;\n                break;\n              default:\n                return false;\n            }\n\n            // test regExp if not null\n            return '' !== val ? regExp.test( val ) : false;\n          }\n          , priority: 256\n        }\n      }\n      , regexp: function () {\n        return {\n          validate: function ( val, regExp, self ) {\n            return new RegExp( regExp, self.options.regexpFlag || '' ).test( val );\n          }\n          , priority: 64\n        }\n      }\n      , minlength: function () {\n        return {\n          validate: function ( val, min ) {\n            return val.length >= min;\n          }\n          , priority: 32\n        }\n      }\n      , maxlength: function () {\n        return {\n          validate: function ( val, max ) {\n            return val.length <= max;\n          }\n          , priority: 32\n        }\n      }\n      , rangelength: function () {\n        var that = this;\n        return {\n          validate: function ( val, arrayRange ) {\n            return that.minlength().validate( val, arrayRange[ 0 ] ) && that.maxlength().validate( val, arrayRange[ 1 ] );\n          }\n          , priority: 32\n        }\n      }\n      , min: function () {\n        return {\n          validate: function ( val, min ) {\n            return Number( val ) >= min;\n          }\n          , priority: 32\n        }\n      }\n      , max: function () {\n        return {\n          validate: function ( val, max ) {\n            return Number( val ) <= max;\n          }\n          , priority: 32\n        }\n      }\n      , range: function () {\n        var that = this;\n        return {\n          validate: function ( val, arrayRange ) {\n            return that.min().validate( val, arrayRange[ 0 ] ) && that.max().validate( val, arrayRange[ 1 ] );\n          }\n          , priority: 32\n        }\n      }\n      , equalto: function () {\n        return {\n          validate: function ( val, elem, self ) {\n            self.options.validateIfUnchanged = true;\n            return val === $( elem ).val();\n          }\n          , priority: 64\n        }\n      }\n      , remote: function () {\n        return {\n          validate: function ( val, url, self ) {\n            var result = null\n              , data = {}\n              , dataType = {};\n\n            data[ self.$element.attr( 'name' ) ] = val;\n\n            if ( 'undefined' !== typeof self.options.remoteDatatype )\n              dataType = { dataType: self.options.remoteDatatype };\n\n            var manage = function ( isConstraintValid, message ) {\n              // remove error message if we got a server message, different from previous message\n              if ( 'undefined' !== typeof message && 'undefined' !== typeof self.Validator.messages.remote && message !== self.Validator.messages.remote ) {\n                $( self.UI.ulError + ' .remote' ).remove();\n              }\n\n              if (false === isConstraintValid) {\n                  self.options.listeners.onFieldError( self.element, self.constraints, self );\n              } else if (true === isConstraintValid && false === self.options.listeners.onFieldSuccess( self.element, self.constraints, self )) {\n                  // if onFieldSuccess returns (bool) false, consider that field is invalid\n                  isConstraintValid = false;\n              }\n\n              self.updtConstraint( { name: 'remote', valid: isConstraintValid }, message );\n              self.manageValidationResult();\n            };\n\n            // transform string response into object\n            var handleResponse = function ( response ) {\n              if ( 'object' === typeof response ) {\n                return response;\n              }\n\n              try {\n                response = $.parseJSON( response );\n              } catch ( err ) {}\n\n              return response;\n            }\n\n            var manageErrorMessage = function ( response ) {\n              return 'object' === typeof response && null !== response ? ( 'undefined' !== typeof response.error ? response.error : ( 'undefined' !== typeof response.message ? response.message : null ) ) : null;\n            }\n\n            $.ajax( $.extend( {}, {\n                url: url\n              , data: data\n              , type: self.options.remoteMethod || 'GET'\n              , success: function ( response ) {\n                response = handleResponse( response );\n                manage( 1 === response || true === response || ( 'object' === typeof response && null !== response && 'undefined' !== typeof response.success ), manageErrorMessage( response )\n                );\n              }\n              , error: function ( response ) {\n                response = handleResponse( response );\n                manage( false, manageErrorMessage( response ) );\n              }\n            }, dataType ) );\n\n            return result;\n          }\n          , priority: 64\n        }\n      }\n\n      /**\n      * Aliases for checkboxes constraints\n      */\n      , mincheck: function () {\n        var that = this;\n        return {\n          validate: function ( obj, val ) { return that.minlength().validate( obj, val ) }\n          , priority: 32\n        }\n      }\n      , maxcheck: function () {\n        var that = this;\n        return {\n          validate: function ( obj, val ) { return that.maxlength().validate( obj, val ) }\n          , priority: 32\n        }\n      }\n      , rangecheck: function () {\n        var that = this;\n        return {\n          validate: function ( obj, arrayRange ) { return that.rangelength().validate( obj, arrayRange ) }\n          , priority: 32\n        }\n      }\n    }\n\n    /*\n    * Register custom validators and messages\n    */\n    , init: function ( options ) {\n      var customValidators = options.validators\n        , customMessages = options.messages\n        , key;\n\n      for ( key in customValidators ) {\n        this.addValidator(key, customValidators[ key ]);\n      }\n\n      for ( key in customMessages ) {\n        this.addMessage(key, customMessages[ key ]);\n      }\n    }\n\n    /**\n    * Replace %s placeholders by values\n    *\n    * @method formatMesssage\n    * @param {String} message Message key\n    * @param {Mixed} args Args passed by validators functions. Could be string, number or object\n    * @return {String} Formatted string\n    */\n    , formatMesssage: function ( message, args ) {\n\n      if ( 'object' === typeof args ) {\n        for ( var i in args ) {\n          message = this.formatMesssage( message, args[ i ] );\n        }\n\n        return message;\n      }\n\n      return 'string' === typeof message ? message.replace( new RegExp( '%s', 'i' ), args ) : '';\n    }\n\n    /**\n    * Add / override a validator in validators list\n    *\n    * @method addValidator\n    * @param {String} name Validator name.\n    * @param {Function} fn Validator. Must return { validator: fn(), priority: int }\n    */\n    , addValidator: function ( name, fn ) {\n      if ('undefined' === typeof fn().validate) {\n        throw new Error( 'Validator `' + name + '` must have a validate method. See more here: http://parsleyjs.org/documentation.html#javascript-general' );\n      }\n\n      // add default prioirty if not given.\n      if ('undefined' === typeof fn().priority) {\n        fn = {\n            validate: fn().validate\n          , priority: 32\n        };\n\n        // Warn if possible\n        if (window.console && window.console.warn) {\n          window.console.warn( 'Validator `' + name + '` should have a priority. Default priority 32 given' );\n        }\n      }\n\n      this.validators[ name ] = fn;\n    }\n\n    /**\n    * Add / override error message\n    *\n    * @method addMessage\n    * @param {String} name Message name. Will automatically be binded to validator with same name\n    * @param {String} message Message\n    */\n    , addMessage: function ( key, message, type ) {\n\n      if ( 'undefined' !== typeof type && true === type ) {\n        this.messages.type[ key ] = message;\n        return;\n      }\n\n      // custom types messages are a bit tricky cuz' nested ;)\n      if ( 'type' === key ) {\n        for ( var i in message ) {\n          this.messages.type[ i ] = message[ i ];\n        }\n\n        return;\n      }\n\n      this.messages[ key ] = message;\n    }\n  };\n\n  var ParsleyUI = function ( ParsleyInstance ) {\n    this.init( ParsleyInstance );\n  };\n\n  ParsleyUI.prototype = {\n\n    constructor: ParsleyUI\n\n    , init: function ( ParsleyInstance ) {\n      this.ParsleyInstance = ParsleyInstance;\n      this.hash = ParsleyInstance.hash;\n      this.options = this.ParsleyInstance.options;\n      this.errorClassHandler = this.options.errors.classHandler( this.ParsleyInstance.element, this.ParsleyInstance.isRadioOrCheckbox ) || this.ParsleyInstance.$element;\n      this.ulErrorManagement();\n    }\n\n    /**\n    * Manage ul error Container\n    *\n    * @private\n    * @method ulErrorManagement\n    */\n    , ulErrorManagement: function () {\n      this.ulError = '#' + this.hash;\n      this.ulTemplate = $( this.options.errors.errorsWrapper ).attr( 'id', this.hash ).addClass( 'parsley-error-list' );\n    }\n\n    /**\n    * Remove li / ul error\n    *\n    * @method removeError\n    * @param  {String} constraintName Method Name\n    * @return ParsleyUI\n    */\n    , removeError: function ( constraintName ) {\n      var liError = this.ulError + ' .' + constraintName\n        , that = this;\n\n      this.options.animate ? $( liError ).fadeOut( this.options.animateDuration, function () {\n        $( this ).remove();\n\n        if ( that.ulError && $( that.ulError ).children().length === 0 ) {\n          that.removeErrors();\n        } } ) : $( liError ).remove();\n\n        return this;\n    }\n\n    /**\n    * Add li error\n    *\n    * @method addError\n    * @param  {Object} { minlength: \"error message for minlength constraint\" }\n    * @return ParsleyUI\n    */\n    , addError: function ( error ) {\n      for ( var constraint in error ) {\n        var liTemplate = $( this.options.errors.errorElem ).addClass( constraint );\n\n        $( this.ulError ).append( this.options.animate ? $( liTemplate ).html( error[ constraint ] ).hide().fadeIn( this.options.animateDuration ) : $( liTemplate ).html( error[ constraint ] ) );\n      }\n\n      return this;\n    }\n\n    /**\n    * Update existing error if text has changed\n    *\n    * @method updateError\n    * @param  {Object} { minlength: \"error message for minlength constraint\" }\n    * @return ParsleyUI\n    */\n    , updateError: function ( error ) {\n      for ( var constraint in error ) {\n        if ( error[ constraint ] !==  $( this.ulError +  \" > li.\" + constraint ).html() ) {\n          this.removeError( constraint ).addError( error );\n        }\n      }\n\n      return this;\n    }\n\n    /**\n    * Remove all ul / li errors\n    *\n    * @method removeErrors\n    * @return ParsleyUI\n    */\n    , removeErrors: function () {\n      this.options.animate ? $( this.ulError ).fadeOut( this.options.animateDuration, function () { $( this ).remove(); } ) : $( this.ulError ).remove();\n\n      return this;\n    }\n\n    /**\n    * Remove ul errors and parsley error or success classes\n    *\n    * @method reset\n    * @return ParsleyUI\n    */\n    , reset: function () {\n      this.ParsleyInstance.valid = null;\n      this.removeErrors();\n      this.ParsleyInstance.validatedOnce = false;\n      this.errorClassHandler.removeClass( this.options.successClass ).removeClass( this.options.errorClass );\n\n      for ( var constraint in this.constraints ) {\n        this.constraints[ constraint ].valid = null;\n      }\n\n      return this;\n    }\n\n    /**\n    * Add li / ul errors messages\n    *\n    * @method manageError\n    * @param  {Object} constraint\n    * @return ParsleyUI\n    */\n    , manageError: function ( constraint ) {\n      // display ulError container if it has been removed previously (or never shown)\n      if ( !$( this.ulError ).length ) {\n        this.manageErrorContainer();\n      }\n\n      // TODO: refacto properly\n      // if required constraint but field is not null, do not display\n      if ( 'required' === constraint.name && null !== this.ParsleyInstance.getVal() && this.ParsleyInstance.getVal().length > 0 ) {\n        return this;\n\n      // if empty required field and non required constraint fails, do not display\n      } else if ( this.ParsleyInstance.isRequired && 'required' !== constraint.name && ( null === this.ParsleyInstance.getVal() || 0 === this.ParsleyInstance.getVal().length ) ) {\n        this.removeError( constraint.name );\n\n        return this;\n      }\n\n      // TODO: refacto error name w/ proper & readable function\n      var constraintName = constraint.name\n        , liClass = false !== this.options.errorMessage ? 'custom-error-message' : constraintName\n        , liError = {}\n        , message = false !== this.options.errorMessage ? this.options.errorMessage : ( constraint.name === 'type' ?\n            this.ParsleyInstance.Validator.messages[ constraintName ][ constraint.requirements ] : ( 'undefined' === typeof this.ParsleyInstance.Validator.messages[ constraintName ] ?\n              this.ParsleyInstance.Validator.messages.defaultMessage : this.ParsleyInstance.Validator.formatMesssage( this.ParsleyInstance.Validator.messages[ constraintName ], constraint.requirements ) ) );\n\n      liError[ liClass ] = message;\n\n      // add liError if not shown. update if already exist\n      !$( this.ulError + ' .' + liClass ).length ? this.addError( liError ) : this.updateError( liError );\n\n      return this;\n    }\n\n    /**\n    * Create ul error container\n    *\n    * @method manageErrorContainer\n    * @return ParsleyUI\n    */\n    , manageErrorContainer: function () {\n      var errorContainer = this.options.errorContainer || this.options.errors.container( this.ParsleyInstance.element, this.ParsleyInstance.isRadioOrCheckbox )\n        , ulTemplate = this.options.animate ? this.ulTemplate.css('display', '') : this.ulTemplate;\n\n      if ( 'undefined' !== typeof errorContainer ) {\n        $( errorContainer ).append( ulTemplate );\n        return;\n      }\n\n      !this.ParsleyInstance.isRadioOrCheckbox ? this.ParsleyInstance.$element.after( ulTemplate ) : this.ParsleyInstance.$element.parent().after( ulTemplate );\n\n      return this;\n    }\n  };\n\n  /**\n  * ParsleyField class manage each form field inside a validated Parsley form.\n  * Returns if field valid or not depending on its value and constraints\n  * Manage field error display and behavior, event triggers and more\n  *\n  * @class ParsleyField\n  * @constructor\n  */\n  var ParsleyField = function ( element, options, type ) {\n    this.options = options;\n\n    // if type is ParsleyFieldMultiple, just return this. used for clone\n    if ( type === 'ParsleyFieldMultiple' ) {\n      return this;\n    }\n\n    this.init( element, type || 'ParsleyField' );\n  };\n\n  ParsleyField.prototype = {\n\n    constructor: ParsleyField\n\n    /**\n    * Set some properties, bind constraint validators and validation events\n    *\n    * @method init\n    * @param {Object} element\n    * @param {Object} options\n    */\n    , init: function ( element, type ) {\n      this.type = type;\n      this.valid = true;\n      this.element = element;\n      this.validatedOnce = false;\n      this.$element = $( element );\n      this.val = this.$element.val();\n      this.Validator = new Validator( this.options );\n      this.isRequired = false;\n      this.constraints = {};\n\n      // overriden by ParsleyItemMultiple if radio or checkbox input\n      if ( 'undefined' === typeof this.isRadioOrCheckbox ) {\n        this.isRadioOrCheckbox = false;\n        this.hash = this.generateHash();\n      }\n\n      // error ul dom management done only once at init\n      this.UI = new ParsleyUI( this );\n\n      // bind some html5 properties\n      if ( this.options.useHtml5Constraints ) {\n        this.bindHtml5Constraints();\n      }\n\n      // bind validators to field\n      this.addConstraints();\n\n      // bind parsley events if validators have been registered\n      if ( this.hasConstraints() ) {\n        this.bindValidationEvents();\n      }\n    }\n\n    , setParent: function ( elem ) {\n      this.$parent = $( elem );\n    }\n\n    , getParent: function () {\n      return this.$parent;\n    }\n\n    /**\n    * Bind some extra html5 types / validators\n    *\n    * @private\n    * @method bindHtml5Constraints\n    */\n    , bindHtml5Constraints: function () {\n      // add html5 required support + class required support\n      if ( this.$element.hasClass( 'required' ) || this.$element.attr( 'required' ) ) {\n        this.options.required = true;\n      }\n\n      // add html5 supported types & options\n      var type = this.$element.attr( 'type' );\n      if ( 'undefined' !== typeof type && new RegExp( type, 'i' ).test( 'email url number range tel' ) ) {\n        this.options.type = 'tel' === type ? 'phone' : type;\n\n        // number and range types could have min and/or max values\n        if ( new RegExp( this.options.type, 'i' ).test( 'number range' ) ) {\n          this.options.type = 'number';\n\n          // double condition to support jQuery and Zepto.. :(\n          if ( 'undefined' !== typeof this.$element.attr( 'min' ) && this.$element.attr( 'min' ).length ) {\n            this.options.min = this.$element.attr( 'min' );\n          }\n\n          if ( 'undefined' !== typeof this.$element.attr( 'max' ) && this.$element.attr( 'max' ).length ) {\n            this.options.max = this.$element.attr( 'max' );\n          }\n        }\n      }\n\n      if ( 'string' === typeof this.$element.attr( 'pattern' ) && this.$element.attr( 'pattern' ).length ) {\n          this.options.regexp = this.$element.attr( 'pattern' );\n      }\n\n    }\n\n    /**\n    * Attach field validators functions passed through data-api\n    *\n    * @private\n    * @method addConstraints\n    */\n    , addConstraints: function () {\n      for ( var constraint in this.options ) {\n        var addConstraint = {};\n        addConstraint[ constraint ] = this.options[ constraint ];\n        this.addConstraint( addConstraint, true, false );\n      }\n    }\n\n    /**\n    * Dynamically add a new constraint to a field\n    *\n    * @method addConstraint\n    * @param {Object} constraint { name: requirements }\n    */\n    , addConstraint: function ( constraint, doNotUpdateValidationEvents, sort ) {\n        for ( var name in constraint ) {\n          name = name.toLowerCase();\n\n          if ( 'function' === typeof this.Validator.validators[ name ] ) {\n            this.constraints[ name ] = {\n                name: name\n              , requirements: constraint[ name ]\n              , valid: null\n            }\n\n            if ( name === 'required' ) {\n              this.isRequired = true;\n            }\n\n            this.addCustomConstraintMessage( name );\n          }\n        }\n\n        // force field validation next check and reset validation events\n        if ( 'undefined' === typeof doNotUpdateValidationEvents ) {\n          this.bindValidationEvents();\n        }\n    }\n\n    /**\n    * Dynamically update an existing constraint to a field.\n    * Simple API: { name: requirements }\n    *\n    * @method updtConstraint\n    * @param {Object} constraint\n    */\n    , updateConstraint: function ( constraint, message ) {\n      for ( var name in constraint ) {\n        this.updtConstraint( { name: name, requirements: constraint[ name ], valid: null }, message );\n      }\n    }\n\n    /**\n    * Dynamically update an existing constraint to a field.\n    * Complex API: { name: name, requirements: requirements, valid: boolean }\n    *\n    * @method updtConstraint\n    * @param {Object} constraint\n    */\n    , updtConstraint: function ( constraint, message ) {\n      this.constraints[ constraint.name ] = $.extend( true, this.constraints[ constraint.name ], constraint );\n\n      if ( 'string' === typeof message ) {\n        if ( constraint.name ===  'type' )\n          this.Validator.messages[ constraint.name ][ constraint.requirements ] = message ;\n        else\n          this.Validator.messages[ constraint.name ] = message ;\n      }\n\n      // force field validation next check and reset validation events\n      this.bindValidationEvents();\n    }\n\n    /**\n    * Dynamically remove an existing constraint to a field.\n    *\n    * @method removeConstraint\n    * @param {String} constraintName\n    */\n    , removeConstraint: function ( constraintName ) {\n      var constraintName = constraintName.toLowerCase();\n\n      delete this.constraints[ constraintName ];\n\n      if ( constraintName === 'required' ) {\n        this.isRequired = false;\n      }\n\n      // if there are no more constraint, reset errors and validation state\n      if ( !this.hasConstraints() ) {\n        this.UI.reset();\n        return;\n      }\n\n      this.bindValidationEvents();\n    }\n\n    /**\n    * Add custom constraint message, passed through data-API\n    *\n    * @private\n    * @method addCustomConstraintMessage\n    * @param constraint\n    */\n    , addCustomConstraintMessage: function ( constraint ) {\n      // custom message type data-type-email-message -> typeEmailMessage | data-minlength-error => minlengthMessage\n      var customMessage = constraint\n        + ( 'type' === constraint && 'undefined' !== typeof this.options[ constraint ] ? this.options[ constraint ].charAt( 0 ).toUpperCase() + this.options[ constraint ].substr( 1 ) : '' )\n        + 'Message';\n\n      if ( 'undefined' !== typeof this.options[ customMessage ] ) {\n        this.Validator.addMessage( 'type' === constraint ? this.options[ constraint ] : constraint, this.options[ customMessage ], 'type' === constraint );\n      }\n    }\n\n    /**\n    * Bind validation events on a field\n    *\n    * @private\n    * @method bindValidationEvents\n    */\n    , bindValidationEvents: function () {\n      // this field has validation events, that means it has to be validated\n      this.valid = null;\n      this.$element.addClass( 'parsley-validated' );\n\n      // remove eventually already binded events\n      this.$element.off( '.' + this.type );\n\n      // force add 'change' event if async remote validator here to have result before form submitting\n      if ( this.options.remote && !new RegExp( 'change', 'i' ).test( this.options.trigger ) ) {\n        this.options.trigger = !this.options.trigger ? 'change' : ' change';\n      }\n\n      // always bind keyup event, for better UX when a field is invalid\n      var triggers = ( !this.options.trigger ? '' : this.options.trigger )\n        + ( new RegExp( 'key', 'i' ).test( this.options.trigger ) ? '' : ' keyup' );\n\n      // always bind change event, for better UX when a select is invalid\n      if ( this.$element.is( 'select' ) ) {\n        triggers += new RegExp( 'change', 'i' ).test( triggers ) ? '' : ' change';\n      }\n\n      // trim triggers to bind them correctly with .on()\n      triggers = triggers.replace( /^\\s+/g , '' ).replace( /\\s+$/g , '' );\n\n      this.$element.on( ( triggers + ' ' ).split( ' ' ).join( '.' + this.type + ' ' ), false, $.proxy( this.eventValidation, this ) );\n    }\n\n    /**\n    * Hash management. Used for ul error\n    *\n    * @method generateHash\n    * @returns {String} 5 letters unique hash\n    */\n    , generateHash: function () {\n      return 'parsley-' + ( Math.random() + '' ).substring( 2 );\n    }\n\n    /**\n    * Public getHash accessor\n    *\n    * @method getHash\n    * @returns {String} hash\n    */\n    , getHash: function () {\n      return this.hash;\n    }\n\n    /**\n    * Returns field val needed for validation\n    * Special treatment for radio & checkboxes\n    *\n    * @method getVal\n    * @returns {String} val\n    */\n    , getVal: function () {\n      if ('undefined' !== typeof this.$element.domApi( this.options.namespace )[ 'value' ]) {\n        return this.$element.domApi( this.options.namespace )[ 'value' ];\n      }\n\n      return this.$element.val();\n    }\n\n    /**\n    * Called when validation is triggered by an event\n    * Do nothing if val.length < this.options.validationMinlength\n    *\n    * @method eventValidation\n    * @param {Object} event jQuery event\n    */\n    , eventValidation: function ( event ) {\n      var val = this.getVal();\n\n      // do nothing on keypress event if not explicitely passed as data-trigger and if field has not already been validated once\n      if ( event.type === 'keyup' && !/keyup/i.test( this.options.trigger ) && !this.validatedOnce ) {\n        return true;\n      }\n\n      // do nothing on change event if not explicitely passed as data-trigger and if field has not already been validated once\n      if ( event.type === 'change' && !/change/i.test( this.options.trigger ) && !this.validatedOnce ) {\n        return true;\n      }\n\n      // start validation process only if field has enough chars and validation never started\n      if ( !this.isRadioOrCheckbox && this.getLength(val) < this.options.validationMinlength && !this.validatedOnce ) {\n        return true;\n      }\n\n      this.validate();\n    }\n\n    /**\n     * Get the length of a given value\n     *\n     * @method getLength\n     * @return {int} The length of the value\n     */\n    , getLength: function ( val ) {\n      return !val || !val.hasOwnProperty( 'length' ) ? 0 : val.length;\n    }\n\n    /**\n    * Return if field verify its constraints\n    *\n    * @method isValid\n    * @return {Boolean} Is field valid or not\n    */\n    , isValid: function () {\n      return this.validate( false );\n    }\n\n    /**\n    * Return if field has constraints\n    *\n    * @method hasConstraints\n    * @return {Boolean} Is field has constraints or not\n    */\n    , hasConstraints: function () {\n      for ( var constraint in this.constraints ) {\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n    * Validate a field & display errors\n    *\n    * @method validate\n    * @param {Boolean} errorBubbling set to false if you just want valid boolean without error bubbling next to fields\n    * @return {Boolean} Is field valid or not\n    */\n    , validate: function ( errorBubbling ) {\n      var val = this.getVal()\n        , valid = null;\n\n      // do not even bother trying validating a field w/o constraints\n      if ( !this.hasConstraints() ) {\n        return null;\n      }\n\n      // do not validate excluded fields\n      if ( this.$element.is( this.options.excluded ) ) {\n        return null;\n      }\n\n      // reset Parsley validation if onFieldValidate returns true, or if field is empty and not required\n      if ( this.options.listeners.onFieldValidate( this.element, this ) || ( '' === val && !this.isRequired ) ) {\n        this.UI.reset();\n        return null;\n      }\n\n      // do not validate a field already validated and unchanged !\n      if ( !this.needsValidation( val ) ) {\n        return this.valid;\n      }\n\n      valid = this.applyValidators();\n\n      if ( 'undefined' !== typeof errorBubbling ? errorBubbling : this.options.showErrors ) {\n        this.manageValidationResult();\n      }\n\n      return valid;\n    }\n\n    /**\n    * Check if value has changed since previous validation\n    *\n    * @method needsValidation\n    * @param value\n    * @return {Boolean}\n    */\n    , needsValidation: function ( val ) {\n      if ( !this.options.validateIfUnchanged && this.valid !== null && this.val === val && this.validatedOnce ) {\n        return false;\n      }\n\n      this.val = val;\n      return this.validatedOnce = true;\n    }\n\n    /**\n    * Loop through every fields validators\n    * Adds errors after unvalid fields\n    *\n    * @method applyValidators\n    * @return {Mixed} {Boolean} If field valid or not, null if not validated\n    */\n    , applyValidators: function () {\n      var valid = null;\n\n      for ( var constraint in this.constraints ) {\n        var result = this.Validator.validators[ this.constraints[ constraint ].name ]().validate( this.val, this.constraints[ constraint ].requirements, this );\n\n        if ( false === result ) {\n          valid = false;\n          this.constraints[ constraint ].valid = valid;\n        } else if ( true === result ) {\n          this.constraints[ constraint ].valid = true;\n          valid = false !== valid;\n        }\n      }\n\n      // listeners' ballet\n      if (false === valid) {\n        this.options.listeners.onFieldError( this.element, this.constraints, this );\n      } else if (true === valid && false === this.options.listeners.onFieldSuccess( this.element, this.constraints, this )) {\n        // if onFieldSuccess returns (bool) false, consider that field si invalid\n        valid = false;\n      }\n\n      return valid;\n    }\n\n    /**\n    * Fired when all validators have be executed\n    * Returns true or false if field is valid or not\n    * Display errors messages below failed fields\n    * Adds parsley-success or parsley-error class on fields\n    *\n    * @method manageValidationResult\n    * @return {Boolean} Is field valid or not\n    */\n    , manageValidationResult: function () {\n      var valid = null\n        , errors = [];\n\n      for ( var constraint in this.constraints ) {\n        if ( false === this.constraints[ constraint ].valid ) {\n          errors.push( this.constraints[ constraint ]);\n          valid = false;\n        } else if ( true === this.constraints[ constraint ].valid ) {\n          this.UI.removeError( this.constraints[ constraint ].name );\n          valid = false !== valid;\n        }\n      }\n\n      this.valid = valid;\n\n      if ( true === this.valid ) {\n        this.UI.removeErrors();\n        this.UI.errorClassHandler.removeClass( this.options.errorClass ).addClass( this.options.successClass );\n\n        return true;\n      } else if ( false === this.valid ) {\n        if ( true === this.options.priorityEnabled ) {\n          var maxPriority = 0, constraint, priority, error, errorArr = [];\n          for ( var i = 0; i < errors.length; i++ ) {\n            error = this.Validator.validators[ errors[ i ].name ]();\n            priority = error.priority;\n            errorArr.push(errors[ i ]);\n\n            if ( priority > maxPriority ) {\n              constraint = errors[ i ];\n              maxPriority = priority;\n            }\n          }\n          for ( var i = 0; i < errorArr.length; i++ ) {\n            if ( constraint === errorArr[ i ] ) {\n              this.UI.manageError( constraint );\n            } else {\n              this.UI.removeError( errorArr[ i ].name );\n            }\n          }\n        } else {\n          for ( var i = 0; i < errors.length; i++ )\n            this.UI.manageError( errors[ i ] );\n        }\n\n        this.UI.errorClassHandler.removeClass( this.options.successClass ).addClass( this.options.errorClass );\n        return false;\n      }\n\n      // remove li error, and ul error if no more li inside\n      if ( this.UI.ulError && $( this.ulError ).children().length === 0 ) {\n        this.UI.removeErrors();\n      }\n\n      return valid;\n    }\n\n    /**\n    * Add custom listeners\n    *\n    * @param {Object} { listener: function () {} }, eg { onFormValidate: function ( valid, event, focus ) { ... } }\n    */\n    , addListener: function ( object ) {\n      for ( var listener in object ) {\n        this.options.listeners[ listener ] = object[ listener ];\n      }\n    }\n\n    /**\n    * Destroy parsley field instance\n    *\n    * @private\n    * @method destroy\n    */\n    , destroy: function () {\n      this.$element.removeClass( 'parsley-validated' );\n      this.UI.reset();\n      this.$element.off( '.' + this.type ).removeData( this.type );\n    }\n  };\n\n  /**\n  * ParsleyFieldMultiple override ParsleyField for checkbox and radio inputs\n  * Pseudo-heritance to manage divergent behavior from ParsleyItem in dedicated methods\n  *\n  * @class ParsleyFieldMultiple\n  * @constructor\n  */\n  var ParsleyFieldMultiple = function ( element, options, type ) {\n    this.initMultiple( element, options );\n    this.inherit( element, options );\n    this.Validator = new Validator( options );\n\n    // call ParsleyField constructor\n    this.init( element, type || 'ParsleyFieldMultiple' );\n  };\n\n  ParsleyFieldMultiple.prototype = {\n\n    constructor: ParsleyFieldMultiple\n\n    /**\n    * Set some specific properties, call some extra methods to manage radio / checkbox\n    *\n    * @method init\n    * @param {Object} element\n    * @param {Object} options\n    */\n    , initMultiple: function ( element, options ) {\n      this.element = element;\n      this.$element = $( element );\n      this.group = options.group || false;\n      this.hash = this.getName();\n      this.siblings = this.group ? '[' + options.namespace + 'group=\"' + this.group + '\"]' : 'input[name=\"' + this.$element.attr( 'name' ) + '\"]';\n      this.isRadioOrCheckbox = true;\n      this.isRadio = this.$element.is( 'input[type=radio]' );\n      this.isCheckbox = this.$element.is( 'input[type=checkbox]' );\n      this.errorClassHandler = options.errors.classHandler( element, this.isRadioOrCheckbox ) || this.$element.parent();\n    }\n\n    /**\n    * Set specific constraints messages, do pseudo-heritance\n    *\n    * @private\n    * @method inherit\n    * @param {Object} element\n    * @param {Object} options\n    */\n    , inherit: function ( element, options ) {\n      var clone = new ParsleyField( element, options, 'ParsleyFieldMultiple' );\n\n      for ( var property in clone ) {\n        if ( 'undefined' === typeof this[ property ] ) {\n          this[ property ] = clone [ property ];\n        }\n      }\n    }\n\n    /**\n    * Set specific constraints messages, do pseudo-heritance\n    *\n    * @method getName\n    * @returns {String} radio / checkbox hash is cleaned 'name' or data-group property\n    */\n   , getName: function () {\n     if ( this.group ) {\n       return 'parsley-' + this.group;\n     }\n\n     if ( 'undefined' === typeof this.$element.attr( 'name' ) ) {\n       throw \"A radio / checkbox input must have a parsley-group attribute or a name to be Parsley validated !\";\n     }\n\n     return 'parsley-' + this.$element.attr( 'name' ).replace( /(:|\\.|\\[|\\]|\\$)/g, '' );\n   }\n\n   /**\n   * Special treatment for radio & checkboxes\n   * Returns checked radio or checkboxes values\n   *\n   * @method getVal\n   * @returns {String} val\n   */\n   , getVal: function () {\n      if ( this.isRadio ) {\n        return $( this.siblings + ':checked' ).val() || '';\n      }\n\n      if ( this.isCheckbox ) {\n        var values = [];\n\n        $( this.siblings + ':checked' ).each( function () {\n          values.push( $( this ).val() );\n        } );\n\n        return values;\n      }\n   }\n\n   /**\n   * Bind validation events on a field\n   *\n   * @private\n   * @method bindValidationEvents\n   */\n   , bindValidationEvents: function () {\n     // this field has validation events, that means it has to be validated\n     this.valid = null;\n     this.$element.addClass( 'parsley-validated' );\n\n     // remove eventually already binded events\n     this.$element.off( '.' + this.type );\n\n      // always bind keyup event, for better UX when a field is invalid\n      var self = this\n        , triggers = ( !this.options.trigger ? '' : this.options.trigger )\n        + ( new RegExp( 'change', 'i' ).test( this.options.trigger ) ? '' : ' change' );\n\n      // trim triggers to bind them correctly with .on()\n      triggers = triggers.replace( /^\\s+/g , '' ).replace( /\\s+$/g ,'' );\n\n     // bind trigger event on every siblings\n     $( this.siblings ).each(function () {\n       $( this ).on( triggers.split( ' ' ).join( '.' + self.type + ' ' ) , false, $.proxy( self.eventValidation, self ) );\n     } )\n   }\n  };\n\n  /**\n  * ParsleyForm class manage Parsley validated form.\n  * Manage its fields and global validation\n  *\n  * @class ParsleyForm\n  * @constructor\n  */\n  var ParsleyForm = function ( element, options, type ) {\n    this.init( element, options, type || 'parsleyForm' );\n  };\n\n  ParsleyForm.prototype = {\n\n    constructor: ParsleyForm\n\n    /* init data, bind jQuery on() actions */\n    , init: function ( element, options, type ) {\n      this.type = type;\n      this.items = [];\n      this.$element = $( element );\n      this.options = options;\n      var self = this;\n\n      this.$element.find( options.inputs ).each( function () {\n        self.addItem( this );\n      });\n\n      this.$element.on( 'submit.' + this.type , false, $.proxy( this.validate, this ) );\n    }\n\n    /**\n    * Add custom listeners\n    *\n    * @param {Object} { listener: function () {} }, eg { onFormValidate: function ( valid, event, focus ) { ... } }\n    */\n    , addListener: function ( object ) {\n      for ( var listener in object ) {\n        if ( new RegExp( 'Field' ).test( listener ) ) {\n          for ( var item = 0; item < this.items.length; item++ ) {\n            this.items[ item ].addListener( object );\n          }\n        } else {\n          this.options.listeners[ listener ] = object[ listener ];\n        }\n      }\n    }\n\n    /**\n    * Adds a new parsleyItem child to ParsleyForm\n    *\n    * @method addItem\n    * @param elem\n    */\n    , addItem: function ( elem ) {\n      var ParsleyField = $( elem ).parsley( this.options );\n      ParsleyField.setParent( this );\n\n      this.items.push( ParsleyField );\n    }\n\n    /**\n    * Removes a parsleyItem child from ParsleyForm\n    *\n    * @method removeItem\n    * @param elem\n    * @return {Boolean}\n    */\n    , removeItem: function ( elem ) {\n      var parsleyItem = $( elem ).parsley();\n\n      // identify & remove item if same Parsley hash\n      for ( var i = 0; i < this.items.length; i++ ) {\n        if ( this.items[ i ].hash === parsleyItem.hash ) {\n          this.items[ i ].destroy();\n          this.items.splice( i, 1 );\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n    * Process each form field validation\n    * Display errors, call custom onFormValidate() function\n    *\n    * @method validate\n    * @param {Object} event jQuery Event\n    * @return {Boolean} Is form valid or not\n    */\n    , validate: function ( event ) {\n      var valid = true;\n      this.focusedField = false;\n\n      for ( var item = 0; item < this.items.length; item++ ) {\n        if ( 'undefined' !== typeof this.items[ item ] && false === this.items[ item ].validate() ) {\n          valid = false;\n\n          if ( !this.focusedField && 'first' === this.options.focus || 'last' === this.options.focus ) {\n            this.focusedField = this.items[ item ].$element;\n          }\n        }\n      }\n\n      // form is invalid, focus an error field depending on focus policy\n      if ( this.focusedField && !valid ) {\n        // Scroll smoothly\n        if ( this.options.scrollDuration > 0 ) {\n          var that = this,\n              top = this.focusedField.offset().top - $( window ).height() / 2; // Center the window on the field\n\n          $( 'html, body' ).animate( {\n              scrollTop: top\n            },\n            this.options.scrollDuration,\n            function () {\n              that.focusedField.focus();\n            }\n          );\n        // Just focus on the field and let the browser do the rest\n        } else {\n          this.focusedField.focus();\n        }\n      }\n\n      // if onFormValidate returns (bool) false, form won't be submitted, even if valid\n      var onFormValidate = this.options.listeners.onFormValidate( valid, event, this );\n      if ('undefined' !== typeof onFormValidate) {\n        return onFormValidate;\n      }\n\n      return valid;\n    }\n\n    , isValid: function () {\n      for ( var item = 0; item < this.items.length; item++ ) {\n        if ( false === this.items[ item ].isValid() ) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    /**\n    * Remove all errors ul under invalid fields\n    *\n    * @method removeErrors\n    */\n    , removeErrors: function () {\n      for ( var item = 0; item < this.items.length; item++ ) {\n        this.items[ item ].parsley( 'reset' );\n      }\n    }\n\n    /**\n    * destroy Parsley binded on the form and its fields\n    *\n    * @method destroy\n    */\n    , destroy: function () {\n      for ( var item = 0; item < this.items.length; item++ ) {\n        this.items[ item ].destroy();\n      }\n\n      this.$element.off( '.' + this.type ).removeData( this.type );\n    }\n\n    /**\n    * reset Parsley binded on the form and its fields\n    *\n    * @method reset\n    */\n    , reset: function () {\n      for ( var item = 0; item < this.items.length; item++ ) {\n        this.items[ item ].UI.reset();\n      }\n    }\n  };\n\n  /**\n  * Parsley plugin definition\n  * Provides an interface to access public Validator, ParsleyForm and ParsleyField functions\n  *\n  * @class Parsley\n  * @constructor\n  * @param {Mixed} Options. {Object} to configure Parsley or {String} method name to call a public class method\n  * @param {Function} Callback function\n  * @return {Mixed} public class method return\n  */\n  $.fn.parsley = function ( option, fn ) {\n    var namespace = { namespace: $( this ).data( 'parsleyNamespace' ) ? $( this ).data( 'parsleyNamespace' ) : ( 'undefined' !== typeof option && 'undefined' !== typeof option.namespace ? option.namespace : $.fn.parsley.defaults.namespace ) }\n      , options = $.extend( true, {}, $.fn.parsley.defaults, 'undefined' !== typeof window.ParsleyConfig ? window.ParsleyConfig : {}, option, this.domApi( namespace.namespace ) )\n      , newInstance = null\n      , args = Array.prototype.slice.call(arguments, 1);\n\n    function bind ( self, type ) {\n      var parsleyInstance = $( self ).data( type );\n\n      // if data never binded or we want to clone a build (for radio & checkboxes), bind it right now!\n      if ( !parsleyInstance ) {\n        switch ( type ) {\n          case 'parsleyForm':\n            parsleyInstance = new ParsleyForm( self, options, 'parsleyForm' );\n            break;\n          case 'parsleyField':\n            parsleyInstance = new ParsleyField( self, options, 'parsleyField' );\n            break;\n          case 'parsleyFieldMultiple':\n            parsleyInstance = new ParsleyFieldMultiple( self, options, 'parsleyFieldMultiple' );\n            break;\n          default:\n            return;\n        }\n\n        $( self ).data( type, parsleyInstance );\n      }\n\n      // here is our parsley public function accessor\n      if ( 'string' === typeof option && 'function' === typeof parsleyInstance[ option ] ) {\n        var response = parsleyInstance[ option ].apply( parsleyInstance, args );\n\n        return 'undefined' !== typeof response ? response : $( self );\n      }\n\n      return parsleyInstance;\n    }\n\n    // if a form elem is given, bind all its input children\n    if ( $( this ).is( 'form' ) || 'undefined' !== typeof $( this ).domApi( namespace.namespace )[ 'bind' ] ) {\n      newInstance = bind ( $( this ), 'parsleyForm' );\n\n    // if it is a Parsley supported single element, bind it too, except inputs type hidden\n    // add here a return instance, cuz' we could call public methods on single elems with data[ option ]() above\n    } else if ( $( this ).is( options.inputs ) ) {\n      newInstance = bind( $( this ), !$( this ).is( 'input[type=radio], input[type=checkbox]' ) ? 'parsleyField' : 'parsleyFieldMultiple' );\n    }\n\n    return 'function' === typeof fn ? fn() : newInstance;\n  };\n\n  /* PARSLEY auto-binding\n  * =================================================== */\n  $( window ).on( 'load', function () {\n    $( '[parsley-validate], [data-parsley-validate]' ).each( function () {\n      $( this ).parsley();\n    } );\n  } );\n\n  /* PARSLEY DOM API\n  * =================================================== */\n  $.fn.domApi = function ( namespace ) {\n    var attribute,\n      obj = {}\n      , regex = new RegExp(\"^\" + namespace, 'i');\n\n    if ( 'undefined' === typeof this[ 0 ] ) {\n      return {};\n    }\n\n    for ( var i in this[ 0 ].attributes ) {\n      attribute = this[ 0 ].attributes[ i ];\n\n      if ( 'undefined' !== typeof attribute && null !== attribute && attribute.specified && regex.test( attribute.name ) ) {\n        obj[ camelize( attribute.name.replace( namespace, '' ) ) ] = deserializeValue( attribute.value );\n      }\n    }\n\n    return obj;\n  };\n\n  // Zepto deserializeValue function\n  // \"true\"  => true\n  // \"false\" => false\n  // \"null\"  => null\n  // \"42\"    => 42\n  // \"42.5\"  => 42.5\n  // JSON    => parse if valid\n  // String  => self\n  var deserializeValue = function( value ) {\n    var num\n    try {\n      return value ?\n        value == \"true\" ||\n        ( value == \"false\" ? false :\n          value == \"null\" ? null :\n          !isNaN( num = Number( value ) ) ? num :\n          /^[\\[\\{]/.test( value ) ? $.parseJSON( value ) :\n          value )\n        : value;\n    } catch ( e ) {\n      return value;\n    }\n  };\n\n  // Zepto camelize function\n  var camelize = function ( str ) {\n    return str.replace( /-+(.)?/g, function ( match, chr ) {\n      return chr ? chr.toUpperCase() : '';\n    } )\n  };\n\n  // Zepto dasherize function\n  var dasherize = function ( str ) {\n    return str.replace( /::/g, '/' )\n           .replace( /([A-Z]+)([A-Z][a-z])/g, '$1_$2' )\n           .replace( /([a-z\\d])([A-Z])/g, '$1_$2' )\n           .replace( /_/g, '-' )\n           .toLowerCase()\n  };\n\n  /**\n  * Parsley plugin configuration\n  *\n  * @property $.fn.parsley.defaults\n  * @type {Object}\n  */\n  $.fn.parsley.defaults = {\n    // basic data-api overridable properties here..\n    namespace: 'parsley-'                       // DOM-API, default 'parsley-'. W3C valid would be 'data-parsley-' but quite ugly\n    , inputs: 'input, textarea, select'         // Default supported inputs.\n    , excluded: 'input[type=hidden], input[type=file], :disabled' // Do not validate input[type=hidden] & :disabled.\n    , priorityEnabled: true                     // Will display only one error at the time depending on validators priorities\n    , trigger: false                            // $.Event() that will trigger validation. eg: keyup, change..\n    , animate: true                             // fade in / fade out error messages\n    , animateDuration: 300                      // fadein/fadout ms time\n    , scrollDuration: 500                       // Duration in ms time of the window scroll when focusing on invalid field (0 = no scroll)\n    , focus: 'first'                            // 'fist'|'last'|'none' which error field would have focus first on form validation\n    , validationMinlength: 3                    // If trigger validation specified, only if value.length > validationMinlength\n    , successClass: 'parsley-success'           // Class name on each valid input\n    , errorClass: 'parsley-error'               // Class name on each invalid input\n    , errorMessage: false                       // Customize an unique error message showed if one constraint fails\n    , validators: {}                            // Add your custom validators functions\n    , showErrors: true                          // Set to false if you don't want Parsley to display error messages\n    , useHtml5Constraints: true                 // Set to false if you don't want Parsley to use html5 constraints\n    , messages: {}                              // Add your own error messages here\n\n    //some quite advanced configuration here..\n    , validateIfUnchanged: false                                          // false: validate once by field value change\n    , errors: {\n        classHandler: function ( elem, isRadioOrCheckbox ) {}             // specify where parsley error-success classes are set\n      , container: function ( elem, isRadioOrCheckbox ) {}                // specify an elem where errors will be **apened**\n      , errorsWrapper: '<ul></ul>'                                        // do not set an id for this elem, it would have an auto-generated id\n      , errorElem: '<li></li>'                                            // each field constraint fail in an li\n      }\n    , listeners: {\n        onFieldValidate: function ( elem, ParsleyField ) { return false; } // Executed on validation. Return true to ignore field validation\n      , onFormValidate: function ( isFormValid, event, ParsleyForm ) {}     // Executed once on form validation. Return (bool) false to block submit, even if valid\n      , onFieldError: function ( elem, constraints, ParsleyField ) {}     // Executed when a field is detected as invalid\n      , onFieldSuccess: function ( elem, constraints, ParsleyField ) {}   // Executed when a field passes validation\n    }\n  };\n\n// This plugin works with jQuery or Zepto (with data extension built for Zepto.)\n} ( window.jQuery || window.Zepto );"],"names":["$","Validator","options","this","messages","defaultMessage","type","email","url","urlstrict","number","digits","dateIso","alphanum","phone","notnull","notblank","required","regexp","min","max","range","minlength","maxlength","rangelength","mincheck","maxcheck","rangecheck","equalto","init","ParsleyUI","ParsleyInstance","ParsleyField","element","ParsleyFieldMultiple","initMultiple","inherit","ParsleyForm","prototype","constructor","validators","validate","val","length","priority","replace","that","i","regExp","RegExp","test","self","regexpFlag","arrayRange","Number","elem","validateIfUnchanged","remote","manage","isConstraintValid","message","UI","ulError","remove","listeners","onFieldError","constraints","onFieldSuccess","updtConstraint","name","valid","manageValidationResult","handleResponse","response","parseJSON","err","manageErrorMessage","error","data","dataType","$element","attr","remoteDatatype","ajax","extend","remoteMethod","success","obj","key","customValidators","customMessages","addValidator","addMessage","formatMesssage","args","fn","Error","window","console","warn","hash","errorClassHandler","errors","classHandler","isRadioOrCheckbox","ulErrorManagement","ulTemplate","errorsWrapper","addClass","removeError","constraintName","liError","animate","fadeOut","animateDuration","children","removeErrors","addError","constraint","liTemplate","errorElem","append","html","hide","fadeIn","updateError","reset","validatedOnce","removeClass","successClass","errorClass","manageError","liClass","manageErrorContainer","getVal","isRequired","errorMessage","requirements","errorContainer","container","css","parent","after","generateHash","useHtml5Constraints","bindHtml5Constraints","addConstraints","hasConstraints","bindValidationEvents","setParent","$parent","getParent","hasClass","addConstraint","doNotUpdateValidationEvents","sort","toLowerCase","addCustomConstraintMessage","updateConstraint","removeConstraint","customMessage","charAt","toUpperCase","substr","off","trigger","triggers","is","on","split","join","proxy","eventValidation","Math","random","substring","getHash","domApi","namespace","event","getLength","validationMinlength","hasOwnProperty","isValid","errorBubbling","excluded","onFieldValidate","needsValidation","applyValidators","showErrors","result","push","priorityEnabled","maxPriority","errorArr","addListener","object","listener","destroy","removeData","group","getName","siblings","isRadio","isCheckbox","property","clone","values","each","items","find","inputs","addItem","item","parsley","removeItem","parsleyItem","splice","focusedField","focus","scrollDuration","top","offset","height","scrollTop","onFormValidate","option","defaults","ParsleyConfig","newInstance","Array","slice","call","arguments","bind","parsleyInstance","apply","attribute","regex","attributes","specified","camelize","deserializeValue","value","num","isNaN","e","str","match","chr","isFormValid","jQuery","Zepto"],"mappings":"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"}