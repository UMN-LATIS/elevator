{"version":3,"sources":["spin.js"],"names":["root","factory","module","exports","define","amd","Spinner","this","createEl","tag","prop","n","el","document","createElement","ins","parent","i","arguments","length","appendChild","addAnimation","alpha","trail","lines","name","join","start","z","Math","max","prefix","useCssAnimations","substring","indexOf","toLowerCase","pre","animations","sheet","insertRule","cssRules","vendor","pp","s","style","charAt","toUpperCase","slice","undefined","prefixes","css","merge","obj","def","getColor","color","idx","o","opts","defaults","initVML","vml","attr","addRule","prototype","grp","coordsize","coordorigin","r","width","height","seg","dx","filter","g","rotation","left","arcsize","corners","scale","radius","top","opacity","margin","position","shadow","val","c","firstChild","childNodes","rotate","direction","speed","fps","zIndex","className","hwaccel","spin","target","stop","self","insertBefore","setAttribute","f","ostep","astep","anim","j","timeout","setTimeout","clearTimeout","parentNode","removeChild","fill","background","boxShadow","transformOrigin","transform","borderRadius","animation","type","getElementsByTagName","styleSheet","probe","behavior","adj"],"mappings":"CA+BE,SAASA,EAAMC,GACM,gBAAVC,SAAsBA,OAAOC,QAASD,OAAOC,QAAUF,IACxC,kBAAVG,SAAwBA,OAAOC,IAAKD,OAAOH,GACtDD,EAAKM,QAAUL,KAErBM,KAAM,WACL,YAWA,SAASC,GAASC,EAAKC,GACrB,GACIC,GADAC,EAAKC,SAASC,cAAcL,GAAO,MAGvC,KAAKE,IAAKD,GAAME,EAAGD,GAAKD,EAAKC,EAC7B,OAAOC,GAMT,QAASG,GAAIC,GACX,IAAK,GAAIC,GAAI,EAAGN,EAAIO,UAAUC,OAAYR,EAAJM,EAAOA,IAC3CD,EAAOI,YAAYF,UAAUD,GAG/B,OAAOD,GAQT,QAASK,GAAaC,EAAOC,EAAON,EAAGO,GACrC,GAAIC,IAAQ,UAAWF,KAAkB,IAARD,GAAcL,EAAGO,GAAOE,KAAK,KAC1DC,EAAQ,IAAOV,EAAEO,EAAQ,IACzBI,EAAIC,KAAKC,IAAI,GAAK,EAAER,GAASC,GAAS,IAAII,GAAQL,GAClDS,EAASC,EAAiBC,UAAU,EAAGD,EAAiBE,QAAQ,cAAcC,cAC9EC,EAAML,GAAU,IAAMA,EAAS,KAAO,EAe1C,OAbKM,GAAWZ,KACda,EAAMC,WACJ,IAAMH,EAAM,aAAeX,EAAO,eAClBG,EAAI,IACpBD,EAAQ,aAAeL,EAAQ,KAC9BK,EAAM,KAAQ,gBACdA,EAAMJ,GAAS,IAAM,aAAeD,EAAQ,iBAC3BM,EAAI,KACjBU,EAAME,SAASrB,QAEtBkB,EAAWZ,GAAQ,GAGdA,EAMT,QAASgB,GAAO7B,EAAIF,GAClB,GACIgC,GACAzB,EAFA0B,EAAI/B,EAAGgC,KAKX,IADAlC,EAAOA,EAAKmC,OAAO,GAAGC,cAAgBpC,EAAKqC,MAAM,GACjCC,SAAZL,EAAEjC,GAAqB,MAAOA,EAClC,KAAKO,EAAI,EAAGA,EAAIgC,EAAS9B,OAAQF,IAE/B,GADAyB,EAAKO,EAAShC,GAAGP,EACHsC,SAAVL,EAAED,GAAmB,MAAOA,GAOpC,QAASQ,GAAItC,EAAIF,GACf,IAAK,GAAIC,KAAKD,GACZE,EAAGgC,MAAMH,EAAO7B,EAAID,IAAMA,GAAKD,EAAKC,EAGtC,OAAOC,GAMT,QAASuC,GAAMC,GACb,IAAK,GAAInC,GAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,GAAIoC,GAAMnC,UAAUD,EACpB,KAAK,GAAIN,KAAK0C,GACGL,SAAXI,EAAIzC,KAAkByC,EAAIzC,GAAK0C,EAAI1C,IAG3C,MAAOyC,GAMT,QAASE,GAASC,EAAOC,GACvB,MAAuB,gBAATD,GAAoBA,EAAQA,EAAMC,EAAMD,EAAMpC,QA6B9D,QAASb,GAAQmD,GACflD,KAAKmD,KAAOP,EAAMM,MAASnD,EAAQqD,SAAUA,GAsH/C,QAASC,KAGP,QAASC,GAAIpD,EAAKqD,GAChB,MAAOtD,GAAS,IAAMC,EAAM,2DAA4DqD,GAI1FxB,EAAMyB,QAAQ,YAAa,8BAE3BzD,EAAQ0D,UAAUxC,MAAQ,SAASZ,EAAI6C,GAIrC,QAASQ,KACP,MAAOf,GACLW,EAAI,SACFK,UAAWvB,EAAI,IAAMA,EACrBwB,aAAcC,EAAI,KAAOA,KAEzBC,MAAO1B,EAAG2B,OAAQ3B,IAQxB,QAAS4B,GAAItD,EAAGuD,EAAIC,GAClB1D,EACE2D,EACA3D,EACEmC,EAAIe,KAAQU,SAAU,IAAMlB,EAAEjC,MAAQP,EAAI,MAAO2D,OAAQJ,IACzDzD,EACEmC,EACEW,EAAI,aAAcgB,QAASpB,EAAEqB,WAE3BT,MAAOD,EACPE,OAAQb,EAAEsB,MAAQtB,EAAEY,MACpBO,KAAMnB,EAAEsB,MAAQtB,EAAEuB,OAClBC,KAAMxB,EAAEsB,MAAQtB,EAAEY,OAAS,EAC3BI,OAAQA,IAGZZ,EAAI,QAASN,MAAOD,EAASG,EAAEF,MAAOtC,GAAIiE,QAASzB,EAAEyB,UACrDrB,EAAI,UAAWqB,QAAS,OAlChC,GAeIjE,GAfAmD,EAAIX,EAAEsB,OAAStB,EAAEtC,OAASsC,EAAEY,OAC5B1B,EAAc,EAAVc,EAAEsB,MAAYX,EAYlBe,IAAW1B,EAAEY,MAAQZ,EAAEtC,QAAUsC,EAAEsB,MAAQ,EAAI,KAC/CL,EAAIxB,EAAIe,KAAQmB,SAAU,WAAYH,IAAKE,EAAQP,KAAMO,GA0B7D,IAAI1B,EAAE4B,OACJ,IAAKpE,EAAI,EAAGA,GAAKwC,EAAEjC,MAAOP,IACxBsD,EAAItD,EAAG,GAAI,sFAGf,KAAKA,EAAI,EAAGA,GAAKwC,EAAEjC,MAAOP,IAAKsD,EAAItD,EACnC,OAAOF,GAAIH,EAAI8D,IAGjBpE,EAAQ0D,UAAUkB,QAAU,SAAStE,EAAIK,EAAGqE,EAAK7B,GAC/C,GAAI8B,GAAI3E,EAAG4E,UACX/B,GAAIA,EAAE4B,QAAU5B,EAAEjC,OAAS,EACvB+D,GAAKtE,EAAIwC,EAAI8B,EAAEE,WAAWtE,SAC5BoE,EAAIA,EAAEE,WAAWxE,EAAIwC,GAAI8B,EAAIA,GAAKA,EAAEC,WAAYD,EAAIA,GAAKA,EAAEC,WACvDD,IAAGA,EAAEL,QAAUI,KAzTzB,GAEItD,GACAM,EAHAW,GAAY,SAAU,MAAO,KAAM,KACnCZ,KAwGAsB,GACFnC,MAAO,GACPL,OAAQ,EACRkD,MAAO,EACPW,OAAQ,GACRD,MAAO,EACPD,QAAS,EACTvB,MAAO,OACP2B,QAAS,IACTQ,OAAQ,EACRC,UAAW,EACXC,MAAO,EACPrE,MAAO,IACPsE,IAAK,GACLC,OAAQ,IACRC,UAAW,UACXd,IAAK,MACLL,KAAM,MACNS,QAAQ,EACRW,SAAS,EACTZ,SAAU,WAiMZ,IAxLA9E,EAAQqD,YAERR,EAAM7C,EAAQ0D,WAMZiC,KAAM,SAASC,GACb3F,KAAK4F,MAEL,IAAIC,GAAO7F,KACPkD,EAAI2C,EAAK1C,KACT9C,EAAKwF,EAAKxF,GAAKJ,EAAS,MAAOuF,UAAWtC,EAAEsC,WAiBhD,IAfA7C,EAAItC,GACFwE,SAAU3B,EAAE2B,SACZf,MAAO,EACPyB,OAAQrC,EAAEqC,OACVlB,KAAMnB,EAAEmB,KACRK,IAAKxB,EAAEwB,MAGLiB,GACFA,EAAOG,aAAazF,EAAIsF,EAAOV,YAAc,MAG/C5E,EAAG0F,aAAa,OAAQ,eACxBF,EAAK5E,MAAMZ,EAAIwF,EAAK1C,OAEf1B,EAAkB,CAErB,GAEIV,GAFAL,EAAI,EACJU,GAAS8B,EAAEjC,MAAQ,IAAM,EAAIiC,EAAEkC,WAAa,EAE5CE,EAAMpC,EAAEoC,IACRU,EAAIV,EAAMpC,EAAEmC,MACZY,GAAS,EAAI/C,EAAEyB,UAAYqB,EAAI9C,EAAElC,MAAQ,KACzCkF,EAAQF,EAAI9C,EAAEjC,OAElB,QAAUkF,KACRzF,GACA,KAAK,GAAI0F,GAAI,EAAGA,EAAIlD,EAAEjC,MAAOmF,IAC3BrF,EAAQO,KAAKC,IAAI,GAAKb,GAAKwC,EAAEjC,MAAQmF,GAAKF,GAASF,EAAIC,EAAO/C,EAAEyB,SAEhEkB,EAAKlB,QAAQtE,EAAI+F,EAAIlD,EAAEkC,UAAYhE,EAAOL,EAAOmC,EAEnD2C,GAAKQ,QAAUR,EAAKxF,IAAMiG,WAAWH,KAAS,IAAOb,OAGzD,MAAOO,IAMTD,KAAM,WACJ,GAAIvF,GAAKL,KAAKK,EAMd,OALIA,KACFkG,aAAavG,KAAKqG,SACdhG,EAAGmG,YAAYnG,EAAGmG,WAAWC,YAAYpG,GAC7CL,KAAKK,GAAKoC,QAELzC,MAOTiB,MAAO,SAASZ,EAAI6C,GAKlB,QAASwD,GAAK1D,EAAO8B,GACnB,MAAOnC,GAAI1C,KACT4E,SAAU,WACVf,MAAOZ,EAAEsB,OAAStB,EAAEtC,OAASsC,EAAEY,OAAS,KACxCC,OAAQb,EAAEsB,MAAQtB,EAAEY,MAAQ,KAC5B6C,WAAY3D,EACZ4D,UAAW9B,EACX+B,gBAAiB,OACjBC,UAAW,aAAe,IAAI5D,EAAEjC,MAAMP,EAAIwC,EAAEiC,QAAU,kBAAoBjC,EAAEsB,MAAMtB,EAAEuB,OAAS,QAC7FsC,cAAe7D,EAAEqB,QAAUrB,EAAEsB,MAAQtB,EAAEY,OAAS,GAAK,OAIzD,IAjBA,GAEIE,GAFAtD,EAAI,EACJU,GAAS8B,EAAEjC,MAAQ,IAAM,EAAIiC,EAAEkC,WAAa,EAgBzC1E,EAAIwC,EAAEjC,MAAOP,IAClBsD,EAAMrB,EAAI1C,KACR4E,SAAU,WACVH,IAAK,IAAMxB,EAAEsB,MAAQtB,EAAEY,MAAQ,GAAK,KACpCgD,UAAW5D,EAAEuC,QAAU,qBAAuB,GAC9Cd,QAASzB,EAAEyB,QACXqC,UAAWvF,GAAoBX,EAAaoC,EAAEyB,QAASzB,EAAElC,MAAOI,EAAQV,EAAIwC,EAAEkC,UAAWlC,EAAEjC,OAAS,IAAM,EAAIiC,EAAEmC,MAAQ,sBAGtHnC,EAAE4B,QAAQtE,EAAIwD,EAAKrB,EAAI+D,EAAK,OAAQ,iBAAkBhC,IAAK,SAC/DlE,EAAIH,EAAIG,EAAIwD,EAAK0C,EAAK3D,EAASG,EAAEF,MAAOtC,GAAI,2BAE9C,OAAOL,IAOTsE,QAAS,SAAStE,EAAIK,EAAGqE,GACnBrE,EAAIL,EAAG6E,WAAWtE,SAAQP,EAAG6E,WAAWxE,GAAG2B,MAAMsC,QAAUI,MA4E3C,mBAAbzE,UAA0B,CACnCyB,EAAS,WACP,GAAI1B,GAAKJ,EAAS,SAAUgH,KAAO,YAEnC,OADAzG,GAAIF,SAAS4G,qBAAqB,QAAQ,GAAI7G,GACvCA,EAAG0B,OAAS1B,EAAG8G,aAGxB,IAAIC,GAAQzE,EAAI1C,EAAS,UAAWoH,SAAU,uBAEzCnF,EAAOkF,EAAO,cAAgBA,EAAME,IAAKjE,IACzC5B,EAAmBS,EAAOkF,EAAO,aAGxC,MAAOrH","file":"spin.min.js","sourcesContent":["/**\n * Copyright (c) 2011-2014 Felix Gnass\n * Licensed under the MIT license\n * http://spin.js.org/\n *\n * Example:\n    var opts = {\n      lines: 12,            // The number of lines to draw\n      length: 7,            // The length of each line\n      width: 5,             // The line thickness\n      radius: 10,           // The radius of the inner circle\n      scale: 1.0,           // Scales overall size of the spinner\n      corners: 1,           // Roundness (0..1)\n      color: '#000',        // #rgb or #rrggbb\n      opacity: 1/4,         // Opacity of the lines\n      rotate: 0,            // Rotation offset\n      direction: 1,         // 1: clockwise, -1: counterclockwise\n      speed: 1,             // Rounds per second\n      trail: 100,           // Afterglow percentage\n      fps: 20,              // Frames per second when using setTimeout()\n      zIndex: 2e9,          // Use a high z-index by default\n      className: 'spinner', // CSS class to assign to the element\n      top: '50%',           // center vertically\n      left: '50%',          // center horizontally\n      shadow: false,        // Whether to render a shadow\n      hwaccel: false,       // Whether to use hardware acceleration (might be buggy)\n      position: 'absolute'  // Element positioning\n    };\n    var target = document.getElementById('foo');\n    var spinner = new Spinner(opts).spin(target);\n */\n;(function(root, factory) {\n  if (typeof module == 'object' && module.exports) module.exports = factory(); // CommonJS\n  else if (typeof define == 'function' && define.amd) define(factory); // AMD module\n  else root.Spinner = factory(); // Browser global\n}\n(this, function() {\n  'use strict';\n\n  var prefixes = ['webkit', 'Moz', 'ms', 'O']; // Vendor prefixes\n  var animations = {}; // Animation rules keyed by their name\n  var useCssAnimations; // Whether to use CSS animations or setTimeout\n  var sheet; // A stylesheet to hold the @keyframe or VML rules\n\n  /**\n   * Utility function to create elements. If no tag name is given,\n   * a DIV is created. Optionally properties can be passed.\n   */\n  function createEl(tag, prop) {\n    var el = document.createElement(tag || 'div');\n    var n;\n\n    for (n in prop) el[n] = prop[n];\n    return el;\n  }\n\n  /**\n   * Appends children and returns the parent.\n   */\n  function ins(parent /* child1, child2, ...*/) {\n    for (var i = 1, n = arguments.length; i < n; i++) {\n      parent.appendChild(arguments[i]);\n    }\n\n    return parent;\n  }\n\n  /**\n   * Creates an opacity keyframe animation rule and returns its name.\n   * Since most mobile Webkits have timing issues with animation-delay,\n   * we create separate rules for each line/segment.\n   */\n  function addAnimation(alpha, trail, i, lines) {\n    var name = ['opacity', trail, ~~(alpha * 100), i, lines].join('-');\n    var start = 0.01 + i/lines * 100;\n    var z = Math.max(1 - (1-alpha) / trail * (100-start), alpha);\n    var prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase();\n    var pre = prefix && '-' + prefix + '-' || '';\n\n    if (!animations[name]) {\n      sheet.insertRule(\n        '@' + pre + 'keyframes ' + name + '{' +\n        '0%{opacity:' + z + '}' +\n        start + '%{opacity:' + alpha + '}' +\n        (start+0.01) + '%{opacity:1}' +\n        (start+trail) % 100 + '%{opacity:' + alpha + '}' +\n        '100%{opacity:' + z + '}' +\n        '}', sheet.cssRules.length);\n\n      animations[name] = 1;\n    }\n\n    return name;\n  }\n\n  /**\n   * Tries various vendor prefixes and returns the first supported property.\n   */\n  function vendor(el, prop) {\n    var s = el.style;\n    var pp;\n    var i;\n\n    prop = prop.charAt(0).toUpperCase() + prop.slice(1);\n    if (s[prop] !== undefined) return prop;\n    for (i = 0; i < prefixes.length; i++) {\n      pp = prefixes[i]+prop;\n      if (s[pp] !== undefined) return pp;\n    }\n  }\n\n  /**\n   * Sets multiple style properties at once.\n   */\n  function css(el, prop) {\n    for (var n in prop) {\n      el.style[vendor(el, n) || n] = prop[n];\n    }\n\n    return el;\n  }\n\n  /**\n   * Fills in default values.\n   */\n  function merge(obj) {\n    for (var i = 1; i < arguments.length; i++) {\n      var def = arguments[i];\n      for (var n in def) {\n        if (obj[n] === undefined) obj[n] = def[n];\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Returns the line color from the given string or array.\n   */\n  function getColor(color, idx) {\n    return typeof color == 'string' ? color : color[idx % color.length];\n  }\n\n  // Built-in defaults\n\n  var defaults = {\n    lines: 12,            // The number of lines to draw\n    length: 7,            // The length of each line\n    width: 5,             // The line thickness\n    radius: 10,           // The radius of the inner circle\n    scale: 1.0,           // Scales overall size of the spinner\n    corners: 1,           // Roundness (0..1)\n    color: '#000',        // #rgb or #rrggbb\n    opacity: 1/4,         // Opacity of the lines\n    rotate: 0,            // Rotation offset\n    direction: 1,         // 1: clockwise, -1: counterclockwise\n    speed: 1,             // Rounds per second\n    trail: 100,           // Afterglow percentage\n    fps: 20,              // Frames per second when using setTimeout()\n    zIndex: 2e9,          // Use a high z-index by default\n    className: 'spinner', // CSS class to assign to the element\n    top: '50%',           // center vertically\n    left: '50%',          // center horizontally\n    shadow: false,        // Whether to render a shadow\n    hwaccel: false,       // Whether to use hardware acceleration\n    position: 'absolute'  // Element positioning\n  };\n\n  /** The constructor */\n  function Spinner(o) {\n    this.opts = merge(o || {}, Spinner.defaults, defaults);\n  }\n\n  // Global defaults that override the built-ins:\n  Spinner.defaults = {};\n\n  merge(Spinner.prototype, {\n    /**\n     * Adds the spinner to the given target element. If this instance is already\n     * spinning, it is automatically removed from its previous target b calling\n     * stop() internally.\n     */\n    spin: function(target) {\n      this.stop();\n\n      var self = this;\n      var o = self.opts;\n      var el = self.el = createEl(null, {className: o.className});\n\n      css(el, {\n        position: o.position,\n        width: 0,\n        zIndex: o.zIndex,\n        left: o.left,\n        top: o.top\n      });\n\n      if (target) {\n        target.insertBefore(el, target.firstChild || null);\n      }\n\n      el.setAttribute('role', 'progressbar');\n      self.lines(el, self.opts);\n\n      if (!useCssAnimations) {\n        // No CSS animation support, use setTimeout() instead\n        var i = 0;\n        var start = (o.lines - 1) * (1 - o.direction) / 2;\n        var alpha;\n        var fps = o.fps;\n        var f = fps / o.speed;\n        var ostep = (1 - o.opacity) / (f * o.trail / 100);\n        var astep = f / o.lines;\n\n        (function anim() {\n          i++;\n          for (var j = 0; j < o.lines; j++) {\n            alpha = Math.max(1 - (i + (o.lines - j) * astep) % f * ostep, o.opacity);\n\n            self.opacity(el, j * o.direction + start, alpha, o);\n          }\n          self.timeout = self.el && setTimeout(anim, ~~(1000 / fps));\n        })();\n      }\n      return self;\n    },\n\n    /**\n     * Stops and removes the Spinner.\n     */\n    stop: function() {\n      var el = this.el;\n      if (el) {\n        clearTimeout(this.timeout);\n        if (el.parentNode) el.parentNode.removeChild(el);\n        this.el = undefined;\n      }\n      return this;\n    },\n\n    /**\n     * Internal method that draws the individual lines. Will be overwritten\n     * in VML fallback mode below.\n     */\n    lines: function(el, o) {\n      var i = 0;\n      var start = (o.lines - 1) * (1 - o.direction) / 2;\n      var seg;\n\n      function fill(color, shadow) {\n        return css(createEl(), {\n          position: 'absolute',\n          width: o.scale * (o.length + o.width) + 'px',\n          height: o.scale * o.width + 'px',\n          background: color,\n          boxShadow: shadow,\n          transformOrigin: 'left',\n          transform: 'rotate(' + ~~(360/o.lines*i + o.rotate) + 'deg) translate(' + o.scale*o.radius + 'px' + ',0)',\n          borderRadius: (o.corners * o.scale * o.width >> 1) + 'px'\n        });\n      }\n\n      for (; i < o.lines; i++) {\n        seg = css(createEl(), {\n          position: 'absolute',\n          top: 1 + ~(o.scale * o.width / 2) + 'px',\n          transform: o.hwaccel ? 'translate3d(0,0,0)' : '',\n          opacity: o.opacity,\n          animation: useCssAnimations && addAnimation(o.opacity, o.trail, start + i * o.direction, o.lines) + ' ' + 1 / o.speed + 's linear infinite'\n        });\n\n        if (o.shadow) ins(seg, css(fill('#000', '0 0 4px #000'), {top: '2px'}));\n        ins(el, ins(seg, fill(getColor(o.color, i), '0 0 1px rgba(0,0,0,.1)')));\n      }\n      return el;\n    },\n\n    /**\n     * Internal method that adjusts the opacity of a single line.\n     * Will be overwritten in VML fallback mode below.\n     */\n    opacity: function(el, i, val) {\n      if (i < el.childNodes.length) el.childNodes[i].style.opacity = val;\n    }\n\n  });\n\n\n  function initVML() {\n\n    /* Utility function to create a VML tag */\n    function vml(tag, attr) {\n      return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr);\n    }\n\n    // No CSS transforms but VML support, add a CSS rule for VML elements:\n    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)');\n\n    Spinner.prototype.lines = function(el, o) {\n      var r = o.scale * (o.length + o.width);\n      var s = o.scale * 2 * r;\n\n      function grp() {\n        return css(\n          vml('group', {\n            coordsize: s + ' ' + s,\n            coordorigin: -r + ' ' + -r\n          }),\n          { width: s, height: s }\n        );\n      }\n\n      var margin = -(o.width + o.length) * o.scale * 2 + 'px';\n      var g = css(grp(), {position: 'absolute', top: margin, left: margin});\n      var i;\n\n      function seg(i, dx, filter) {\n        ins(\n          g,\n          ins(\n            css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx}),\n            ins(\n              css(\n                vml('roundrect', {arcsize: o.corners}),\n                {\n                  width: r,\n                  height: o.scale * o.width,\n                  left: o.scale * o.radius,\n                  top: -o.scale * o.width >> 1,\n                  filter: filter\n                }\n              ),\n              vml('fill', {color: getColor(o.color, i), opacity: o.opacity}),\n              vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change\n            )\n          )\n        );\n      }\n\n      if (o.shadow)\n        for (i = 1; i <= o.lines; i++) {\n          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)');\n        }\n\n      for (i = 1; i <= o.lines; i++) seg(i);\n      return ins(el, g);\n    };\n\n    Spinner.prototype.opacity = function(el, i, val, o) {\n      var c = el.firstChild;\n      o = o.shadow && o.lines || 0;\n      if (c && i + o < c.childNodes.length) {\n        c = c.childNodes[i + o]; c = c && c.firstChild; c = c && c.firstChild;\n        if (c) c.opacity = val;\n      }\n    };\n  }\n\n  if (typeof document !== 'undefined') {\n    sheet = (function() {\n      var el = createEl('style', {type : 'text/css'});\n      ins(document.getElementsByTagName('head')[0], el);\n      return el.sheet || el.styleSheet;\n    }());\n\n    var probe = css(createEl('group'), {behavior: 'url(#default#VML)'});\n\n    if (!vendor(probe, 'transform') && probe.adj) initVML();\n    else useCssAnimations = vendor(probe, 'animation');\n  }\n\n  return Spinner;\n\n}));\n"],"sourceRoot":"/source/"}