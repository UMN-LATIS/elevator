var SpiderGL={};SpiderGL.TAG=0,SpiderGL.openNamespace=function(e){function t(e){return s.test(e)}function r(e){return u.test(e)&&!t(e)}function i(e){return o.test(e)}function n(e){return e.substr(0,1).toUpperCase()+e.substr(1)}function a(e){if(e)for(var n in e)if("_"!=n.substr(0,1)){var a=e[n];r(n)?d[n]=a:i(n)?p[n]=a:t(n)&&(c[n]=a)}}e=SpiderGL.Utility.getDefaultObject({globalObject:SpiderGL.openNamespace.DEFAULT_GLOBAL_OBJECT,constantPrefix:SpiderGL.openNamespace.DEFAULT_CONSTANT_PREFIX,functionPrefix:SpiderGL.openNamespace.DEFAULT_FUNCTION_PREFIX,classPrefix:SpiderGL.openNamespace.DEFAULT_CLASS_PREFIX},e);var s=new RegExp("^(([_$0-9A-Z])+)$"),u=new RegExp("^([A-Z])"),o=new RegExp("^(([a-z])+([_$0-9A-Za-z])*)$"),d={},p={},c={},_=["Core","DOM","IO","Math","Mesh","Model","Semantic","Space","Type","UserInterface","Utility","Version","WebGL"];for(var f in _)a(SpiderGL[_[f]]);for(var f in d){var h=e.classPrefix+n(f);e.globalObject[h]=d[f]}for(var f in p){var h=e.functionPrefix+n(f);e.globalObject[h]=p[f]}for(var f in c){var h=e.constantPrefix+n(f);e.globalObject[h]=c[f]}},SpiderGL.openNamespace.DEFAULT_GLOBAL_OBJECT=window,SpiderGL.openNamespace.DEFAULT_CONSTANT_PREFIX="SGL_",SpiderGL.openNamespace.DEFAULT_FUNCTION_PREFIX="sgl",SpiderGL.openNamespace.DEFAULT_CLASS_PREFIX="Sgl",SpiderGL.Version={},SpiderGL.Version.VERSION_MAJOR=0,SpiderGL.Version.VERSION_MINOR=2,SpiderGL.Version.VERSION_REVISION=1,SpiderGL.Version.VERSION_STRING=SpiderGL.Version.VERSION_MAJOR+"."+SpiderGL.Version.VERSION_MINOR+"."+SpiderGL.Version.VERSION_REVISION,SpiderGL.Core={},SpiderGL.Core.DEFAULT={},SpiderGL.Core.DONT_CARE={},SpiderGL.Core.EMPTY_STRING="",SpiderGL.Core.EMPTY_OBJECT={},SpiderGL.Core.EMPTY_ARRAY=[],SpiderGL.Core.EMPTY_FUNCTION=function(){},SpiderGL.Core.generateUID=function(){return SpiderGL.Core.generateUID._lastUID++,SpiderGL.Core.generateUID._lastUID},SpiderGL.Core.generateUID._lastUID=0,SpiderGL.Core.ObjectBase=function(){this._uid=SpiderGL.Core.generateUID()},SpiderGL.Core.ObjectBase.prototype={get uid(){return this._uid}},SpiderGL.Type={},SpiderGL.Type.LITTLE_ENDIAN=function(){var e=new Uint8Array([18,52]),t=new Uint16Array(e.buffer);return 13330==t[0]}(),SpiderGL.Type.BIG_ENDIAN=!SpiderGL.Type.BIG_ENDIAN,SpiderGL.Type.NO_TYPE=0,SpiderGL.Type.INT8=1,SpiderGL.Type.UINT8=2,SpiderGL.Type.INT16=3,SpiderGL.Type.UINT16=4,SpiderGL.Type.INT32=5,SpiderGL.Type.UINT32=6,SpiderGL.Type.FLOAT32=7,SpiderGL.Type.SIZEOF_INT8=Int8Array.BYTES_PER_ELEMENT,SpiderGL.Type.SIZEOF_UINT8=Uint8Array.BYTES_PER_ELEMENT,SpiderGL.Type.SIZEOF_INT16=Int16Array.BYTES_PER_ELEMENT,SpiderGL.Type.SIZEOF_UINT16=Uint16Array.BYTES_PER_ELEMENT,SpiderGL.Type.SIZEOF_INT32=Int32Array.BYTES_PER_ELEMENT,SpiderGL.Type.SIZEOF_UINT32=Uint32Array.BYTES_PER_ELEMENT,SpiderGL.Type.SIZEOF_FLOAT32=Float32Array.BYTES_PER_ELEMENT,SpiderGL.Type.typeSize=function(){var e={};return e[SpiderGL.Type.NO_TYPE]=0,e[SpiderGL.Type.INT8]=SpiderGL.Type.SIZEOF_INT8,e[SpiderGL.Type.UINT8]=SpiderGL.Type.SIZEOF_UINT8,e[SpiderGL.Type.INT16]=SpiderGL.Type.SIZEOF_INT16,e[SpiderGL.Type.UINT16]=SpiderGL.Type.SIZEOF_UINT16,e[SpiderGL.Type.INT32]=SpiderGL.Type.SIZEOF_INT32,e[SpiderGL.Type.UINT32]=SpiderGL.Type.SIZEOF_UINT32,e[SpiderGL.Type.FLOAT32]=SpiderGL.Type.SIZEOF_FLOAT32,function(t){return e[t]}}(),SpiderGL.Type.typeToGL=function(){var e={};return e[SpiderGL.Type.NO_TYPE]=WebGLRenderingContext.prototype.NONE,e[SpiderGL.Type.INT8]=WebGLRenderingContext.prototype.BYTE,e[SpiderGL.Type.UINT8]=WebGLRenderingContext.prototype.UNSIGNED_BYTE,e[SpiderGL.Type.INT16]=WebGLRenderingContext.prototype.SHORT,e[SpiderGL.Type.UINT16]=WebGLRenderingContext.prototype.UNSIGNED_SHORT,e[SpiderGL.Type.INT32]=WebGLRenderingContext.prototype.INT,e[SpiderGL.Type.UINT32]=WebGLRenderingContext.prototype.UNSIGNED_INT,e[SpiderGL.Type.FLOAT32]=WebGLRenderingContext.prototype.FLOAT,function(t){return e[t]}}(),SpiderGL.Type.typeFromGL=function(){var e={};return e[WebGLRenderingContext.prototype.NONE]=SpiderGL.Type.NO_TYPE,e[WebGLRenderingContext.prototype.BYTE]=SpiderGL.Type.INT8,e[WebGLRenderingContext.prototype.UNSIGNED_BYTE]=SpiderGL.Type.UINT8,e[WebGLRenderingContext.prototype.SHORT]=SpiderGL.Type.INT16,e[WebGLRenderingContext.prototype.UNSIGNED_SHORT]=SpiderGL.Type.UINT16,e[WebGLRenderingContext.prototype.INT]=SpiderGL.Type.INT32,e[WebGLRenderingContext.prototype.UNSIGNED_INT]=SpiderGL.Type.UINT32,e[WebGLRenderingContext.prototype.FLOAT]=SpiderGL.Type.FLOAT32,function(t){return e[t]}}(),SpiderGL.Type.typeSizeFromGL=function(e){var t=SpiderGL.Type.typeFromGL(e);return SpiderGL.Type.typeSize(t)},SpiderGL.Type.typeToTypedArrayConstructor=function(){var e={};return e[SpiderGL.Type.NO_TYPE]=ArrayBuffer,e[SpiderGL.Type.INT8]=Int8Array,e[SpiderGL.Type.UINT8]=Uint8Array,e[SpiderGL.Type.INT16]=Int16Array,e[SpiderGL.Type.UINT16]=Uint16Array,e[SpiderGL.Type.INT32]=Int32Array,e[SpiderGL.Type.UINT32]=Uint32Array,e[SpiderGL.Type.FLOAT32]=Float32Array,function(t){return e[t]}}(),SpiderGL.Type.POINTS=0,SpiderGL.Type.LINES=1,SpiderGL.Type.LINE_LOOP=2,SpiderGL.Type.LINE_STRIP=3,SpiderGL.Type.TRIANGLES=4,SpiderGL.Type.TRIANGLE_FAN=5,SpiderGL.Type.TRIANGLE_STRIP=6,SpiderGL.Type.primitiveToGL=function(){var e={};return e[SpiderGL.Type.POINTS]=WebGLRenderingContext.prototype.POINTS,e[SpiderGL.Type.LINES]=WebGLRenderingContext.prototype.LINES,e[SpiderGL.Type.LINE_LOOP]=WebGLRenderingContext.prototype.LINE_LOOP,e[SpiderGL.Type.LINE_STRIP]=WebGLRenderingContext.prototype.LINE_STRIP,e[SpiderGL.Type.TRIANGLES]=WebGLRenderingContext.prototype.TRIANGLES,e[SpiderGL.Type.TRIANGLE_FAN]=WebGLRenderingContext.prototype.TRIANGLE_FAN,e[SpiderGL.Type.TRIANGLE_STRIP]=WebGLRenderingContext.prototype.TRIANGLE_STRIP,function(t){return e[t]}}(),SpiderGL.Type.instanceOf=function(e,t){return e instanceof t},SpiderGL.Type.isNumber=function(e){return"number"==typeof e},SpiderGL.Type.isString=function(e){return"string"==typeof e},SpiderGL.Type.isFunction=function(e){return"function"==typeof e},SpiderGL.Type.isArray=function(e){return e&&e.constructor===Array},SpiderGL.Type.isTypedArray=function(e){return e&&"undefined"!=typeof e.buffer&&e.buffer instanceof ArrayBuffer},SpiderGL.Type.extend=function(e,t){function r(){}r.prototype=t.prototype;var i=e.prototype,n=new r;n.constructor=e;var a=null,s=null;for(var u in i)a=i.__lookupGetter__(u),a&&n.__defineGetter__(u,a),s=i.__lookupSetter__(u),s&&n.__defineSetter__(u,s),a||s||(n[u]=i[u]);e.prototype=n},SpiderGL.Type.defineClassGetter=function(e,t,r){e.prototype.__defineGetter__(t,r)},SpiderGL.Type.defineClassSetter=function(e,t,r){e.prototype.__defineSetter__(t,r)},SpiderGL.Type.defineObjectGetter=function(e,t,r){e.__defineGetter__(t,r)},SpiderGL.Type.defineObjectSetter=function(e,t,r){e.__defineSetter__(t,r)},SpiderGL.Utility={},SpiderGL.Utility.getDefaultValue=function(e,t){return void 0===e||e===SpiderGL.Core.DEFAULT?t:e},SpiderGL.Utility.getDefaultObject=function(e,t){if(t){var r=SpiderGL.Core.DEFAULT;for(var i in t)t[i]!=r&&(e[i]=t[i])}return e},SpiderGL.Utility.setDefaultValues=function(e,t){if(!t)return e;var r=SpiderGL.Core.DEFAULT;for(var i in t)t[i]==r&&"undefined"!=typeof e[i]&&(t[i]=e[i]);for(var i in e)"undefined"==typeof t[i]&&(t[i]=e[i]);return t},SpiderGL.Utility.getAttrib4fv=function(e){return SpiderGL.Type.isNumber(e)?[e,0,0,1]:e?[void 0!=e[0]?e[0]:0,void 0!=e[1]?e[1]:0,void 0!=e[2]?e[2]:0,void 0!=e[3]?e[3]:1]:[0,0,0,1]},SpiderGL.Utility.getTime=function(){return(new Date).getTime()},SpiderGL.Utility.Timer=function(){this._tStart=-1,this._tElapsed=0},SpiderGL.Utility.Timer.prototype={_accumElapsed:function(){this._tElapsed+=this.now-this._tStart},get now(){return Date.now()},start:function(){this.isStarted||this.isPaused||(this._tStart=this.now,this._tElapsed=0)},restart:function(){var e=this.elapsed;return this._tStart=this.now,this._tElapsed=0,e},stop:function(){this.isStarted&&(this.isPaused||(this._accumElapsed(),this._tStart=-1))},get isStarted(){return this._tStart>=0},pause:function(){this.isStarted&&(this.isPaused||(this._accumElapsed(),this._tStart=-2))},resume:function(){this.isStarted&&this.isPaused&&(this._tStart=this.now)},get isPaused(){return-2==this._tStart},get elapsed(){return this.isStarted?this._tElapsed+(this.now-this._tStart):this._tElapsed}},SpiderGL.DOM={},SpiderGL.DOM.getElementById=function(e){return document.getElementById(e)},SpiderGL.DOM.getElementText=function(e){var t=document.getElementById(e);if(!t)return null;var r="";for(t=t.firstChild;t;)3==t.nodeType&&(r+=t.textContent),t=t.nextSibling;return r},SpiderGL.IO={},SpiderGL.IO.Request=function(e,t){SpiderGL.Core.ObjectBase.call(this),t=SpiderGL.Utility.getDefaultObject({async:SpiderGL.IO.Request.DEFAULT_ASYNC,send:SpiderGL.IO.Request.DEFAULT_SEND,onProgress:null,onCancel:null,onError:null,onSuccess:null,onFinish:null},t),this._url=e,this._async=t.async,this._status=SpiderGL.IO.Request.NONE,this._sent=!1,this._aborted=!1,this._data=null,this._loaded=0,this._total=0,this._events={progress:{main:null,listeners:[]},cancel:{main:null,listeners:[]},error:{main:null,listeners:[]},success:{main:null,listeners:[]},finish:{main:null,listeners:[]}},this.onProgress=t.onProgress,this.onCancel=t.onCancel,this.onError=t.onError,this.onSuccess=t.onSuccess,this.onFinish=t.onFinish},SpiderGL.IO.Request.NONE=0,SpiderGL.IO.Request.ONGOING=1,SpiderGL.IO.Request.CANCELLED=2,SpiderGL.IO.Request.FAILED=3,SpiderGL.IO.Request.SUCCEEDED=4,SpiderGL.IO.Request.DEFAULT_ASYNC=!0,SpiderGL.IO.Request.DEFAULT_SEND=!0,SpiderGL.IO.Request.prototype={_indexOf:function(e,t){for(var r=0,i=e.length;i>r;++r)if(e[r]==t)return r;return-1},_setMainListener:function(e,t){var r=this._events[e];r&&r.main!=t&&(t?this.addEventListener(e,t):this.removeEventListener(e,t),r.main=t)},_dispatch:function(){var e=arguments[0],t=this._events[e];if(t){var r=Array.prototype.slice.call(arguments,1);r.push(this);for(var i=t.listeners,n=0,a=i.length;a>n;++n)i[n].apply(null,r)}},_doPostProgress:function(){},_doPostCancel:function(){},_doPostError:function(){},_doPostSuccess:function(){},_doPostFinish:function(){},_doOnProgress:function(e,t){this._aborted||(this._loaded=e,this._total=t,this._doPostProgress(),this._dispatch("progress",this._loaded,this._total))},_doOnCancel:function(){this._aborted||(this._status=SpiderGL.IO.Request.CANCELLED,this._finishTime=SpiderGL.Utility.getTime(),this._doPostCancel(),this._dispatch("cancel"))},_doOnError:function(){this._aborted||(this._status=SpiderGL.IO.Request.FAILED,this._finishTime=SpiderGL.Utility.getTime(),this._doPostError(),this._dispatch("error"))},_doOnSuccess:function(){this._aborted||(this._status=SpiderGL.IO.Request.SUCCEEDED,this._finishTime=SpiderGL.Utility.getTime(),this._doPostSuccess(),this._dispatch("success"))},_doOnFinish:function(){this._doPostFinish(),this._dispatch("finish")},_doSend:function(){return!1},_doCancel:function(){return!1},get canSend(){return this._url&&!this._sent},get url(){return this._url},set url(e){this.cancel(),this._url=e},get status(){return this._status},get data(){return this._data},get bytesLoaded(){return this._loaded},get bytesTotal(){return this._total},get sent(){return this._sent},get ongoing(){return this._status==SpiderGL.IO.Request.ONGOING},get cancelled(){return this._status==SpiderGL.IO.Request.CANCELLED},get failed(){return this._status==SpiderGL.IO.Request.FAILED},get succeeded(){return this._status==SpiderGL.IO.Request.SUCCEEDED},get finished(){return this.succeeded||this.failed||this.cancelled},get startTime(){return this._startTime},get finishTime(){return this._finishTime},get elapsedTime(){return this._startTime<0?0:this._finishTime<0?SpiderGL.Utility.getTime()-this._startTime:this._finishTime-this._startTime},addEventListener:function(e,t){if(t){var r=this._events[e];if(r){var i=this._indexOf(r.listeners,t);i>=0||r.listeners.push(t)}}},removeEventListener:function(e,t){var r=this._events[e];if(r){var i=this._indexOf(r.listeners,t);0>i||r.listeners.splice(i,1)}},get onProgress(){return this._events.progress.main},set onProgress(e){this._setMainListener("progress",e)},get onCancel(){return this._events.cancel.main},set onCancel(e){this._setMainListener("cancel",e)},get onError(){return this._events.error.main},set onError(e){this._setMainListener("error",e)},get onSuccess(){return this._events.success.main},set onSuccess(e){this._setMainListener("success",e)},get onFinish(){return this._events.finish.main},set onFinish(e){this._setMainListener("finish",e)},cancel:function(){if(!this.ongoing)return!1;this._status=SpiderGL.IO.Request.CANCELLED,this._aborted=!0;var e=this._doCancel();return this._finishTime=SpiderGL.Utility.getTime(),e},send:function(){if(!this.canSend)return!1;this._data=null,this._status=SpiderGL.IO.Request.ONGOING,this._aborted=!1,this._sent=!0,this._finishTime=-1,this._startTime=SpiderGL.Utility.getTime();var e=this._doSend();return e||(this._startTime=-1,this._status=SpiderGL.IO.Request.NONE,this._sent=!1),e}},SpiderGL.Type.extend(SpiderGL.IO.Request,SpiderGL.Core.ObjectBase),SpiderGL.IO.XHRRequestBase=function(e,t){t=t||{},SpiderGL.IO.Request.call(this,e,t);var r=this,i=new XMLHttpRequest;if(this._xhr=i,i.onprogress=function(e){r._xhrOnProgress(e)},i.onabort=function(){r._doOnCancel(),r._doOnFinish()},i.onerror=function(){r._doOnError(),r._doOnFinish()},i.onload=function(){var e=i.status;0===e||200===e||r._range&&206==e?r._doOnSuccess():r._doOnError(),r._doOnFinish()},this._range=null,this._xhr.open("GET",this._url,this._async),"range"in t){this._range=[t.range[0],t.range[1]];var n="bytes="+t.range[0]+"-"+t.range[1];i.setRequestHeader("Range",n)}this._prepareXHR();var a=SpiderGL.Utility.getDefaultValue(t.send,SpiderGL.IO.Request.DEFAULT_SEND);a&&this.send()},SpiderGL.IO.XHRRequestBase.prototype={_prepareXHR:function(){},_doCancel:function(){return this._xhr.abort(),this._xhr=new XMLHttpRequest,this._xhr.open("GET",this._url,this._async),this._prepareXHR(),!0},_doSend:function(){return this._xhr.send(),!0},_xhrOnProgress:function(e){var t=0,r=0;e&&e.lengthComputable&&(t=e.loaded,r=e.total),this._doOnProgress(t,r)}},SpiderGL.Type.extend(SpiderGL.IO.XHRRequestBase,SpiderGL.IO.Request),SpiderGL.IO.XHRRequest=function(e,t){SpiderGL.IO.XHRRequestBase.call(this,e,t)},SpiderGL.IO.XHRRequest.prototype={_doPostSuccess:function(){this._data=this._xhr.responseText},get xhr(){return this._xhr},get response(){return this.data}},SpiderGL.Type.extend(SpiderGL.IO.XHRRequest,SpiderGL.IO.XHRRequestBase),SpiderGL.IO.TextRequest=function(e,t){SpiderGL.IO.XHRRequestBase.call(this,e,t)},SpiderGL.IO.TextRequest.prototype={_doPostSuccess:function(){this._data=this._xhr.responseText},get text(){return this.data}},SpiderGL.Type.extend(SpiderGL.IO.TextRequest,SpiderGL.IO.XHRRequestBase),SpiderGL.IO.readText=function(e){var t=new SpiderGL.IO.TextRequest(e,{async:!1});return t.text},SpiderGL.IO.requestText=function(e,t){t=SpiderGL.Utility.getDefaultObject({},t),t.async=!0,t.send=!0;var r=new SpiderGL.IO.TextRequest(e,t);return r},SpiderGL.IO.JSONRequest=function(e,t){SpiderGL.IO.XHRRequestBase.call(this,e,t)},SpiderGL.IO.JSONRequest.prototype={_doPostSuccess:function(){this._data=JSON.parse(this._xhr.responseText)},get text(){return this._xhr.responseText},get json(){return this.data}},SpiderGL.Type.extend(SpiderGL.IO.JSONRequest,SpiderGL.IO.XHRRequestBase),SpiderGL.IO.readJSON=function(e){var t=new SpiderGL.IO.JSONRequest(e,{async:!1});return t.json},SpiderGL.IO.requestJSON=function(e,t){t=SpiderGL.Utility.getDefaultObject({},t),t.async=!0,t.send=!0;var r=new SpiderGL.IO.JSONRequest(e,t);return r},SpiderGL.IO.BinaryRequest=function(e,t){SpiderGL.IO.XHRRequestBase.call(this,e,t)},SpiderGL.IO.BinaryRequest.prototype={_prepareXHR:function(){var e=this._xhr,t=!1;t&&e.overrideMimeType("text/plain; charset=x-user-defined"),e.responseType="arraybuffer"},_setArrayBuffer:function(){var e=this._xhr;if("arraybuffer"==e.responseType)this._data=e.response;else if(null!=e.mozResponseArrayBuffer)this._data=e.mozResponseArrayBuffer;else if(null!=e.responseText){for(var t=new String(e.responseText),r=new Array(t.length),i=0,n=t.length;n>i;++i)r[i]=255&t.charCodeAt(i);this._data=new Uint8Array(r).buffer}else this._data=null},_doPostSuccess:function(){this._setArrayBuffer()},get data(){return this.ongoing&&this._setArrayBuffer(),this._data},get buffer(){return this.data}},SpiderGL.Type.extend(SpiderGL.IO.BinaryRequest,SpiderGL.IO.XHRRequestBase),SpiderGL.IO.readBinary=function(e){var t=new SpiderGL.IO.BinaryRequest(e,{async:!1});return t.buffer},SpiderGL.IO.requestBinary=function(e,t){t=SpiderGL.Utility.getDefaultObject({},t),t.async=!0,t.send=!0;var r=new SpiderGL.IO.BinaryRequest(e,t);return r},SpiderGL.IO.ImageRequest=function(e,t){t=t||{},SpiderGL.IO.Request.call(this,e,t);var r=this,i=new Image;this._img=i,this._data=i,i.onabort=function(){r._doOnCancel(),r._doOnFinish()},i.onerror=function(){r._doOnError(),r._doOnFinish()},i.onload=function(){r._doOnSuccess(),r._doOnFinish()},"undefined"!=typeof i.onprogress&&(i.onprogress=function(e){r._imgOnProgress(e)});var n=SpiderGL.Utility.getDefaultValue(t.send,SpiderGL.IO.Request.DEFAULT_SEND);n&&this.send()},SpiderGL.IO.ImageRequest.prototype={_doPostSuccess:function(){this._data=this._img},_doCancel:function(){return this._img.src=null,this._img=new Image,!0},_doSend:function(){return this._img.src=this._url,!0},_imgOnProgress:function(e){var t=0,r=0;e&&e.lengthComputable&&(t=e.loaded,r=e.total),this._doOnProgress(t,r)},get image(){return this.data}},SpiderGL.Type.extend(SpiderGL.IO.ImageRequest,SpiderGL.IO.Request),SpiderGL.IO.requestImage=function(e,t){t=SpiderGL.Utility.getDefaultObject({},t),t.async=!0,t.send=!0;var r=new SpiderGL.IO.ImageRequest(e,t);return r},SpiderGL.IO.AggregateRequest=function(e){e=e||{},SpiderGL.IO.Request.call(this,"*",e);var t=this;this._proxyOnProgress=function(e,r,i){t._reqOnProgress(e,r,i)},this._proxyOnCancel=function(e){t._reqOnCancel(e)},this._proxyOnError=function(e){t._reqOnError(e)},this._proxyOnSuccess=function(e){t._reqOnSuccess(e)},this._proxyOnFinish=function(e){t._reqOnFinish(e)},this._aggrStartTime=-1,this._aggrFinishTime=-1,this._eventReq=null,this._cancelledReqs=0,this._failedReqs=0,this._succeededReqs=0,this._requests=[];var r=e.requests;if(r)for(var i=0,n=r.length;n>i;++i){var a=r[i];a&&!a.sent&&(this._installProxies(a),this.addRequest(a))}var s=SpiderGL.Utility.getDefaultValue(e.send,SpiderGL.IO.Request.DEFAULT_SEND);s&&this.send()},SpiderGL.IO.AggregateRequest.prototype={_doPostCancel:function(){this._requestsFinished||(this._status=SpiderGL.IO.Request.ONGOING)},_doPostError:function(){this._requestsFinished||(this._status=SpiderGL.IO.Request.ONGOING)},_doPostSuccess:function(){this._requestsFinished||(this._status=SpiderGL.IO.Request.ONGOING)},_doCancel:function(){for(var e=this._requests,t=0,r=e.length;r>t;++t)e[t].cancel();this._aggrFinishTime=SpiderGL.Utility.getTime()},_doSend:function(){this._aggrStartTime=SpiderGL.Utility.getTime();for(var e=this._requests,t=0,r=e.length;r>t;++t)e[t].send()},get _requestsFinished(){return this._cancelledReqs+this._failedReqs+this._succeededReqs==this._requests.length},_installProxies:function(e){e.addEventListener("progress",this._proxyOnProgress),e.addEventListener("cancel",this._proxyOnCancel),e.addEventListener("error",this._proxyOnError),e.addEventListener("success",this._proxyOnSuccess),e.addEventListener("finish",this._proxyOnFinish)},_uninstallProxies:function(e){e.removeEventListener("progress",this._proxyOnProgress),e.removeEventListener("cancel",this._proxyOnCancel),e.removeEventListener("error",this._proxyOnError),e.removeEventListener("success",this._proxyOnSuccess),e.removeEventListener("finish",this._proxyOnFinish)},_reqOnProgress:function(e,t,r){var i=this._indexOf(this._requests,r);0>i||(this._eventReq=r,this._doOnProgress(e,t),this._eventReq=null)},_reqOnCancel:function(e){var t=this._indexOf(this._requests,e);0>t||(this._eventReq=e,this._cancelledReqs++,this._requestsFinished&&(this._aggrFinishTime=SpiderGL.Utility.getTime(),this._cancelledReqs==this._requests.length&&(this._eventReq=this,this._doOnCancel())),this._eventReq=null)},_reqOnError:function(e){var t=this._indexOf(this._requests,e);0>t||(this._eventReq=e,this._failedReqs++,this._requestsFinished&&(this._aggrFinishTime=SpiderGL.Utility.getTime(),this._eventReq=this,this._doOnError()),this._eventReq=null)},_reqOnSuccess:function(e){var t=this._indexOf(this._requests,e);0>t||(this._eventReq=e,this._succeededReqs++,this._requestsFinished&&(this._aggrFinishTime=SpiderGL.Utility.getTime(),this._eventReq=this,this._failedReqs>0?this._doOnError():this._doOnSuccess()),this._eventReq=null)},_reqOnFinish:function(e){var t=this._indexOf(this._requests,e);0>t||(this._uninstallProxies(e),this._eventReq=e,this._requestsFinished&&(this._eventReq=this,this._doOnFinish()),this._eventReq=null)},get eventSenderRequest(){return this._eventReq},get requests(){return this._requests.slice()},get requests$(){return this._requests},get startTime(){return this._aggrStartTime},get finishTime(){return this._aggrFinishTime},get elapsedTime(){return this._aggrStartTime<0?0:this._aggrFinishTime<0?SpiderGL.Utility.getTime()-this._aggrStartTime:this._aggrFinishTime-this._aggrStartTime},addRequest:function(e){if(e&&!this._sent){var t=this._indexOf(this._requests,e);t>=0||this._requests.push(e)}},removeRequest:function(e){if(e&&!this._sent){var t=this._indexOf(this._requests,e);0>t||this._requests.splice(t,1)}}},SpiderGL.Type.extend(SpiderGL.IO.AggregateRequest,SpiderGL.IO.Request),SpiderGL.Math={},SpiderGL.Math.DEG_TO_RAD=Math.PI/180,SpiderGL.Math.E=Math.E,SpiderGL.Math.LN2=Math.LN2,SpiderGL.Math.LN10=Math.LN10,SpiderGL.Math.LOG2E=Math.LOG2E,SpiderGL.Math.LOG10E=Math.LOG10E,SpiderGL.Math.PI=Math.PI,SpiderGL.Math.RAD_TO_DEG=180/Math.PI,SpiderGL.Math.SQRT2=Math.SQRT2,SpiderGL.Math.MAX_VALUE=Number.MAX_VALUE,SpiderGL.Math.MIN_VALUE=Number.MIN_VALUE,SpiderGL.Math.MAX_NUMBER=SpiderGL.Math.MAX_VALUE,SpiderGL.Math.MIN_NUMBER=-SpiderGL.Math.MAX_VALUE,SpiderGL.Math.NAN=Number.NaN,SpiderGL.Math.INFINITY=1/0,SpiderGL.Math.abs=function(e){return Math.abs(e)},SpiderGL.Math.acos=function(e){return Math.acos(e)},SpiderGL.Math.asin=function(e){return Math.asin(e)},SpiderGL.Math.atan=function(e){return Math.atan(e)},SpiderGL.Math.atan2=function(e,t){return Math.atan2(e,t)},SpiderGL.Math.ceil=function(e){return Math.ceil(e)},SpiderGL.Math.clamp=function(e,t,r){return t>=e?t:e>=r?r:e},SpiderGL.Math.cos=function(e){return Math.cos(e)},SpiderGL.Math.degToRad=function(e){return e*SpiderGL.Math.DEG_TO_RAD},SpiderGL.Math.exp=function(e){return Math.exp(e)},SpiderGL.Math.floor=function(e){return Math.floor(e)},SpiderGL.Math.lerp=function(e,t,r){return e+r*(t-e)},SpiderGL.Math.ln=function(e){return Math.log(e)},SpiderGL.Math.log=function(e){return Math.log(e)},SpiderGL.Math.log2=function(e){return SpiderGL.Math.log(e)/SpiderGL.Math.LN2},SpiderGL.Math.log10=function(e){return SpiderGL.Math.log(e)/SpiderGL.Math.LN10},SpiderGL.Math.max=function(e){return Math.max.apply(Math,arguments)},SpiderGL.Math.min=function(e){return Math.min.apply(Math,arguments)},SpiderGL.Math.pow=function(e,t){return Math.pow(e,t)},SpiderGL.Math.radToDeg=function(e){return e*SpiderGL.Math.RAD_TO_DEG},SpiderGL.Math.random=function(){return Math.random()},SpiderGL.Math.random01=function(){return SpiderGL.Math.random()},SpiderGL.Math.random11=function(){return 2*SpiderGL.Math.random()-1},SpiderGL.Math.randomRange=function(e,t){return e+SpiderGL.Math.random()*(t-e)},SpiderGL.Math.round=function(e){return Math.sqrt(e)},SpiderGL.Math.sin=function(e){return Math.sin(e)},SpiderGL.Math.sqrt=function(e){return Math.sqrt(e)},SpiderGL.Math.tan=function(e){return Math.tan(e)},SpiderGL.Math.Vec2={},SpiderGL.Math.Vec2.dup=function(e){return e.slice(0,2)},SpiderGL.Math.Vec2.scalar=function(e){return[e,e]},SpiderGL.Math.Vec2.zero=function(){return[0,0]},SpiderGL.Math.Vec2.one=function(){return[1,1]},SpiderGL.Math.Vec2.maxNumber=function(){return[SpiderGL.Math.MAX_NUMBER,SpiderGL.Math.MAX_NUMBER]},SpiderGL.Math.Vec2.minNumber=function(){return[SpiderGL.Math.MIN_NUMBER,SpiderGL.Math.MIN_NUMBER]},SpiderGL.Math.Vec2.to3=function(e,t){return[e[0],e[1],void 0!=t?t:0]},SpiderGL.Math.Vec2.to4=function(e,t,r){return[e[0],e[1],e[2],void 0!=t?t:0,void 0!=r?r:1]},SpiderGL.Math.Vec2.neg=function(e){return[-e[0],-e[1]]},SpiderGL.Math.Vec2.add=function(e,t){return[e[0]+t[0],e[1]+t[1]]},SpiderGL.Math.Vec2.adds=function(e,t){return[e[0]+t,e[1]+t]},SpiderGL.Math.Vec2.sub=function(e,t){return[e[0]-t[0],e[1]-t[1]]},SpiderGL.Math.Vec2.subs=function(e,t){return[e[0]-t,e[1]-t]},SpiderGL.Math.Vec2.ssub=function(e,t){return[e-t[0],e-t[1]]},SpiderGL.Math.Vec2.mul=function(e,t){return[e[0]*t[0],e[1]*t[1]]},SpiderGL.Math.Vec2.muls=function(e,t){return[e[0]*t,e[1]*t]},SpiderGL.Math.Vec2.div=function(e,t){return[e[0]/t[0],e[1]/t[1]]},SpiderGL.Math.Vec2.divs=function(e,t){return[e[0]/t,e[1]/t]},SpiderGL.Math.Vec2.sdiv=function(e,t){return[e/t[0],e/t[1]]},SpiderGL.Math.Vec2.rcp=function(e){return[1/e[0],1/e[1]]},SpiderGL.Math.Vec2.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]},SpiderGL.Math.Vec2.cross=function(e,t){return e[0]*t[1]-e[1]*t[0]},SpiderGL.Math.Vec2.perp=function(e){return[e[1],-e[0]]},SpiderGL.Math.Vec2.sqLength=function(e){return SpiderGL.Math.Vec2.dot(e,e)},SpiderGL.Math.Vec2.length=function(e){return SpiderGL.Math.sqrt(SpiderGL.Math.Vec2.sqLength(e))},SpiderGL.Math.Vec2.normalize=function(e){var t=1/SpiderGL.Math.Vec2.length(e);return SpiderGL.Math.Vec2.muls(e,t)},SpiderGL.Math.Vec2.abs=function(e){return[SpiderGL.Math.abs(e[0]),SpiderGL.Math.abs(e[1])]},SpiderGL.Math.Vec2.acos=function(e){return[SpiderGL.Math.acos(e[0]),SpiderGL.Math.acos(e[1])]},SpiderGL.Math.Vec2.asin=function(e){return[SpiderGL.Math.asin(e[0]),SpiderGL.Math.asin(e[1])]},SpiderGL.Math.Vec2.atan=function(e){return[SpiderGL.Math.atan(e[0]),SpiderGL.Math.atan(e[1])]},SpiderGL.Math.Vec2.atan2=function(e,t){return[SpiderGL.Math.atan2(e[0],t[0]),SpiderGL.Math.atan2(e[1],t[1])]},SpiderGL.Math.Vec2.ceil=function(e){return[SpiderGL.Math.ceil(e[0]),SpiderGL.Math.ceil(e[1])]},SpiderGL.Math.Vec2.clamp=function(e,t,r){return[SpiderGL.Math.clamp(e[0],t[0],r[0]),SpiderGL.Math.clamp(e[1],t[1],r[1])]},SpiderGL.Math.Vec2.cos=function(e){return[SpiderGL.Math.cos(e[0]),SpiderGL.Math.cos(e[1])]},SpiderGL.Math.Vec2.degToRad=function(e){return[SpiderGL.Math.degToRad(e[0]),SpiderGL.Math.degToRad(e[1])]},SpiderGL.Math.Vec2.exp=function(e){return[SpiderGL.Math.exp(e[0]),SpiderGL.Math.exp(e[1])]},SpiderGL.Math.Vec2.floor=function(e){return[SpiderGL.Math.floor(e[0]),SpiderGL.Math.floor(e[1])]},SpiderGL.Math.Vec2.lerp=function(e,t,r){return[SpiderGL.Math.lerp(e[0],t[0],r),SpiderGL.Math.lerp(e[1],t[1],r)]},SpiderGL.Math.Vec2.ln=function(e){return[SpiderGL.Math.ln(e[0]),SpiderGL.Math.ln(e[1])]},SpiderGL.Math.Vec2.log=function(e){return[SpiderGL.Math.log(e[0]),SpiderGL.Math.log(e[1])]},SpiderGL.Math.Vec2.log2=function(e){return[SpiderGL.Math.log2(e[0]),SpiderGL.Math.log2(e[1])]},SpiderGL.Math.Vec2.log10=function(e){return[SpiderGL.Math.log10(e[0]),SpiderGL.Math.log10(e[1])]},SpiderGL.Math.Vec2.max=function(e,t){return[SpiderGL.Math.max(e[0],t[0]),SpiderGL.Math.max(e[1],t[1])]},SpiderGL.Math.Vec2.min=function(e,t){return[SpiderGL.Math.min(e[0],t[0]),SpiderGL.Math.min(e[1],t[1])]},SpiderGL.Math.Vec2.pow=function(e,t){return[SpiderGL.Math.pow(e[0],t[0]),SpiderGL.Math.pow(e[1],t[1])]},SpiderGL.Math.Vec2.radToDeg=function(e){return[SpiderGL.Math.radToDeg(e[0]),SpiderGL.Math.radToDeg(e[1])]},SpiderGL.Math.Vec2.random=function(){return[SpiderGL.Math.random(),SpiderGL.Math.random()]},SpiderGL.Math.Vec2.random01=function(){return[SpiderGL.Math.random01(),SpiderGL.Math.random01()]},SpiderGL.Math.Vec2.random11=function(){return[SpiderGL.Math.random11(),SpiderGL.Math.random11()]},SpiderGL.Math.Vec2.randomRange=function(e,t){return[SpiderGL.Math.randomRange(e[0],t[0]),SpiderGL.Math.randomRange(e[1],t[1])]},SpiderGL.Math.Vec2.round=function(e){return[SpiderGL.Math.round(e[0]),SpiderGL.Math.round(e[1])]},SpiderGL.Math.Vec2.sin=function(e){return[SpiderGL.Math.sin(e[0]),SpiderGL.Math.sin(e[1])]},SpiderGL.Math.Vec2.sqrt=function(e){return[SpiderGL.Math.sqrt(e[0]),SpiderGL.Math.sqrt(e[1])]},SpiderGL.Math.Vec2.tan=function(e){return[SpiderGL.Math.tan(e[0]),SpiderGL.Math.tan(e[1])]},SpiderGL.Math.Vec2.copy$=function(e,t){return e[0]=t[0],e[1]=t[1],e},SpiderGL.Math.Vec2.neg$=function(e){return e[0]=-e[0],e[1]=-e[1],e},SpiderGL.Math.Vec2.add$=function(e,t){return e[0]+=t[0],e[1]+=t[1],e},SpiderGL.Math.Vec2.adds$=function(e,t){return e[0]+=t,e[1]+=t,e},SpiderGL.Math.Vec2.sub$=function(e,t){return e[0]-=t[0],e[1]-=t[1],e},SpiderGL.Math.Vec2.subs$=function(e,t){return e[0]-=t,e[1]-=t,e},SpiderGL.Math.Vec2.ssub$=function(e,t){return t[0]=e-t[0],t[1]=e-t[1],t},SpiderGL.Math.Vec2.mul$=function(e,t){return e[0]*=t[0],e[1]*=t[1],e},SpiderGL.Math.Vec2.muls$=function(e,t){return e[0]*=t,e[1]*=t,e},SpiderGL.Math.Vec2.div$=function(e,t){return e[0]/=t[0],e[1]/=t[1],e},SpiderGL.Math.Vec2.divs$=function(e,t){return e[0]/=t,e[1]/=t,e},SpiderGL.Math.Vec2.sdiv$=function(e,t){return e[0]=t/e[0],e[1]=t/e[1],e},SpiderGL.Math.Vec2.perp$=function(e){var t=e[0];return e[0]=e[1],e[1]=-t,e},SpiderGL.Math.Vec2.normalize$=function(e){var t=1/SpiderGL.Math.Vec2.length(e);return SpiderGL.Math.Vec2.muls$(e,t)},SpiderGL.Math.Vec3={},SpiderGL.Math.Vec3.dup=function(e){return e.slice(0,3)},SpiderGL.Math.Vec3.scalar=function(e){return[e,e,e]},SpiderGL.Math.Vec3.zero=function(){return[0,0,0]},SpiderGL.Math.Vec3.one=function(){return[1,1,1]},SpiderGL.Math.Vec3.maxNumber=function(){return[SpiderGL.Math.MAX_NUMBER,SpiderGL.Math.MAX_NUMBER,SpiderGL.Math.MAX_NUMBER]},SpiderGL.Math.Vec3.minNumber=function(){return[SpiderGL.Math.MIN_NUMBER,SpiderGL.Math.MIN_NUMBER,SpiderGL.Math.MIN_NUMBER]},SpiderGL.Math.Vec3.to2=function(e){return[e[0],e[1]]},SpiderGL.Math.Vec3.to4=function(e,t){return[e[0],e[1],e[2],void 0!=t?t:1]},SpiderGL.Math.Vec3.neg=function(e){return[-e[0],-e[1],-e[2]]},SpiderGL.Math.Vec3.add=function(e,t){return[e[0]+t[0],e[1]+t[1],e[2]+t[2]]},SpiderGL.Math.Vec3.adds=function(e,t){return[e[0]+t,e[1]+t,e[2]+t]},SpiderGL.Math.Vec3.sub=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},SpiderGL.Math.Vec3.subs=function(e,t){return[e[0]-t,e[1]-t,e[2]-t]},SpiderGL.Math.Vec3.ssub=function(e,t){return[e-t[0],e-t[1],e-t[2]]},SpiderGL.Math.Vec3.mul=function(e,t){return[e[0]*t[0],e[1]*t[1],e[2]*t[2]]},SpiderGL.Math.Vec3.muls=function(e,t){return[e[0]*t,e[1]*t,e[2]*t]},SpiderGL.Math.Vec3.div=function(e,t){return[e[0]/t[0],e[1]/t[1],e[2]/t[2]]},SpiderGL.Math.Vec3.divs=function(e,t){return[e[0]/t,e[1]/t,e[2]/t]},SpiderGL.Math.Vec3.sdiv=function(e,t){return[e/t[0],e/t[1],e/t[2]]},SpiderGL.Math.Vec3.rcp=function(e){return[1/e[0],1/e[1],1/e[2]]},SpiderGL.Math.Vec3.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},SpiderGL.Math.Vec3.cross=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},SpiderGL.Math.Vec3.sqLength=function(e){return SpiderGL.Math.Vec3.dot(e,e)},SpiderGL.Math.Vec3.length=function(e){return SpiderGL.Math.sqrt(SpiderGL.Math.Vec3.sqLength(e))},SpiderGL.Math.Vec3.normalize=function(e){var t=1/SpiderGL.Math.Vec3.length(e);return SpiderGL.Math.Vec3.muls(e,t)},SpiderGL.Math.Vec3.abs=function(e){return[SpiderGL.Math.abs(e[0]),SpiderGL.Math.abs(e[1]),SpiderGL.Math.abs(e[2])]},SpiderGL.Math.Vec3.acos=function(e){return[SpiderGL.Math.acos(e[0]),SpiderGL.Math.acos(e[1]),SpiderGL.Math.acos(e[2])]},SpiderGL.Math.Vec3.asin=function(e){return[SpiderGL.Math.asin(e[0]),SpiderGL.Math.asin(e[1]),SpiderGL.Math.asin(e[2])]},SpiderGL.Math.Vec3.atan=function(e){return[SpiderGL.Math.atan(e[0]),SpiderGL.Math.atan(e[1]),SpiderGL.Math.atan(e[2])]},SpiderGL.Math.Vec3.atan2=function(e,t){return[SpiderGL.Math.atan2(e[0],t[0]),SpiderGL.Math.atan2(e[1],t[1]),SpiderGL.Math.atan2(e[2],t[2])]},SpiderGL.Math.Vec3.ceil=function(e){return[SpiderGL.Math.ceil(e[0]),SpiderGL.Math.ceil(e[1]),SpiderGL.Math.ceil(e[2])]},SpiderGL.Math.Vec3.clamp=function(e,t,r){return[SpiderGL.Math.clamp(e[0],t[0],r[0]),SpiderGL.Math.clamp(e[1],t[1],r[1]),SpiderGL.Math.clamp(e[2],t[2],r[2])];
},SpiderGL.Math.Vec3.cos=function(e){return[SpiderGL.Math.cos(e[0]),SpiderGL.Math.cos(e[1]),SpiderGL.Math.cos(e[2])]},SpiderGL.Math.Vec3.degToRad=function(e){return[SpiderGL.Math.degToRad(e[0]),SpiderGL.Math.degToRad(e[1]),SpiderGL.Math.degToRad(e[2])]},SpiderGL.Math.Vec3.exp=function(e){return[SpiderGL.Math.exp(e[0]),SpiderGL.Math.exp(e[1]),SpiderGL.Math.exp(e[2])]},SpiderGL.Math.Vec3.floor=function(e){return[SpiderGL.Math.floor(e[0]),SpiderGL.Math.floor(e[1]),SpiderGL.Math.floor(e[2])]},SpiderGL.Math.Vec3.lerp=function(e,t,r){return[SpiderGL.Math.lerp(e[0],t[0],r),SpiderGL.Math.lerp(e[1],t[1],r),SpiderGL.Math.lerp(e[2],t[2],r)]},SpiderGL.Math.Vec3.ln=function(e){return[SpiderGL.Math.ln(e[0]),SpiderGL.Math.ln(e[1]),SpiderGL.Math.ln(e[2])]},SpiderGL.Math.Vec3.log=function(e){return[SpiderGL.Math.log(e[0]),SpiderGL.Math.log(e[1]),SpiderGL.Math.log(e[2])]},SpiderGL.Math.Vec3.log2=function(e){return[SpiderGL.Math.log2(e[0]),SpiderGL.Math.log2(e[1]),SpiderGL.Math.log2(e[2])]},SpiderGL.Math.Vec3.log10=function(e){return[SpiderGL.Math.log10(e[0]),SpiderGL.Math.log10(e[1]),SpiderGL.Math.log10(e[2])]},SpiderGL.Math.Vec3.max=function(e,t){return[SpiderGL.Math.max(e[0],t[0]),SpiderGL.Math.max(e[1],t[1]),SpiderGL.Math.max(e[2],t[2])]},SpiderGL.Math.Vec3.min=function(e,t){return[SpiderGL.Math.min(e[0],t[0]),SpiderGL.Math.min(e[1],t[1]),SpiderGL.Math.min(e[2],t[2])]},SpiderGL.Math.Vec3.pow=function(e,t){return[SpiderGL.Math.pow(e[0],t[0]),SpiderGL.Math.pow(e[1],t[1]),SpiderGL.Math.pow(e[2],t[2])]},SpiderGL.Math.Vec3.radToDeg=function(e){return[SpiderGL.Math.radToDeg(e[0]),SpiderGL.Math.radToDeg(e[1]),SpiderGL.Math.radToDeg(e[2])]},SpiderGL.Math.Vec3.random=function(){return[SpiderGL.Math.random(),SpiderGL.Math.random(),SpiderGL.Math.random()]},SpiderGL.Math.Vec3.random01=function(){return[SpiderGL.Math.random01(),SpiderGL.Math.random01(),SpiderGL.Math.random01()]},SpiderGL.Math.Vec3.random11=function(){return[SpiderGL.Math.random11(),SpiderGL.Math.random11(),SpiderGL.Math.random11()]},SpiderGL.Math.Vec3.randomRange=function(e,t){return[SpiderGL.Math.randomRange(e[0],t[0]),SpiderGL.Math.randomRange(e[1],t[1]),SpiderGL.Math.randomRange(e[2],t[2])]},SpiderGL.Math.Vec3.round=function(e){return[SpiderGL.Math.round(e[0]),SpiderGL.Math.round(e[1]),SpiderGL.Math.round(e[2])]},SpiderGL.Math.Vec3.sin=function(e){return[SpiderGL.Math.sin(e[0]),SpiderGL.Math.sin(e[1]),SpiderGL.Math.sin(e[2])]},SpiderGL.Math.Vec3.sqrt=function(e){return[SpiderGL.Math.sqrt(e[0]),SpiderGL.Math.sqrt(e[1]),SpiderGL.Math.sqrt(e[2])]},SpiderGL.Math.Vec3.tan=function(e){return[SpiderGL.Math.tan(e[0]),SpiderGL.Math.tan(e[1]),SpiderGL.Math.tan(e[2])]},SpiderGL.Math.Vec3.copy$=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},SpiderGL.Math.Vec3.neg$=function(e){return e[0]=-e[0],e[1]=-e[1],e[2]=-e[2],e},SpiderGL.Math.Vec3.add$=function(e,t){return e[0]+=t[0],e[1]+=t[1],e[2]+=t[2],e},SpiderGL.Math.Vec3.adds$=function(e,t){return e[0]+=t,e[1]+=t,e[2]+=t,e},SpiderGL.Math.Vec3.sub$=function(e,t){return e[0]-=t[0],e[1]-=t[1],e[2]-=t[2],e},SpiderGL.Math.Vec3.subs$=function(e,t){return e[0]-=t,e[1]-=t,e[2]-=t,e},SpiderGL.Math.Vec3.ssub$=function(e,t){return t[0]=e-t[0],t[1]=e-t[1],t[2]=e-t[2],t},SpiderGL.Math.Vec3.mul$=function(e,t){return e[0]*=t[0],e[1]*=t[1],e[2]*=t[2],e},SpiderGL.Math.Vec3.muls$=function(e,t){return e[0]*=t,e[1]*=t,e[2]*=t,e},SpiderGL.Math.Vec3.div$=function(e,t){return e[0]/=t[0],e[1]/=t[1],e[2]/=t[2],e},SpiderGL.Math.Vec3.divs$=function(e,t){return e[0]/=t,e[1]/=t,e[2]/=t,e},SpiderGL.Math.Vec3.sdiv$=function(e,t){return e[0]=t/e[0],e[1]=t/e[1],e[2]=t/e[2],e},SpiderGL.Math.Vec3.normalize$=function(e){var t=1/SpiderGL.Math.Vec3.length(e);return SpiderGL.Math.Vec3.muls$(e,t)},SpiderGL.Math.Vec4={},SpiderGL.Math.Vec4.dup=function(e){return e.slice(0,4)},SpiderGL.Math.Vec4.scalar=function(e){return[e,e,e,e]},SpiderGL.Math.Vec4.zero=function(){return[0,0,0,0]},SpiderGL.Math.Vec4.one=function(){return[1,1,1,1]},SpiderGL.Math.Vec4.maxNumber=function(){return[SpiderGL.Math.MAX_NUMBER,SpiderGL.Math.MAX_NUMBER,SpiderGL.Math.MAX_NUMBER,SpiderGL.Math.MAX_NUMBER]},SpiderGL.Math.Vec4.minNumber=function(){return[SpiderGL.Math.MIN_NUMBER,SpiderGL.Math.MIN_NUMBER,SpiderGL.Math.MIN_NUMBER,SpiderGL.Math.MIN_NUMBER]},SpiderGL.Math.Vec4.to2=function(e){return[e[0],e[1]]},SpiderGL.Math.Vec4.to3=function(e){return[e[0],e[1],e[2]]},SpiderGL.Math.Vec4.neg=function(e){return[-e[0],-e[1],-e[2],-e[3]]},SpiderGL.Math.Vec4.add=function(e,t){return[e[0]+t[0],e[1]+t[1],e[2]+t[2],e[3]+t[3]]},SpiderGL.Math.Vec4.adds=function(e,t){return[e[0]+t,e[1]+t,e[2]+t,e[3]+t]},SpiderGL.Math.Vec4.sub=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2],e[3]-t[3]]},SpiderGL.Math.Vec4.subs=function(e,t){return[e[0]-t,e[1]-t,e[2]-t,e[3]-t]},SpiderGL.Math.Vec4.ssub=function(e,t){return[e-t[0],e-t[1],e-t[2],e-t[3]]},SpiderGL.Math.Vec4.mul=function(e,t){return[e[0]*t[0],e[1]*t[1],e[2]*t[2],e[3]*t[3]]},SpiderGL.Math.Vec4.muls=function(e,t){return[e[0]*t,e[1]*t,e[2]*t,e[3]*t]},SpiderGL.Math.Vec4.div=function(e,t){return[e[0]/t[0],e[1]/t[1],e[2]/t[2],e[3]/t[3]]},SpiderGL.Math.Vec4.divs=function(e,t){return[e[0]/t,e[1]/t,e[2]/t,e[3]/t]},SpiderGL.Math.Vec4.sdiv=function(e,t){return[e/t[0],e/t[1],e/t[2],e/t[3]]},SpiderGL.Math.Vec4.rcp=function(e){return[1/e[0],1/e[1],1/e[2],1/e[3]]},SpiderGL.Math.Vec4.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},SpiderGL.Math.Vec4.cross=function(e,t,r){var i=t[0]*r[1]-t[1]*r[0],n=t[0]*r[2]-t[2]*r[0],a=t[0]*r[3]-t[3]*r[0],s=t[1]*r[2]-t[2]*r[1],u=t[1]*r[3]-t[3]*r[1],o=t[2]*r[3]-t[3]*r[2];return[e[1]*o-e[2]*u+e[3]*s,e[0]*o+e[2]*a-e[3]*n,e[0]*u-e[1]*a+e[3]*i,e[0]*s+e[1]*n-e[2]*i]},SpiderGL.Math.Vec4.sqLength=function(e){return SpiderGL.Math.Vec4.dot(e,e)},SpiderGL.Math.Vec4.length=function(e){return SpiderGL.Math.sqrt(SpiderGL.Math.Vec4.sqLength(e))},SpiderGL.Math.Vec4.normalize=function(e){var t=1/SpiderGL.Math.Vec4.length(e);return SpiderGL.Math.Vec4.muls(e,t)},SpiderGL.Math.Vec4.project=function(e){var t=1/e[3];return[e[0]*t,e[1]*t,e[2]*t,1]},SpiderGL.Math.Vec4.abs=function(e){return[SpiderGL.Math.abs(e[0]),SpiderGL.Math.abs(e[1]),SpiderGL.Math.abs(e[2]),SpiderGL.Math.abs(e[3])]},SpiderGL.Math.Vec4.acos=function(e){return[SpiderGL.Math.acos(e[0]),SpiderGL.Math.acos(e[1]),SpiderGL.Math.acos(e[2]),SpiderGL.Math.acos(e[3])]},SpiderGL.Math.Vec4.asin=function(e){return[SpiderGL.Math.asin(e[0]),SpiderGL.Math.asin(e[1]),SpiderGL.Math.asin(e[2]),SpiderGL.Math.asin(e[3])]},SpiderGL.Math.Vec4.atan=function(e){return[SpiderGL.Math.atan(e[0]),SpiderGL.Math.atan(e[1]),SpiderGL.Math.atan(e[2]),SpiderGL.Math.atan(e[3])]},SpiderGL.Math.Vec4.atan2=function(e,t){return[SpiderGL.Math.atan2(e[0],t[0]),SpiderGL.Math.atan2(e[1],t[1]),SpiderGL.Math.atan2(e[2],t[2]),SpiderGL.Math.atan2(e[3],t[3])]},SpiderGL.Math.Vec4.ceil=function(e){return[SpiderGL.Math.ceil(e[0]),SpiderGL.Math.ceil(e[1]),SpiderGL.Math.ceil(e[2]),SpiderGL.Math.ceil(e[3])]},SpiderGL.Math.Vec4.clamp=function(e,t,r){return[SpiderGL.Math.clamp(e[0],t[0],r[0]),SpiderGL.Math.clamp(e[1],t[1],r[1]),SpiderGL.Math.clamp(e[2],t[2],r[2]),SpiderGL.Math.clamp(e[3],t[3],r[3])]},SpiderGL.Math.Vec4.cos=function(e){return[SpiderGL.Math.cos(e[0]),SpiderGL.Math.cos(e[1]),SpiderGL.Math.cos(e[2]),SpiderGL.Math.cos(e[3])]},SpiderGL.Math.Vec4.degToRad=function(e){return[SpiderGL.Math.degToRad(e[0]),SpiderGL.Math.degToRad(e[1]),SpiderGL.Math.degToRad(e[2]),SpiderGL.Math.degToRad(e[3])]},SpiderGL.Math.Vec4.exp=function(e){return[SpiderGL.Math.exp(e[0]),SpiderGL.Math.exp(e[1]),SpiderGL.Math.exp(e[2]),SpiderGL.Math.exp(e[3])]},SpiderGL.Math.Vec4.floor=function(e){return[SpiderGL.Math.floor(e[0]),SpiderGL.Math.floor(e[1]),SpiderGL.Math.floor(e[2]),SpiderGL.Math.floor(e[3])]},SpiderGL.Math.Vec4.lerp=function(e,t,r){return[SpiderGL.Math.lerp(e[0],t[0],r),SpiderGL.Math.lerp(e[1],t[1],r),SpiderGL.Math.lerp(e[2],t[2],r),SpiderGL.Math.lerp(e[3],t[3],r)]},SpiderGL.Math.Vec4.ln=function(e){return[SpiderGL.Math.ln(e[0]),SpiderGL.Math.ln(e[1]),SpiderGL.Math.ln(e[2]),SpiderGL.Math.ln(e[3])]},SpiderGL.Math.Vec4.log=function(e){return[SpiderGL.Math.log(e[0]),SpiderGL.Math.log(e[1]),SpiderGL.Math.log(e[2]),SpiderGL.Math.log(e[3])]},SpiderGL.Math.Vec4.log2=function(e){return[SpiderGL.Math.log2(e[0]),SpiderGL.Math.log2(e[1]),SpiderGL.Math.log2(e[2]),SpiderGL.Math.log2(e[3])]},SpiderGL.Math.Vec4.log10=function(e){return[SpiderGL.Math.log10(e[0]),SpiderGL.Math.log10(e[1]),SpiderGL.Math.log10(e[2]),SpiderGL.Math.log10(e[3])]},SpiderGL.Math.Vec4.max=function(e,t){return[SpiderGL.Math.max(e[0],t[0]),SpiderGL.Math.max(e[1],t[1]),SpiderGL.Math.max(e[2],t[2]),SpiderGL.Math.max(e[3],t[3])]},SpiderGL.Math.Vec4.min=function(e,t){return[SpiderGL.Math.min(e[0],t[0]),SpiderGL.Math.min(e[1],t[1]),SpiderGL.Math.min(e[2],t[2]),SpiderGL.Math.min(e[3],t[3])]},SpiderGL.Math.Vec4.pow=function(e,t){return[SpiderGL.Math.pow(e[0],t[0]),SpiderGL.Math.pow(e[1],t[1]),SpiderGL.Math.pow(e[2],t[2]),SpiderGL.Math.pow(e[3],t[3])]},SpiderGL.Math.Vec4.radToDeg=function(e){return[SpiderGL.Math.radToDeg(e[0]),SpiderGL.Math.radToDeg(e[1]),SpiderGL.Math.radToDeg(e[2]),SpiderGL.Math.radToDeg(e[3])]},SpiderGL.Math.Vec4.random=function(){return[SpiderGL.Math.random(),SpiderGL.Math.random(),SpiderGL.Math.random(),SpiderGL.Math.random()]},SpiderGL.Math.Vec4.random01=function(){return[SpiderGL.Math.random01(),SpiderGL.Math.random01(),SpiderGL.Math.random01(),SpiderGL.Math.random01()]},SpiderGL.Math.Vec4.random11=function(){return[SpiderGL.Math.random11(),SpiderGL.Math.random11(),SpiderGL.Math.random11(),SpiderGL.Math.random11()]},SpiderGL.Math.Vec4.randomRange=function(e,t){return[SpiderGL.Math.randomRange(e[0],t[0]),SpiderGL.Math.randomRange(e[1],t[1]),SpiderGL.Math.randomRange(e[2],t[2]),SpiderGL.Math.randomRange(e[3],t[3])]},SpiderGL.Math.Vec4.round=function(e){return[SpiderGL.Math.round(e[0]),SpiderGL.Math.round(e[1]),SpiderGL.Math.round(e[2]),SpiderGL.Math.round(e[3])]},SpiderGL.Math.Vec4.sin=function(e){return[SpiderGL.Math.sin(e[0]),SpiderGL.Math.sin(e[1]),SpiderGL.Math.sin(e[2]),SpiderGL.Math.sin(e[3])]},SpiderGL.Math.Vec4.sqrt=function(e){return[SpiderGL.Math.sqrt(e[0]),SpiderGL.Math.sqrt(e[1]),SpiderGL.Math.sqrt(e[2]),SpiderGL.Math.sqrt(e[3])]},SpiderGL.Math.Vec4.tan=function(e){return[SpiderGL.Math.tan(e[0]),SpiderGL.Math.tan(e[1]),SpiderGL.Math.tan(e[2]),SpiderGL.Math.tan(e[3])]},SpiderGL.Math.Vec4.copy$=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},SpiderGL.Math.Vec4.neg$=function(e){return e[0]=-e[0],e[1]=-e[1],e[2]=-e[2],e[3]=-e[3],e},SpiderGL.Math.Vec4.add$=function(e,t){return e[0]+=t[0],e[1]+=t[1],e[2]+=t[2],e[3]+=t[3],e},SpiderGL.Math.Vec4.adds$=function(e,t){return e[0]+=t,e[1]+=t,e[2]+=t,e[3]+=t,e},SpiderGL.Math.Vec4.sub$=function(e,t){return e[0]-=t[0],e[1]-=t[1],e[2]-=t[2],e[3]-=t[3],e},SpiderGL.Math.Vec4.subs$=function(e,t){return e[0]-=t,e[1]-=t,e[2]-=t,e[3]-=t,e},SpiderGL.Math.Vec4.ssub$=function(e,t){return t[0]=e-t[0],t[1]=e-t[1],t[2]=e-t[2],t[3]=e-t[3],t},SpiderGL.Math.Vec4.mul$=function(e,t){return e[0]*=t[0],e[1]*=t[1],e[2]*=t[2],e[3]*=t[3],e},SpiderGL.Math.Vec4.muls$=function(e,t){return e[0]*=t,e[1]*=t,e[2]*=t,e[3]*=t,e},SpiderGL.Math.Vec4.div$=function(e,t){return e[0]/=t[0],e[1]/=t[1],e[2]/=t[2],e[3]/=t[3],e},SpiderGL.Math.Vec4.divs$=function(e,t){return e[0]/=t,e[1]/=t,e[2]/=t,e[3]/=t,e},SpiderGL.Math.Vec4.sdiv$=function(e,t){return e[0]=t/e[0],e[1]=t/e[1],e[2]=t/e[2],e[3]=t/e[3],e},SpiderGL.Math.Vec4.normalize$=function(e){var t=1/SpiderGL.Math.Vec4.length(e);return SpiderGL.Math.Vec4.muls$(e,t)},SpiderGL.Math.Mat3={},SpiderGL.Math.Mat3.dup=function(e){return e.slice(0,9)},SpiderGL.Math.Mat3.scalar=function(e){return[e,e,e,e,e,e,e,e,e]},SpiderGL.Math.Mat3.zero=function(){return[0,0,0,0,0,0,0,0,0]},SpiderGL.Math.Mat3.one=function(){return[1,1,1,1,1,1,1,1,1]},SpiderGL.Math.Mat3.diag=function(e){return[e[0],0,0,0,e[0],0,0,0,e[0]]},SpiderGL.Math.Mat3.identity=function(){return[1,0,0,0,1,0,0,0,1]},SpiderGL.Math.Mat3.to44=function(e){return[e[0],e[1],e[2],0,e[3],e[4],e[5],0,e[6],e[7],e[8],0,0,0,0,1]},SpiderGL.Math.Mat3.mul2=function(e,t,r){return r=void 0==r?0:r,[e[0]*t[0]+e[3]*t[1]+e[6]*r,e[1]*t[0]+e[4]*t[1]+e[7]*r]},SpiderGL.Math.Mat3.mul3=function(e,t){return[e[0]*t[0]+e[3]*t[1]+e[6]*t[2],e[1]*t[0]+e[4]*t[1]+e[7]*t[2],e[2]*t[0]+e[5]*t[1]+e[8]*t[2]]},SpiderGL.Math.Mat3.transpose=function(e){return[e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]]},SpiderGL.Math.Mat4={},SpiderGL.Math.Mat4.dup=function(e){return e.slice(0,16)},SpiderGL.Math.Mat4.scalar=function(e){return[e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e]},SpiderGL.Math.Mat4.zero=function(){return[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},SpiderGL.Math.Mat4.one=function(){return[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},SpiderGL.Math.Mat4.diag=function(e){return[e[0],0,0,0,0,e[0],0,0,0,0,e[0],0,0,0,0,e[0]]},SpiderGL.Math.Mat4.identity=function(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},SpiderGL.Math.Mat4.to33=function(e){return[e[0],e[1],e[2],e[4],e[5],e[6],e[8],e[9],e[10]]},SpiderGL.Math.Mat4.elem=function(e,t,r){return e[t+4*r]},SpiderGL.Math.Mat4.elem$=function(e,t,r,i){e[t+4*r]=i},SpiderGL.Math.Mat4.row=function(e,t){return[e[t+0],e[t+4],e[t+8],e[t+12]]},SpiderGL.Math.Mat4.row$=function(e,t,r){e[t+0]=r[0],e[t+4]=r[1],e[t+8]=r[2],e[t+12]=r[3]},SpiderGL.Math.Mat4.col=function(e,t){var r=4*t;return[e[r+0],e[r+1],e[r+2],e[r+3]]},SpiderGL.Math.Mat4.col$=function(e,t,r){var i=4*t;e[i+0]=r[0],e[i+1]=r[1],e[i+2]=r[2],e[i+3]=r[3]},SpiderGL.Math.Mat4.isIdentity=function(e){return 1===e[0]&&0===e[1]&&0===e[2]&&0===e[3]&&0===e[4]&&1===e[5]&&0===e[6]&&0===e[7]&&0===e[8]&&0===e[9]&&1===e[10]&&0===e[11]&&0===e[12]&&0===e[13]&&0===e[14]&&1===e[15]},SpiderGL.Math.Mat4.neg=function(e){return[-e[0],-e[1],-e[2],-e[3],-e[4],-e[5],-e[6],-e[7],-e[8],-e[9],-e[10],-e[11],-e[12],-e[13],-e[14],-e[15]]},SpiderGL.Math.Mat4.add=function(e,t){return[e[0]+t[0],e[1]+t[1],e[2]+t[2],e[3]+t[3],e[4]+t[4],e[5]+t[5],e[6]+t[6],e[7]+t[7],e[8]+t[8],e[9]+t[9],e[10]+t[10],e[11]+t[11],e[12]+t[12],e[13]+t[13],e[14]+t[14],e[15]+t[15]]},SpiderGL.Math.Mat4.sub=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2],e[3]-t[3],e[4]-t[4],e[5]-t[5],e[6]-t[6],e[7]-t[7],e[8]-t[8],e[9]-t[9],e[10]-t[10],e[11]-t[11],e[12]-t[12],e[13]-t[13],e[14]-t[14],e[15]-t[15]]},SpiderGL.Math.Mat4.mul=function(e,t){var r=e[0],i=e[1],n=e[2],a=e[3],s=e[4],u=e[5],o=e[6],d=e[7],p=e[8],c=e[9],_=e[10],f=e[11],h=e[12],l=e[13],L=e[14],S=e[15],g=t[0],G=t[1],m=t[2],b=t[3],T=t[4],M=t[5],E=t[6],v=t[7],x=t[8],y=t[9],A=t[10],R=t[11],I=t[12],P=t[13],O=t[14],U=t[15];return[r*g+s*G+p*m+h*b,i*g+u*G+c*m+l*b,n*g+o*G+_*m+L*b,a*g+d*G+f*m+S*b,r*T+s*M+p*E+h*v,i*T+u*M+c*E+l*v,n*T+o*M+_*E+L*v,a*T+d*M+f*E+S*v,r*x+s*y+p*A+h*R,i*x+u*y+c*A+l*R,n*x+o*y+_*A+L*R,a*x+d*y+f*A+S*R,r*I+s*P+p*O+h*U,i*I+u*P+c*O+l*U,n*I+o*P+_*O+L*U,a*I+d*P+f*O+S*U]},SpiderGL.Math.Mat4.muls=function(e,t){return[e[0]*t,e[1]*t,e[2]*t,e[3]*t,e[4]*t,e[5]*t,e[6]*t,e[7]*t,e[8]*t,e[9]*t,e[10]*t,e[11]*t,e[12]*t,e[13]*t,e[14]*t,e[15]*t]},SpiderGL.Math.Mat4.mul3=function(e,t,r){return r=void 0==r?1:r,[e[0]*t[0]+e[4]*t[1]+e[8]*t[2]+e[12]*r,e[1]*t[0]+e[5]*t[1]+e[9]*t[2]+e[13]*r,e[2]*t[0]+e[6]*t[1]+e[10]*t[2]+e[14]*r]},SpiderGL.Math.Mat4.mul4=function(e,t){return[e[0]*t[0]+e[4]*t[1]+e[8]*t[2]+e[12]*t[3],e[1]*t[0]+e[5]*t[1]+e[9]*t[2]+e[13]*t[3],e[2]*t[0]+e[6]*t[1]+e[10]*t[2]+e[14]*t[3],e[3]*t[0]+e[7]*t[1]+e[11]*t[2]+e[15]*t[3]]},SpiderGL.Math.Mat4.rcp=function(e){return[1/e[0],1/e[1],1/e[2],1/e[3],1/e[4],1/e[5],1/e[6],1/e[7],1/e[8],1/e[9],1/e[10],1/e[11],1/e[12],1/e[13],1/e[14],1/e[15]]},SpiderGL.Math.Mat4.compMul=function(e,t){return[e[0]*t[0],e[1]*t[1],e[2]*t[2],e[3]*t[3],e[4]*t[4],e[5]*t[5],e[6]*t[6],e[7]*t[7],e[8]*t[8],e[9]*t[9],e[10]*t[10],e[11]*t[11],e[12]*t[12],e[13]*t[13],e[14]*t[14],e[15]*t[15]]},SpiderGL.Math.Mat4.compDiv=function(e,t){return[e[0]/t[0],e[1]/t[1],e[2]/t[2],e[3]/t[3],e[4]/t[4],e[5]/t[5],e[6]/t[6],e[7]/t[7],e[8]/t[8],e[9]/t[9],e[10]/t[10],e[11]/t[11],e[12]/t[12],e[13]/t[13],e[14]/t[14],e[15]/t[15]]},SpiderGL.Math.Mat4.transpose=function(e){return[e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]]},SpiderGL.Math.Mat4.determinant=function(e){var t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],s=e[5],u=e[6],o=e[7],d=e[8],p=e[9],c=e[10],_=e[11],f=e[12],h=e[13],l=e[14],L=e[15];return f*p*u*n-d*h*u*n-f*s*c*n+a*h*c*n+d*s*l*n-a*p*l*n-f*p*i*o+d*h*i*o+f*r*c*o-t*h*c*o-d*r*l*o+t*p*l*o+f*s*i*_-a*h*i*_-f*r*u*_+t*h*u*_+a*r*l*_-t*s*l*_-d*s*i*L+a*p*i*L+d*r*u*L-t*p*u*L-a*r*c*L+t*s*c*L},SpiderGL.Math.Mat4.inverse=function(e){var t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],s=e[5],u=e[6],o=e[7],d=e[8],p=e[9],c=e[10],_=e[11],f=e[12],h=e[13],l=e[14],L=e[15],S=1/(f*p*u*n-d*h*u*n-f*s*c*n+a*h*c*n+d*s*l*n-a*p*l*n-f*p*i*o+d*h*i*o+f*r*c*o-t*h*c*o-d*r*l*o+t*p*l*o+f*s*i*_-a*h*i*_-f*r*u*_+t*h*u*_+a*r*l*_-t*s*l*_-d*s*i*L+a*p*i*L+d*r*u*L-t*p*u*L-a*r*c*L+t*s*c*L);return[S*(p*l*o-h*c*o+h*u*_-s*l*_-p*u*L+s*c*L),S*(h*c*n-p*l*n-h*i*_+r*l*_+p*i*L-r*c*L),S*(s*l*n-h*u*n+h*i*o-r*l*o-s*i*L+r*u*L),S*(p*u*n-s*c*n-p*i*o+r*c*o+s*i*_-r*u*_),S*(f*c*o-d*l*o-f*u*_+a*l*_+d*u*L-a*c*L),S*(d*l*n-f*c*n+f*i*_-t*l*_-d*i*L+t*c*L),S*(f*u*n-a*l*n-f*i*o+t*l*o+a*i*L-t*u*L),S*(a*c*n-d*u*n+d*i*o-t*c*o-a*i*_+t*u*_),S*(d*h*o-f*p*o+f*s*_-a*h*_-d*s*L+a*p*L),S*(f*p*n-d*h*n-f*r*_+t*h*_+d*r*L-t*p*L),S*(a*h*n-f*s*n+f*r*o-t*h*o-a*r*L+t*s*L),S*(d*s*n-a*p*n-d*r*o+t*p*o+a*r*_-t*s*_),S*(f*p*u-d*h*u-f*s*c+a*h*c+d*s*l-a*p*l),S*(d*h*i-f*p*i+f*r*c-t*h*c-d*r*l+t*p*l),S*(f*s*i-a*h*i-f*r*u+t*h*u+a*r*l-t*s*l),S*(a*p*i-d*s*i+d*r*u-t*p*u-a*r*c+t*s*c)]},SpiderGL.Math.Mat4.inverseTranspose33=function(e){var t=e[0],r=e[1],i=e[2],n=e[4],a=e[5],s=e[6],u=e[8],o=e[9],d=e[10],p=1/(t*(d*a-s*o)-r*(d*n-s*u)+i*(o*n-a*u));return[p*(d*a-s*o),p*(s*u-d*n),p*(o*n-a*u),p*(i*o-d*r),p*(d*t-i*u),p*(r*u-o*t),p*(s*r-i*a),p*(i*n-s*t),p*(a*t-r*n)]},SpiderGL.Math.Mat4.trace=function(e){return e[0]+e[5]+e[10]+e[15]},SpiderGL.Math.Mat4.translation=function(e){return[1,0,0,0,0,1,0,0,0,0,1,0,e[0],e[1],e[2],1]},SpiderGL.Math.Mat4.rotationAngleAxis=function(e,t){var r,i,n,a,s,u,o,d,p,c=SpiderGL.Math.Vec3.normalize(t),_=SpiderGL.Math.sin(e),f=SpiderGL.Math.cos(e),h=1-f,l=c[0],L=c[1],S=c[2];return r=l*l,i=L*L,n=S*S,a=l*L,s=L*S,u=S*l,o=l*_,d=L*_,p=S*_,[h*r+f,h*a+p,h*u-d,0,h*a-p,h*i+f,h*s+o,0,h*u+d,h*s-o,h*n+f,0,0,0,0,1]},SpiderGL.Math.Mat4.scaling=function(e){return[e[0],0,0,0,0,e[1],0,0,0,0,e[2],0,0,0,0,1]},SpiderGL.Math.Mat4.lookAt=function(e,t,r){var i=SpiderGL.Math.Vec3.normalize(SpiderGL.Math.Vec3.sub(t,e)),n=SpiderGL.Math.Vec3.normalize(r),a=SpiderGL.Math.Vec3.normalize(SpiderGL.Math.Vec3.cross(i,n));n=SpiderGL.Math.Vec3.cross(a,i);var s=[a[0],n[0],-i[0],0,a[1],n[1],-i[1],0,a[2],n[2],-i[2],0,0,0,0,1];return SpiderGL.Math.Mat4.translate$(s,SpiderGL.Math.Vec3.neg(e))},SpiderGL.Math.Mat4.ortho=function(e,t){var r=SpiderGL.Math.Vec3.add(t,e),i=SpiderGL.Math.Vec3.sub(t,e);return[2/i[0],0,0,0,0,2/i[1],0,0,0,0,-2/i[2],0,-r[0]/i[0],-r[1]/i[1],-r[2]/i[2],1]},SpiderGL.Math.Mat4.frustum=function(e,t){var r=SpiderGL.Math.Vec3.add(t,e),i=SpiderGL.Math.Vec3.sub(t,e),n=2*e[2];return[n/i[0],0,0,0,0,n/i[1],0,0,r[0]/i[0],r[1]/i[1],-r[2]/i[2],-1,0,0,-n*t[2]/i[2],0]},SpiderGL.Math.Mat4.perspective=function(e,t,r,i){var n=r*SpiderGL.Math.tan(e/2),a=n*t;return SpiderGL.Math.Mat4.frustum([-a,-n,r],[a,n,i])},SpiderGL.Math.Mat4.copy$=function(e,t){for(var r=0;16>r;++r)e[r]=t[r];return e},SpiderGL.Math.Mat4.identity$=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},SpiderGL.Math.Mat4.neg$=function(e){for(var t=0;16>t;++t)e[t]=-e[t];return e},SpiderGL.Math.Mat4.add$=function(e,t){for(var r=0;16>r;++r)e[r]+=t[r];return e},SpiderGL.Math.Mat4.sub$=function(e,t){for(var r=0;16>r;++r)e[r]-=t[r];return e},SpiderGL.Math.Mat4.mul$=function(e,t){var r=e[0],i=e[1],n=e[2],a=e[3],s=e[4],u=e[5],o=e[6],d=e[7],p=e[8],c=e[9],_=e[10],f=e[11],h=e[12],l=e[13],L=e[14],S=e[15],g=t[0],G=t[1],m=t[2],b=t[3],T=t[4],M=t[5],E=t[6],v=t[7],x=t[8],y=t[9],A=t[10],R=t[11],I=t[12],P=t[13],O=t[14],U=t[15];return e[0]=r*g+s*G+p*m+h*b,e[1]=i*g+u*G+c*m+l*b,e[2]=n*g+o*G+_*m+L*b,e[3]=a*g+d*G+f*m+S*b,e[4]=r*T+s*M+p*E+h*v,e[5]=i*T+u*M+c*E+l*v,e[6]=n*T+o*M+_*E+L*v,e[7]=a*T+d*M+f*E+S*v,e[8]=r*x+s*y+p*A+h*R,e[9]=i*x+u*y+c*A+l*R,e[10]=n*x+o*y+_*A+L*R,e[11]=a*x+d*y+f*A+S*R,e[12]=r*I+s*P+p*O+h*U,e[13]=i*I+u*P+c*O+l*U,e[14]=n*I+o*P+_*O+L*U,e[15]=a*I+d*P+f*O+S*U,e},SpiderGL.Math.Mat4.muls$=function(e,t){for(var r=0;16>r;++r)e[r]*=t;return e},SpiderGL.Math.Mat4.compMul$=function(e,t){for(var r=0;16>r;++r)e[r]*=t[r];return e},SpiderGL.Math.Mat4.compDiv$=function(e,t){for(var r=0;16>r;++r)e[r]/=t[r];return e},SpiderGL.Math.Mat4.transpose$=function(e){var t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,e},SpiderGL.Math.Mat4.invert$=function(e){var t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],s=e[5],u=e[6],o=e[7],d=e[8],p=e[9],c=e[10],_=e[11],f=e[12],h=e[13],l=e[14],L=e[15],S=1/(f*p*u*n-d*h*u*n-f*s*c*n+a*h*c*n+d*s*l*n-a*p*l*n-f*p*i*o+d*h*i*o+f*r*c*o-t*h*c*o-d*r*l*o+t*p*l*o+f*s*i*_-a*h*i*_-f*r*u*_+t*h*u*_+a*r*l*_-t*s*l*_-d*s*i*L+a*p*i*L+d*r*u*L-t*p*u*L-a*r*c*L+t*s*c*L);return e[0]=S*(p*l*o-h*c*o+h*u*_-s*l*_-p*u*L+s*c*L),e[1]=S*(h*c*n-p*l*n-h*i*_+r*l*_+p*i*L-r*c*L),e[2]=S*(s*l*n-h*u*n+h*i*o-r*l*o-s*i*L+r*u*L),e[3]=S*(p*u*n-s*c*n-p*i*o+r*c*o+s*i*_-r*u*_),e[4]=S*(f*c*o-d*l*o-f*u*_+a*l*_+d*u*L-a*c*L),e[5]=S*(d*l*n-f*c*n+f*i*_-t*l*_-d*i*L+t*c*L),e[6]=S*(f*u*n-a*l*n-f*i*o+t*l*o+a*i*L-t*u*L),e[7]=S*(a*c*n-d*u*n+d*i*o-t*c*o-a*i*_+t*u*_),e[8]=S*(d*h*o-f*p*o+f*s*_-a*h*_-d*s*L+a*p*L),e[9]=S*(f*p*n-d*h*n-f*r*_+t*h*_+d*r*L-t*p*L),e[10]=S*(a*h*n-f*s*n+f*r*o-t*h*o-a*r*L+t*s*L),e[11]=S*(d*s*n-a*p*n-d*r*o+t*p*o+a*r*_-t*s*_),e[12]=S*(f*p*u-d*h*u-f*s*c+a*h*c+d*s*l-a*p*l),e[13]=S*(d*h*i-f*p*i+f*r*c-t*h*c-d*r*l+t*p*l),e[14]=S*(f*s*i-a*h*i-f*r*u+t*h*u+a*r*l-t*s*l),e[15]=S*(a*p*i-d*s*i+d*r*u-t*p*u-a*r*c+t*s*c),e},SpiderGL.Math.Mat4.translate$=function(e,t){var r=t[0],i=t[1],n=t[2];return e[12]=e[0]*r+e[4]*i+e[8]*n+e[12],e[13]=e[1]*r+e[5]*i+e[9]*n+e[13],e[14]=e[2]*r+e[6]*i+e[10]*n+e[14],e[15]=e[3]*r+e[7]*i+e[11]*n+e[15],e},SpiderGL.Math.Mat4.rotateAngleAxis$=function(e,t,r){var i=SpiderGL.Math.Mat4.rotationAngleAxis(t,r);return SpiderGL.Math.Mat4.mul$(e,i)},SpiderGL.Math.Mat4.scale$=function(e,t){var r=t[0],i=t[1],n=t[2];return e[0]*=r,e[1]*=r,e[2]*=r,e[3]*=r,e[4]*=i,e[5]*=i,e[6]*=i,e[7]*=i,e[8]*=n,e[9]*=n,e[10]*=n,e[11]*=n,e},SpiderGL.Math.Quat={},SpiderGL.Math.Quat.dup=function(e){return e.slice(0,4)},SpiderGL.Math.Quat.identity=function(){return[0,0,0,1]},SpiderGL.Math.Quat.inverse=function(e){return[-e[0],-e[1],-e[2],e[3]]},SpiderGL.Math.Quat.mul=function(e,t){var r=e[0],i=e[1],n=e[2],a=e[3],s=t[0],u=t[1],o=t[2],d=t[3];return[r*d+a*s+n*u-i*o,i*d+a*u+r*o-n*s,n*d+a*o+i*s-r*u,a*d-r*s-i*u-n*o]},SpiderGL.Math.Quat.muls=function(e,t){return[e[0]*t,e[1]*t,e[2]*t,e[3]*t]},SpiderGL.Math.Quat.normalize=function(e){var t=1/SpiderGL.Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3]);return SpiderGL.Math.Quat.muls(e,t)},SpiderGL.Math.Quat.from33=function(e){var t,r=e[0],i=e[1],n=e[2],a=e[3],s=e[4],u=e[5],o=e[6],d=e[7],p=e[8],c=r+s+p;return c>0?(c+=1,t=.5/SpiderGL.Math.sqrt(c),[(u-d)*t,(o-n)*t,(i-a)*t,c*t]):r>s&&r>p?(c=r-s-p+1,t=.5/SpiderGL.Math.sqrt(c),[c*t,(i+a)*t,(o+n)*t,(u-d)*t]):s>p?(c=-r+s-p+1,t=.5/SpiderGL.Math.sqrt(c),[(i+a)*t,c*t,(u+d)*t,(o-n)*t]):(c=-r-s+p+1,t=.5/SpiderGL.Math.sqrt(c),[(o+n)*t,(u+d)*t,c*t,(i-a)*t])},SpiderGL.Math.Quat.to33=function(e){var t=e[0],r=e[1],i=e[2],n=e[3],a=t*t,s=t*r,u=t*i,o=t*n,d=r*r,p=r*i,c=r*n,_=i*i,f=i*n;return[1-2*(d+_),2*(s+f),2*(u-c),2*(s-f),1-2*(a+_),2*(p+o),2*(u+c),2*(p-o),1-2*(a+d)]},SpiderGL.Math.Quat.from44=function(e){return SpiderGL.Math.Quat.from33(SpiderGL.Math.Mat4.to33(e))},SpiderGL.Math.Quat.to44=function(e){return SpiderGL.Math.Mat3.to44(SpiderGL.Math.Quat.to33(e))},SpiderGL.Math.Quat.fromAngleAxis=function(e,t){return[0,0,0,1]},SpiderGL.Math.Quat.toAngleAxis=function(e){return[0,0,0,1]},SpiderGL.Math.Quat.fromEulerAngles=function(e,t,r){return[0,0,0,1]},SpiderGL.Math.Quat.toEulerAngles=function(e){return[0,0,0,1]},SpiderGL.Math.Quat.copy$=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},SpiderGL.Math.Quat.identity$=function(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},SpiderGL.Math.Quat.invert$=function(e){return e[0]=-e[0],e[1]=-e[1],e[2]=-e[2],e},SpiderGL.Math.Quat.mul$=function(e){var t=p[0],r=p[1],i=p[2],n=p[3],a=e[0],s=e[1],u=e[2],o=e[3];return e[0]=t*o+n*a+i*s-r*u,e[1]=r*o+n*s+t*u-i*a,e[2]=i*o+n*u+r*a-t*s,e[3]=n*o-t*a-r*s-i*u,e},SpiderGL.Math.Quat.muls$=function(e,t){return e[0]*=t,e[1]*=t,e[2]*=t,e[3]*=t,e},SpiderGL.Math.Quat.normalize$=function(e){var t=1/SpiderGL.Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3]);return SpiderGL.Math.Quat.muls$(e,t)},SpiderGL.Math.project=function(e,t,r,i){var n=SpiderGL.Math.Vec3,a=SpiderGL.Math.Mat4,s=a.mul4(t,e),u=1/s[3];return s[3]=u,n.muls$(s,u/2),n.adds$(s,.5),n.mul$(s,[r[2],r[3],i[1]-i[0]]),n.add$(s,[r[0],r[1],i[0]]),s},SpiderGL.Math.unproject=function(e,t,r,i){var n=SpiderGL.Math.Vec3,a=SpiderGL.Math.Mat4,s=n.to4(e,1);n.sub$(s,[r[0],r[1],i[0]]),n.div$(s,[r[2],r[3],i[1]-i[0]]),n.muls$(s,2),n.subs$(s,1),s=a.mul4(t,s);var u=1/s[3];return s[3]=u,n.muls$(s,u),s},SpiderGL.Space={},SpiderGL.Space.MatrixStack=function(e){SpiderGL.Core.ObjectBase.call(this),this._onChange=null,this.reset(),this._onChange=e},SpiderGL.Space.MatrixStack.prototype={_invalidate:function(){this._i=null,this._t=null,this._it=null,this._onChange&&this._onChange(this)},reset:function(){var e=SpiderGL.Math.Mat4.identity();this._s=[e],this._l=1,this._m=e,this._i=e,this._t=e,this._it=e,this._onChange&&this._onChange(this)},get onChange(){return this._onChange},set onChange(e){this._onChange=e},get size(){return this._l},get matrix$(){return this._m},get matrix(){return SpiderGL.Math.Mat4.dup(this.matrix$)},get top$(){return this.matrix$},get top(){return this.matrix},get inverse$(){return this._i||(this._i=SpiderGL.Math.Mat4.inverse(this._m))},get inverse(){return SpiderGL.Math.Mat4.dup(this.inverse$)},get transpose$(){return this._t||(this._t=SpiderGL.Math.Mat4.transpose(this._m))},get transpose(){return SpiderGL.Math.Mat4.dup(this.transpose$)},get inverseTranspose$(){return this._it||(this._it=SpiderGL.Math.Mat4.transpose(this.inverse$))},get inverseTranspose(){return SpiderGL.Math.Mat4.dup(this.inverseTranspose$)},push:function(){var e=SpiderGL.Math.Mat4.dup(this._m);this._s.push(e),this._l++,this._m=e},pop:function(){this._l<=1||(this._s.pop(),this._l--,this._m=this._s[this._l-1],this._invalidate())},load:function(e){e=SpiderGL.Math.Mat4.dup(e),this._s[this._l-1]=e,this._m=e,this._invalidate()},loadIdentity:function(){var e=SpiderGL.Math.Mat4.identity$(this._m);this._i=e,this._t=e,this._it=e},multiply:function(e){SpiderGL.Math.Mat4.mul$(this._m,e),this._invalidate()},ortho:function(e,t){SpiderGL.Math.Mat4.mul$(this._m,SpiderGL.Math.Mat4.ortho(e,t)),this._invalidate()},frustum:function(e,t){SpiderGL.Math.Mat4.mul$(this._m,SpiderGL.Math.Mat4.frustum(e,t)),this._invalidate()},perspective:function(e,t,r,i){SpiderGL.Math.Mat4.mul$(this._m,SpiderGL.Math.Mat4.perspective(e,t,r,i)),this._invalidate()},lookAt:function(e,t,r){SpiderGL.Math.Mat4.mul$(this._m,SpiderGL.Math.Mat4.lookAt(e,t,r)),this._invalidate()},translate:function(e){SpiderGL.Math.Mat4.translate$(this._m,e),this._invalidate()},rotate:function(e,t){SpiderGL.Math.Mat4.rotateAngleAxis$(this._m,e,t),this._invalidate()},scale:function(e){SpiderGL.Math.Mat4.scale$(this._m,e),this._invalidate()}},SpiderGL.Type.extend(SpiderGL.Space.MatrixStack,SpiderGL.Core.ObjectBase),SpiderGL.Space.ViewportStack=function(e){SpiderGL.Core.ObjectBase.call(this),this._onChange=null,this.reset(),this._onChange=e},SpiderGL.Space.ViewportStack.prototype={_invalidate:function(){this._onChange&&this._onChange(this)},reset:function(){var e=[0,0,1,1];this._s=[e],this._l=1,this._r=e,this._onChange&&this._onChange(this)},get onChange(){return this._onChange},set onChange(e){this._onChange=e},get size(){return this._l},get rect$(){return this._r},get rect(){return this.rect$.slice(0,4)},get top$(){return this.rect$},get top(){return this.rect},push:function(){var e=this._r.slice(0,4);this._s.push(e),this._l++,this._r=e},pop:function(){this._l<=1||(this._s.pop(),this._l--,this._r=this._s[this._l-1],this._invalidate())},load:function(e){e=e.slice(0,4),this._s[this._l-1]=e,this._r=e,this._invalidate()},loadIdentity:function(){var e=[0,0,1,1];this._r=e},inner:function(e){this._r[0]+=e[0],this._r[1]+=e[1],this._r[2]=e[2],this._r[3]=e[3],this._invalidate()}},SpiderGL.Type.extend(SpiderGL.Space.ViewportStack,SpiderGL.Core.ObjectBase),SpiderGL.Space.DepthRangeStack=function(e){SpiderGL.Core.ObjectBase.call(this),this._onChange=null,this.reset(),this._onChange=e},SpiderGL.Space.DepthRangeStack.prototype={_invalidate:function(){this._onChange&&this._onChange(this)},reset:function(){var e=[0,1];this._s=[e],this._l=1,this._r=e,this._onChange&&this._onChange(this)},get onChange(){return this._onChange},set onChange(e){this._onChange=e},get size(){return this._l},get range$(){return this._r},get range(){return this.range$.slice(0,2)},get top$(){return this.range$},get top(){return this.range},push:function(){var e=this._r.slice(0,2);this._s.push(e),this._l++,this._r=e},pop:function(){this._l<=1||(this._s.pop(),this._l--,this._r=this._s[this._l-1],this._invalidate())},load:function(e){e=e.slice(0,2),this._s[this._l-1]=e,this._r=e,this._invalidate()},loadIdentity:function(){var e=[0,1];this._r=e},inner:function(e){this._r[0]+=e[0],this._r[1]=e[1],this._invalidate()}},SpiderGL.Type.extend(SpiderGL.Space.DepthRangeStack,SpiderGL.Core.ObjectBase),SpiderGL.Space.TransformationStack=function(){SpiderGL.Core.ObjectBase.call(this);var e=this;this._mv={},this._vp={},this._mvp={},this._n={},this._c={},this._m=new SpiderGL.Space.MatrixStack(function(){e._mv={},e._mvp={},e._n={},e._c={}}),this._v=new SpiderGL.Space.MatrixStack(function(){e._mv={},e._vp={},e._mvp={},e._n={},e._c={}}),this._p=new SpiderGL.Space.MatrixStack(function(){e._vp={},e._mvp={}}),this._viewport=new SpiderGL.Space.ViewportStack(function(){}),this._depth=new SpiderGL.Space.DepthRangeStack(function(){})},SpiderGL.Space.TransformationStack.prototype={reset:function(){this._m.reset(),this._v.reset(),this._p.reset()},get viewport(){return this._viewport},get viewportRect$(){return this._viewport.rect$},get viewportRect(){return this._viewport.rect},get depth(){return this._depth},get depthRange$(){return this._depth.range$},get depthRange(){return this._depth.range},get model(){return this._m},get modelMatrix$(){return this._m.matrix$},get modelMatrix(){return this._m.matrix},get modelMatrixInverse$(){return this._m.inverse$},get modelMatrixInverse(){return this._m.inverse},get modelMatrixTranspose$(){return this._m.transpose$},get modelMatrixTranspose(){return this._m.transpose},get modelMatrixInverseTranspose$(){return this._m.inverseTranspose$},get modelMatrixInverseTranspose(){return this._m.inverseTranspose},get view(){return this._v},get viewMatrix$(){return this._v.matrix$},get viewMatrix(){return this._v.matrix},get viewMatrixInverse$(){return this._v.inverse$},get viewMatrixInverse(){return this._v.inverse},get viewMatrixTranspose$(){return this._v.transpose$},get viewMatrixTranspose(){return this._v.transpose},get viewMatrixInverseTranspose$(){return this._v.inverseTranspose$},get viewMatrixInverseTranspose(){return this._v.inverseTranspose},get projection(){return this._p},get projectionMatrix$(){return this._p.matrix$},get projectionMatrix(){return this._p.matrix},get projectionMatrixInverse$(){return this._p.inverse$},get projectionMatrixInverse(){return this._p.inverse},get projectionMatrixTranspose$(){return this._p.transpose$},get projectionMatrixTranspose(){return this._p.transpose},get projectionMatrixInverseTranspose$(){return this._p.inverseTranspose$},get projectionMatrixInverseTranspose(){return this._p.inverseTranspose},get modelViewMatrix$(){return this._mv.m||(this._mv.m=SpiderGL.Math.Mat4.mul(this.viewMatrix$,this.modelMatrix$))},get modelViewMatrix(){return SpiderGL.Math.Mat4.dup(this.modelViewMatrix$);
},get modelViewMatrixInverse$(){return this._mv.i||(this._mv.i=SpiderGL.Math.Mat4.mul(this.modelMatrixInverse$,this.viewMatrixInverse$))},get modelViewMatrixInverse(){return SpiderGL.Math.Mat4.dup(this.modelViewMatrixInverse$)},get modelViewMatrixTranspose$(){return this._mv.t||(this._mv.t=SpiderGL.Math.Mat4.transpose(this.modelViewMatrix$))},get modelViewMatrixTranspose(){return SpiderGL.Math.Mat4.dup(this.modelViewMatrixTranspose$)},get modelViewMatrixInverseTranspose$(){return this._mv.it||(this._mv.it=SpiderGL.Math.Mat4.transpose(this.modelViewMatrixInverse$))},get modelViewMatrixInverseTranspose(){return SpiderGL.Math.Mat4.dup(this.modelViewMatrixInverseTranspose$)},get viewProjectionMatrix$(){return this._vp.m||(this._vp.m=SpiderGL.Math.Mat4.mul(this.projectionMatrix$,this.viewMatrix$))},get viewProjectionMatrix(){return SpiderGL.Math.Mat4.dup(this.viewProjectionMatrix$)},get viewProjectionMatrixInverse$(){return this._vp.i||(this._vp.i=SpiderGL.Math.Mat4.mul(this.viewMatrixInverse$,this.projectionMatrixInverse$))},get viewProjectionMatrixInverse(){return SpiderGL.Math.Mat4.dup(this.viewProjectionMatrixInverse$)},get viewProjectionMatrixTranspose$(){return this._vp.t||(this._vp.t=SpiderGL.Math.Mat4.transpose(this.viewProjectionMatrix$))},get viewProjectionMatrixTranspose(){return SpiderGL.Math.Mat4.dup(this.viewProjectionMatrixTranspose$)},get viewProjectionMatrixInverseTranspose$(){return this._vp.it||(this._vp.it=SpiderGL.Math.Mat4.transpose(this.viewProjectionMatrixInverse$))},get viewProjectionMatrixInverseTranspose(){return SpiderGL.Math.Mat4.dup(this.viewProjectionMatrixInverseTranspose$)},get modelViewProjectionMatrix$(){return this._mvp.m||(this._mvp.m=SpiderGL.Math.Mat4.mul(this.viewProjectionMatrix$,this.modelMatrix$))},get modelViewProjectionMatrix(){return SpiderGL.Math.Mat4.dup(this.modelViewProjectionMatrix$)},get modelViewProjectionMatrixInverse$(){return this._mvp.i||(this._mvp.i=SpiderGL.Math.Mat4.inverse(this.modelViewProjectionMatrix$))},get modelViewProjectionMatrixInverse(){return SpiderGL.Math.Mat4.dup(this.modelViewProjectionMatrixInverse$)},get modelViewProjectionMatrixTranspose$(){return this._mvp.t||(this._mvp.t=SpiderGL.Math.Mat4.transpose(this.modelViewProjectionMatrix$))},get modelViewProjectionMatrixTranspose(){return SpiderGL.Math.Mat4.dup(this.modelViewProjectionMatrixTranspose$)},get modelViewProjectionMatrixInverseTranspose$(){return this._mvp.it||(this._mvp.it=SpiderGL.Math.Mat4.transpose(this.modelViewProjectionMatrixInverse$))},get modelViewProjectionMatrixInverseTranspose(){return SpiderGL.Math.Mat4.dup(this.modelViewProjectionMatrixInverseTranspose$)},get worldSpaceNormalMatrix$(){return this._n.m||(this._n.m=SpiderGL.Math.Mat4.inverseTranspose33(this.modelMatrix$))},get worldSpaceNormalMatrix(){return SpiderGL.Math.Mat4.dup(this.worldSpaceNormalMatrix$)},get viewSpaceNormalMatrix$(){return this._n.v||(this._n.v=SpiderGL.Math.Mat4.inverseTranspose33(this.modelViewMatrix$))},get viewSpaceNormalMatrix(){return SpiderGL.Math.Mat4.dup(this.viewSpaceNormalMatrix$)},get modelSpaceViewerPosition$(){return this._c.mp||(this._c.mp=SpiderGL.Math.Vec4.to3(SpiderGL.Math.Mat4.col(this.modelViewMatrixInverse$,3)))},get modelSpaceViewerPosition(){return SpiderGL.Math.Vec3.dup(this.modelSpaceViewerPosition$)},get worldSpaceViewerPosition$(){return this._c.wp||(this._c.wp=SpiderGL.Math.Vec4.to3(SpiderGL.Math.Mat4.col(this.viewMatrixInverse$,3)))},get worldSpaceViewerPosition(){return SpiderGL.Math.Vec3.dup(this.worldSpaceViewerPosition$)},get modelSpaceViewDirection$(){return this._c.md||(this._c.md=SpiderGL.Math.Vec3.normalize$(SpiderGL.Math.Vec3.neg$(SpiderGL.Math.Vec4.to3(SpiderGL.Math.Mat4.row(this.modelViewMatrixInverse$,2)))))},get modelSpaceViewDirection(){return SpiderGL.Math.Vec3.dup(this.modelSpaceViewDirection$)},get worldSpaceViewDirection$(){return this._c.wd||(this._c.wd=SpiderGL.Math.Vec3.normalize$(SpiderGL.Math.Vec3.neg$(SpiderGL.Math.Vec4.to3(SpiderGL.Math.Mat4.row(this.viewMatrixInverse$,2)))))},get worldSpaceViewDirection(){return SpiderGL.Math.Vec3.dup(this.worldSpaceViewDirection$)},project:function(e){return SpiderGL.Math.project(e,this.modelViewProjectionMatrix$,this.viewportRect$,this.depthRange$)},unproject:function(e){return SpiderGL.Math.unproject(e,this.modelViewProjectionMatrixInverse$,this.viewportRect$,this.depthRange$)}},SpiderGL.Type.extend(SpiderGL.Space.TransformationStack,SpiderGL.Core.ObjectBase),SpiderGL.WebGL={},SpiderGL.WebGL.Context={},SpiderGL.WebGL.Context.WEBGL_STRING="experimental-webgl",SpiderGL.WebGL.Context.DEFAULT_UNPACK_FLIP_Y=!0,SpiderGL.WebGL.Context.DEFAULT_UNPACK_PREMULTIPLY_ALPHA=!1,SpiderGL.WebGL.Context.DEFAULT_UNPACK_COLORSPACE_CONVERSION=WebGLRenderingContext.prototype.NONE,SpiderGL.WebGL.Context.get=function(e,t){var r=e;if(SpiderGL.Type.isString(r)&&(r=SpiderGL.DOM.getElementById(r)),!SpiderGL.Type.instanceOf(r,HTMLCanvasElement))return null;var i=r.getContext(SpiderGL.WebGL.Context.WEBGL_STRING,t);return i},SpiderGL.WebGL.Context._prepareContex=function(e){if(e){var t=e._spidergl;if(!t){t={},e._spidergl=t,t.TAG=0,t.gl=e;var r={};t.glFunctions=r;for(var i in e){var n=e[n];"function"==typeof n&&(r[i]=n)}}}},SpiderGL.WebGL.Context._addExtension=function(e,t,r,i){if(e){var n=e.getExtension;e.getExtension=function(a){if(a==t){var s=this._spidergl;if(!s)return null;var u=s[r];if(!u){u={},u.TAG=0;var o={};u._ext=o,o[r]=u,o.sgl=s,o.gl=e;var d={};if(o.glFunctions=d,!i(e,u))return null;s[r]=u}return u}return n.call(this,a)}}},SpiderGL.WebGL.Context._setup_SGL_current_binding=function(e,t){if(!e)return!1;if(!t)return!1;if(!e._spidergl)return!1;if(e._spidergl.cb)return!1;var r=t,i=r._ext,n=i.glFunctions;i.currentBuffer={},i.currentBuffer[e.ARRAY_BUFFER]=e.getParameter(e.ARRAY_BUFFER_BINDING),i.currentBuffer[e.ELEMENT_ARRAY_BUFFER]=e.getParameter(e.ELEMENT_ARRAY_BUFFER_BINDING),i.bufferStack={},i.bufferStack[e.ARRAY_BUFFER]=[],i.bufferStack[e.ELEMENT_ARRAY_BUFFER]=[],n.bindBuffer=e.bindBuffer,e.bindBuffer=function(e,t){var r=this._spidergl.cb._ext,i=r.currentBuffer[e];i!=t&&(r.currentBuffer[e]=t,r.glFunctions.bindBuffer.call(this,e,t))},r.getCurrentBuffer=function(e){return this._ext.currentBuffer[e]},r.pushBuffer=function(e){var t=this._ext,r=t.bufferStack[e],i=t.currentBuffer[e];r.push(i)},r.popBuffer=function(e){var t=this._ext,r=t.bufferStack[e];if(!(r.length<=0)){var i=r.pop();t.gl.bindBuffer(e,i)}},i.currentFramebuffer={},i.currentFramebuffer[e.FRAMEBUFFER]=e.getParameter(e.FRAMEBUFFER_BINDING),i.framebufferStack={},i.framebufferStack[e.FRAMEBUFFER]=[],n.bindFramebuffer=e.bindFramebuffer,e.bindFramebuffer=function(e,t){var r=this._spidergl.cb._ext,i=r.currentFramebuffer[e];i!=t&&(r.currentFramebuffer[e]=t,r.glFunctions.bindFramebuffer.call(this,e,t))},r.getCurrentFramebuffer=function(e){return this._ext.currentFramebuffer[e]},r.pushFramebuffer=function(e){var t=this._ext,r=t.framebufferStack[e],i=t.currentFramebuffer[e];r.push(i)},r.popFramebuffer=function(e){var t=this._ext,r=t.framebufferStack[e];if(!(r.length<=0)){var i=r.pop();t.gl.bindFramebuffer(e,i)}},i.currentProgram=e.getParameter(e.CURRENT_PROGRAM),i.programStack=[],n.useProgram=e.useProgram,e.useProgram=function(e){var t=this._spidergl.cb._ext,r=t.currentProgram;r!=e&&(t.currentProgram=e,t.glFunctions.useProgram.call(this,e))},r.getCurrentProgram=function(){return this._ext.currentProgram},r.pushProgram=function(){var e=this._ext,t=e.programStack,r=e.currentProgram;t.push(r)},r.popProgram=function(){var e=this._ext,t=e.programStack;if(!(t.length<=0)){var r=t.pop();e.gl.useProgram(r)}},i.currentRenderbuffer={},i.currentRenderbuffer[e.RENDERBUFFER]=e.getParameter(e.RENDERBUFFER_BINDING),i.renderbufferStack={},i.renderbufferStack[e.RENDERBUFFER]=[],n.bindRenderbuffer=e.bindRenderbuffer,e.bindRenderbuffer=function(e,t){var r=this._spidergl.cb._ext,i=r.currentRenderbuffer[e];i!=t&&(r.currentRenderbuffer[e]=t,r.glFunctions.bindRenderbuffer.call(this,e,t))},r.getCurrentRenderbuffer=function(e){return this._ext.currentRenderbuffer[e]},r.pushRenderbuffer=function(e){var t=this._ext,r=t.renderbufferStack[e],i=t.currentRenderbuffer[e];r.push(i)},r.popRenderbuffer=function(e){var t=this._ext,r=t.renderbufferStack[e];if(!(r.length<=0)){var i=r.pop();t.gl.bindRenderbuffer(e,i)}},i.currentShader={},i.currentShader[e.VERTEX_SHADER]=null,i.currentShader[e.FRAGMENT_SHADER]=null,i.shaderStack={},i.shaderStack[e.VERTEX_SHADER]=[],i.shaderStack[e.FRAGMENT_SHADER]=[],i.glFunctions.bindShader=function(e,t){},r.bindShader=function(e,t){var r=this._ext,i=r.currentShader[e];i!=t&&(r.currentShader[e]=t,r.glFunctions.bindShader.call(r.gl,e,t))},r.getCurrentShader=function(e){return this._ext.currentShader[e]},r.pushShader=function(e){var t=this._ext,r=t.shaderStack[e],i=t.currentShader[e];r.push(i)},r.popShader=function(e){var t=this._ext,r=t.shaderStack[e];if(!(r.length<=0)){var i=r.pop();t.gl.bindShader(e,i)}},i.currentTexture={};var a=e.getParameter(e.ACTIVE_TEXTURE),s=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS);i.currentTexture={},i.textureStack={},i.textureUnitStack=[];for(var u=0;s>u;++u){var o=e.TEXTURE0+u;e.activeTexture(o);var d={};d[e.TEXTURE_2D]=e.getParameter(e.TEXTURE_BINDING_2D),d[e.TEXTURE_CUBE_MAP]=e.getParameter(e.TEXTURE_BINDING_CUBE_MAP),i.currentTexture[o]=d;var p={};p[e.TEXTURE_2D]=[],p[e.TEXTURE_CUBE_MAP]=[],i.textureStack[o]=p}return e.activeTexture(a),i.currentTextureUnit=a,n.activeTexture=e.activeTexture,e.activeTexture=function(e){var t=this._spidergl.cb._ext,r=t.currentTextureUnit;r!=e&&(t.currentTextureUnit=e,t.glFunctions.activeTexture.call(this,e))},r.getCurrentTextureUnit=function(){return this._ext.currentTextureUnit},r.pushTextureUnit=function(){var e=this._ext,t=e.textureUnitStack,r=e.currentTextureUnit;t.push(r)},r.popTextureUnit=function(){var e=this._ext,t=e.textureUnitStack;if(!(t.length<=0)){var r=t.pop();e.gl.activeTexture(r)}},n.bindTexture=e.bindTexture,e.bindTexture=function(e,t){var r=this._spidergl.cb._ext,i=r.currentTextureUnit,n=r.currentTexture[i][e];n!=t&&(r.currentTexture[i][e]=t,r.glFunctions.bindTexture.call(this,e,t))},r.getCurrentTexture=function(e){var t=this._ext,r=t.currentTextureUnit;return t.currentTexture[r][e]},r.pushTexture=function(e){var t=this._ext,r=t.currentTextureUnit,i=t.textureStack[r][e],n=t.currentTexture[r][e];i.push(n)},r.popTexture=function(e){var t=this._ext,r=t.currentTextureUnit,i=t.textureStack[r][e];if(!(i.length<=0)){var n=i.pop();t.gl.bindTexture(e,n)}},!0},SpiderGL.WebGL.Context._setup_SGL_wrapper_notify=function(e,t){if(!e)return!1;if(!t)return!1;if(!e._spidergl)return!1;if(e._spidergl.wn)return!1;var r=t,i=r._ext,n=i.glFunctions;return i.cb=e.getExtension("SGL_current_binding"),i.cb?(n.deleteBuffer=e.deleteBuffer,e.deleteBuffer=function(e){var t=this._spidergl.wn._ext;t.glFunctions.deleteBuffer.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_deleteBuffer.apply(r._spidergl,arguments)},n.isBuffer=e.isBuffer,e.isBuffer=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.isBuffer.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_isBuffer.apply(i._spidergl,arguments),r},n.bindBuffer=e.bindBuffer,e.bindBuffer=function(e){var t=this._spidergl.wn._ext;t.glFunctions.bindBuffer.apply(this,arguments);var r=t.cb.getCurrentBuffer(e);r&&r._spidergl&&r._spidergl._gl_bindBuffer.apply(r._spidergl,arguments)},n.getBufferParameter=e.getBufferParameter,e.getBufferParameter=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getBufferParameter.apply(this,arguments),i=t.cb.getCurrentBuffer(e);return i&&i._spidergl&&i._spidergl._gl_getBufferParameter.apply(i._spidergl,arguments),r},n.bufferData=e.bufferData,e.bufferData=function(e){var t=this._spidergl.wn._ext;t.glFunctions.bufferData.apply(this,arguments);var r=t.cb.getCurrentBuffer(e);r&&r._spidergl&&r._spidergl._gl_bufferData.apply(r._spidergl,arguments)},n.bufferSubData=e.bufferSubData,e.bufferSubData=function(e){var t=this._spidergl.wn._ext;t.glFunctions.bufferSubData.apply(this,arguments);var r=t.cb.getCurrentBuffer(e);r&&r._spidergl&&r._spidergl._gl_bufferSubData.apply(r._spidergl,arguments)},n.vertexAttribPointer=e.vertexAttribPointer,e.vertexAttribPointer=function(){var e=this._spidergl.wn._ext;e.glFunctions.vertexAttribPointer.apply(this,arguments);var t=this.ARRAY_BUFFER,r=e.cb.getCurrentBuffer(t);r&&r._spidergl&&r._spidergl._gl_vertexAttribPointer.apply(r._spidergl,arguments)},n.drawElements=e.drawElements,e.drawElements=function(e,t,r,i,n){var a=this._spidergl.wn._ext;a.glFunctions.drawElements.apply(this,arguments);var s=this.ELEMENT_ARRAY_BUFFER,u=a.cb.getCurrentBuffer(s);u&&u._spidergl&&u._spidergl._gl_drawElements.apply(u._spidergl,arguments)},n.deleteFramebuffer=e.deleteFramebuffer,e.deleteFramebuffer=function(e){var t=this._spidergl.wn._ext;t.glFunctions.deleteFramebuffer.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_deleteFramebuffer.apply(r._spidergl,arguments)},n.isFramebuffer=e.isFramebuffer,e.isFramebuffer=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.isFramebuffer.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_isFramebuffer.apply(i._spidergl,arguments),r},n.bindFramebuffer=e.bindFramebuffer,e.bindFramebuffer=function(e){var t=this._spidergl.wn._ext;t.glFunctions.bindFramebuffer.apply(this,arguments);var r=t.cb.getCurrentFramebuffer(e);r&&r._spidergl&&r._spidergl._gl_bindFramebuffer.apply(r._spidergl,arguments)},n.checkFramebufferStatus=e.checkFramebufferStatus,e.checkFramebufferStatus=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.checkFramebufferStatus.apply(this,arguments),i=t.cb.getCurrentFramebuffer(e);return i&&i._spidergl&&i._spidergl._gl_checkFramebufferStatus.apply(i._spidergl,arguments),r},n.getFramebufferAttachmentParameter=e.getFramebufferAttachmentParameter,e.getFramebufferAttachmentParameter=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getFramebufferAttachmentParameter.apply(this,arguments),i=t.cb.getCurrentFramebuffer(e);return i&&i._spidergl&&i._spidergl._gl_getFramebufferAttachmentParameter.apply(i._spidergl,arguments),r},n.framebufferRenderbuffer=e.framebufferRenderbuffer,e.framebufferRenderbuffer=function(e){var t=this._spidergl.wn._ext;t.glFunctions.framebufferRenderbuffer.apply(this,arguments);var r=t.cb.getCurrentFramebuffer(e);r&&r._spidergl&&r._spidergl._gl_framebufferRenderbuffer.apply(r._spidergl,arguments)},n.framebufferTexture2D=e.framebufferTexture2D,e.framebufferTexture2D=function(e){var t=this._spidergl.wn._ext;t.glFunctions.framebufferTexture2D.apply(this,arguments);var r=t.cb.getCurrentFramebuffer(e);r&&r._spidergl&&r._spidergl._gl_framebufferTexture2D.apply(r._spidergl,arguments)},n.clear=e.clear,e.clear=function(){var e=this._spidergl.wn._ext;e.glFunctions.clear.apply(this,arguments);var t=this.FRAMEBUFFER,r=e.cb.getCurrentFramebuffer(t);r&&r._spidergl&&r._spidergl._gl_clear.apply(r._spidergl,arguments)},n.readPixels=e.readPixels,e.readPixels=function(){var e=this._spidergl.wn._ext;e.glFunctions.readPixels.apply(this,arguments);var t=this.FRAMEBUFFER,r=e.cb.getCurrentFramebuffer(t);r&&r._spidergl&&r._spidergl._gl_readPixels.apply(r._spidergl,arguments)},n.deleteProgram=e.deleteProgram,e.deleteProgram=function(e){var t=this._spidergl.wn._ext;t.glFunctions.deleteProgram.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_deleteProgram.apply(r._spidergl,arguments)},n.isProgram=e.isProgram,e.isProgram=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.isProgram.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_isProgram.apply(i._spidergl,arguments),r},n.useProgram=e.useProgram,e.useProgram=function(){var e=this._spidergl.wn._ext;e.glFunctions.useProgram.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_useProgram.apply(t._spidergl,arguments)},n.getActiveAttrib=e.getActiveAttrib,e.getActiveAttrib=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getActiveAttrib.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getActiveAttrib.apply(i._spidergl,arguments),r},n.getActiveUniform=e.getActiveUniform,e.getActiveUniform=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getActiveUniform.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getActiveUniform.apply(i._spidergl,arguments),r},n.getAttachedShaders=e.getAttachedShaders,e.getAttachedShaders=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getAttachedShaders.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getAttachedShaders.apply(i._spidergl,arguments),r},n.getAttribLocation=e.getAttribLocation,e.getAttribLocation=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getAttribLocation.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getAttribLocation.apply(i._spidergl,arguments),r},n.getProgramParameter=e.getProgramParameter,e.getProgramParameter=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getProgramParameter.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getProgramParameter.apply(i._spidergl,arguments),r},n.getProgramInfoLog=e.getProgramInfoLog,e.getProgramInfoLog=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getProgramInfoLog.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getProgramInfoLog.apply(i._spidergl,arguments),r},n.getUniform=e.getUniform,e.getUniform=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getUniform.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getUniform.apply(i._spidergl,arguments),r},n.getUniformLocation=e.getUniformLocation,e.getUniformLocation=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getUniformLocation.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getUniformLocation.apply(i._spidergl,arguments),r},n.attachShader=e.attachShader,e.attachShader=function(e){var t=this._spidergl.wn._ext;t.glFunctions.attachShader.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_attachShader.apply(r._spidergl,arguments)},n.bindAttribLocation=e.bindAttribLocation,e.bindAttribLocation=function(e){var t=this._spidergl.wn._ext;t.glFunctions.bindAttribLocation.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_bindAttribLocation.apply(r._spidergl,arguments)},n.detachShader=e.detachShader,e.detachShader=function(e){var t=this._spidergl.wn._ext;t.glFunctions.detachShader.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_detachShader.apply(r._spidergl,arguments)},n.linkProgram=e.linkProgram,e.linkProgram=function(e){var t=this._spidergl.wn._ext;t.glFunctions.linkProgram.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_linkProgram.apply(r._spidergl,arguments)},n.uniform1f=e.uniform1f,e.uniform1f=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform1f.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform1f.apply(t._spidergl,arguments)},n.uniform1fv=e.uniform1fv,e.uniform1fv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform1fv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform1fv.apply(t._spidergl,arguments)},n.uniform1i=e.uniform1i,e.uniform1i=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform1i.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform1i.apply(t._spidergl,arguments)},n.uniform1iv=e.uniform1iv,e.uniform1iv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform1iv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform1iv.apply(t._spidergl,arguments)},n.uniform2f=e.uniform2f,e.uniform2f=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform2f.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform2f.apply(t._spidergl,arguments)},n.uniform2fv=e.uniform2fv,e.uniform2fv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform2fv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform2fv.apply(t._spidergl,arguments)},n.uniform2i=e.uniform2i,e.uniform2i=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform2i.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform2i.apply(t._spidergl,arguments)},n.uniform2iv=e.uniform2iv,e.uniform2iv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform2iv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform2iv.apply(t._spidergl,arguments)},n.uniform3f=e.uniform3f,e.uniform3f=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform3f.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform3f.apply(t._spidergl,arguments)},n.uniform3fv=e.uniform3fv,e.uniform3fv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform3fv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform3fv.apply(t._spidergl,arguments)},n.uniform3i=e.uniform3i,e.uniform3i=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform3i.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform3i.apply(t._spidergl,arguments)},n.uniform3iv=e.uniform3iv,e.uniform3iv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform3iv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform3iv.apply(t._spidergl,arguments)},n.uniform4f=e.uniform4f,e.uniform4f=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform4f.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform4f.apply(t._spidergl,arguments)},n.uniform4fv=e.uniform4fv,e.uniform4fv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform4fv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform4fv.apply(t._spidergl,arguments)},n.uniform4i=e.uniform4i,e.uniform4i=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform4i.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform4i.apply(t._spidergl,arguments)},n.uniform4iv=e.uniform4iv,e.uniform4iv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniform4iv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniform4iv.apply(t._spidergl,arguments)},n.uniformMatrix2fv=e.uniformMatrix2fv,e.uniformMatrix2fv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniformMatrix2fv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniformMatrix2fv.apply(t._spidergl,arguments)},n.uniformMatrix3fv=e.uniformMatrix3fv,e.uniformMatrix3fv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniformMatrix3fv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniformMatrix3fv.apply(t._spidergl,arguments)},n.uniformMatrix4fv=e.uniformMatrix4fv,e.uniformMatrix4fv=function(){var e=this._spidergl.wn._ext;e.glFunctions.uniformMatrix4fv.apply(this,arguments);var t=e.cb.getCurrentProgram();t&&t._spidergl&&t._spidergl._gl_uniformMatrix4fv.apply(t._spidergl,arguments)},n.validateProgram=e.validateProgram,e.validateProgram=function(e){var t=this._spidergl.wn._ext;t.glFunctions.validateProgram.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_validateProgram.apply(r._spidergl,arguments)},n.deleteRenderbuffer=e.deleteRenderbuffer,e.deleteRenderbuffer=function(e){var t=this._spidergl.wn._ext;t.glFunctions.deleteRenderbuffer.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_deleteRenderbuffer.apply(r._spidergl,arguments)},n.isRenderbuffer=e.isRenderbuffer,e.isRenderbuffer=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.isRenderbuffer.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_isRenderbuffer.apply(i._spidergl,arguments),r},n.bindRenderbuffer=e.bindRenderbuffer,e.bindRenderbuffer=function(e){var t=this._spidergl.wn._ext;t.glFunctions.bindRenderbuffer.apply(this,arguments);var r=t.cb.getCurrentRenderbuffer(e);r&&r._spidergl&&r._spidergl._gl_bindRenderbuffer.apply(r._spidergl,arguments)},n.getRenderbufferParameter=e.getRenderbufferParameter,e.getRenderbufferParameter=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getRenderbufferParameter.apply(this,arguments),i=t.cb.getCurrentRenderbuffer(e);return i&&i._spidergl&&i._spidergl._gl_getRenderbufferParameter.apply(i._spidergl,arguments),r},n.renderbufferStorage=e.renderbufferStorage,e.renderbufferStorage=function(e){var t=this._spidergl.wn._ext;t.glFunctions.renderbufferStorage.apply(this,arguments);var r=t.cb.getCurrentRenderbuffer(e);r&&r._spidergl&&r._spidergl._gl_renderbufferStorage.apply(r._spidergl,arguments)},n.deleteShader=e.deleteShader,e.deleteShader=function(e){var t=this._spidergl.wn._ext;t.glFunctions.deleteShader.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_deleteShader.apply(r._spidergl,arguments)},n.isShader=e.isShader,e.isShader=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.isShader.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_isShader.apply(i._spidergl,arguments),r},n.getShaderParameter=e.getShaderParameter,e.getShaderParameter=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getShaderParameter.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getShaderParameter.apply(i._spidergl,arguments),r},n.getShaderInfoLog=e.getShaderInfoLog,e.getShaderInfoLog=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getShaderInfoLog.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getShaderInfoLog.apply(i._spidergl,arguments),r},n.getShaderSource=e.getShaderSource,e.getShaderSource=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getShaderSource.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_getShaderSource.apply(i._spidergl,arguments),r},n.compileShader=e.compileShader,e.compileShader=function(e){var t=this._spidergl.wn._ext;t.glFunctions.compileShader.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_compileShader.apply(r._spidergl,arguments)},n.shaderSource=e.shaderSource,e.shaderSource=function(e){var t=this._spidergl.wn._ext;t.glFunctions.shaderSource.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_shaderSource.apply(r._spidergl,arguments)},i.textureTargetMap={},i.textureTargetMap[e.TEXTURE_2D]=e.TEXTURE_2D,i.textureTargetMap[e.TEXTURE_CUBE_MAP]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_POSITIVE_X]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_NEGATIVE_X]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_POSITIVE_Y]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_NEGATIVE_Y]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_POSITIVE_Z]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_NEGATIVE_Z]=e.TEXTURE_CUBE_MAP,n.deleteTexture=e.deleteTexture,e.deleteTexture=function(e){var t=this._spidergl.wn._ext;t.glFunctions.deleteTexture.apply(this,arguments);var r=e;r&&r._spidergl&&r._spidergl._gl_deleteTexture.apply(r._spidergl,arguments)},n.isTexture=e.isTexture,e.isTexture=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.isTexture.apply(this,arguments),i=e;return i&&i._spidergl&&i._spidergl._gl_isTexture.apply(i._spidergl,arguments),r},n.bindTexture=e.bindTexture,e.bindTexture=function(e){var t=this._spidergl.wn._ext;t.glFunctions.bindTexture.apply(this,arguments);var r=t.cb.getCurrentTexture(e);r&&r._spidergl&&r._spidergl._gl_bindTexture.apply(r._spidergl,arguments)},n.getTexParameter=e.getTexParameter,e.getTexParameter=function(e){var t=this._spidergl.wn._ext,r=t.glFunctions.getTexParameter.apply(this,arguments),i=t.cb.getCurrentTexture(e);return i&&i._spidergl&&i._spidergl._gl_getTexParameter.apply(i._spidergl,arguments),r},n.copyTexImage2D=e.copyTexImage2D,e.copyTexImage2D=function(e){var t=this._spidergl.wn._ext;t.glFunctions.copyTexImage2D.apply(this,arguments);var r=t.textureTargetMap[e],i=t.cb.getCurrentTexture(r);i&&i._spidergl&&i._spidergl._gl_copyTexImage2D.apply(i._spidergl,arguments)},n.copyTexSubImage2D=e.copyTexSubImage2D,e.copyTexSubImage2D=function(e){var t=this._spidergl.wn._ext;t.glFunctions.copyTexSubImage2D.apply(this,arguments);var r=t.textureTargetMap[e],i=t.cb.getCurrentTexture(r);i&&i._spidergl&&i._spidergl._gl_copyTexSubImage2D.apply(i._spidergl,arguments)},n.generateMipmap=e.generateMipmap,e.generateMipmap=function(e){var t=this._spidergl.wn._ext;t.glFunctions.generateMipmap.apply(this,arguments);var r=t.cb.getCurrentTexture(e);r&&r._spidergl&&r._spidergl._gl_generateMipmap.apply(r._spidergl,arguments)},n.texImage2D=e.texImage2D,e.texImage2D=function(e){var t=this._spidergl.wn._ext;t.glFunctions.texImage2D.apply(this,arguments);var r=t.textureTargetMap[e],i=t.cb.getCurrentTexture(r);i&&i._spidergl&&i._spidergl._gl_texImage2D.apply(i._spidergl,arguments)},n.texParameterf=e.texParameterf,e.texParameterf=function(e){var t=this._spidergl.wn._ext;t.glFunctions.texParameterf.apply(this,arguments);var r=t.cb.getCurrentTexture(e);r&&r._spidergl&&r._spidergl._gl_texParameterf.apply(r._spidergl,arguments)},n.texParameteri=e.texParameteri,e.texParameteri=function(e){var t=this._spidergl.wn._ext;t.glFunctions.texParameteri.apply(this,arguments);var r=t.cb.getCurrentTexture(e);r&&r._spidergl&&r._spidergl._gl_texParameteri.apply(r._spidergl,arguments)},n.texSubImage2D=e.texSubImage2D,e.texSubImage2D=function(e){var t=this._spidergl.wn._ext;t.glFunctions.texSubImage2D.apply(this,arguments);var r=t.textureTargetMap[e],i=t.cb.getCurrentTexture(r);i&&i._spidergl&&i._spidergl._gl_texSubImage2D.apply(i._spidergl,arguments)},!0):!1},SpiderGL.WebGL.Context._setup_SGL_direct_state_access=function(e,t){if(!e)return!1;if(!t)return!1;if(!e._spidergl)return!1;if(e._spidergl.dsa)return!1;var r=t,i=r._ext;i.glFunctions;return i.cb=e.getExtension("SGL_current_binding"),i.cb?(r.getBufferParameter=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentBuffer(t);a!=e&&n.bindBuffer(t,e);var s=n.getBufferParameter(t,r);return a!=e&&n.bindBuffer(t,a),s},r.bufferData=function(e,t,r,i){var n=this._ext,a=n.gl,s=n.cb.getCurrentBuffer(t);s!=e&&a.bindBuffer(t,e),a.bufferData(t,r,i),s!=e&&a.bindBuffer(t,s)},r.bufferSubData=function(e,t,r,i){var n=this._ext,a=n.gl,s=n.cb.getCurrentBuffer(t);s!=e&&a.bindBuffer(t,e),a.bufferSubData(t,r,i),s!=e&&a.bindBuffer(t,s)},r.vertexAttribPointer=function(e,t,r,i,n,a,s){var u=this._ext,o=u.gl,d=o.ARRAY_BUFFER,p=u.cb.getCurrentBuffer(d);p!=e&&o.bindBuffer(d,e),o.vertexAttribPointer(t,r,i,n,a,s),p!=e&&o.bindBuffer(d,p)},r.drawElements=function(e,t,r,i,n){var a=this._ext,s=a.gl,u=s.ELEMENT_ARRAY_BUFFER,o=a.cb.getCurrentBuffer(u);o!=e&&s.bindBuffer(u,e),s.drawElements(t,r,i,n),o!=e&&s.bindBuffer(u,o)},r.checkFramebufferStatus=function(e,t){var r=this._ext,i=r.gl,n=r.cb.getCurrentFramebuffer(t);n!=e&&i.bindFramebuffer(t,e);var a=i.checkFramebufferStatus(t);return n!=e&&i.bindFramebuffer(t,n),a},r.getFramebufferAttachmentParameter=function(e,t,r,i){var n=this._ext,a=n.gl,s=n.cb.getCurrentFramebuffer(t);s!=e&&a.bindFramebuffer(t,e);var u=a.getFramebufferAttachmentParameter(t,r,i);return s!=e&&a.bindFramebuffer(t,s),u},r.framebufferRenderbuffer=function(e,t,r,i,n){var a=this._ext,s=a.gl,u=a.cb.getCurrentFramebuffer(t);u!=e&&s.bindFramebuffer(t,e),s.framebufferRenderbuffer(t,r,i,n),u!=e&&s.bindFramebuffer(t,u)},r.framebufferTexture2D=function(e,t,r,i,n,a){var s=this._ext,u=s.gl,o=s.cb.getCurrentFramebuffer(t);o!=e&&u.bindFramebuffer(t,e),u.framebufferTexture2D(t,r,i,n,a),o!=e&&u.bindFramebuffer(t,o)},r.clear=function(e,t){var r=this._ext,i=r.gl,n=i.FRAMEBUFFER,a=r.cb.getCurrentFramebuffer(n);a!=e&&i.bindFramebuffer(n,e),i.clear(t),a!=e&&i.bindFramebuffer(n,a)},r.readPixels=function(e,t,r,i,n,a,s,u){var o=this._ext,d=o.gl,p=d.FRAMEBUFFER,c=o.cb.getCurrentFramebuffer(p);c!=e&&d.bindFramebuffer(p,e),d.readPixels(t,r,i,n,a,s,u),c!=e&&d.bindFramebuffer(p,c)},r.uniform1f=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentProgram();a!=e&&n.useProgram(e),n.uniform1f(t,r),a!=e&&n.useProgram(a)},r.uniform1fv=function(e,t,r){
var i=this._ext,n=i.gl,a=i.cb.getCurrentProgram();a!=e&&n.useProgram(e),n.uniform1fv(t,r),a!=e&&n.useProgram(a)},r.uniform1i=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentProgram();a!=e&&n.useProgram(e),n.uniform1i(t,r),a!=e&&n.useProgram(a)},r.uniform1iv=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentProgram();a!=e&&n.useProgram(e),n.uniform1iv(t,r),a!=e&&n.useProgram(a)},r.uniform2f=function(e,t,r,i){var n=this._ext,a=n.gl,s=n.cb.getCurrentProgram();s!=e&&a.useProgram(e),a.uniform2f(t,r,i),s!=e&&a.useProgram(s)},r.uniform2fv=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentProgram();a!=e&&n.useProgram(e),n.uniform2fv(t,r),a!=e&&n.useProgram(a)},r.uniform2i=function(e,t,r,i){var n=this._ext,a=n.gl,s=n.cb.getCurrentProgram();s!=e&&a.useProgram(e),a.uniform2i(t,r,i),s!=e&&a.useProgram(s)},r.uniform2iv=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentProgram();a!=e&&n.useProgram(e),n.uniform2iv(t,r),a!=e&&n.useProgram(a)},r.uniform3f=function(e,t,r,i,n){var a=this._ext,s=a.gl,u=a.cb.getCurrentProgram();u!=e&&s.useProgram(e),s.uniform3f(t,r,i,n),u!=e&&s.useProgram(u)},r.uniform3fv=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentProgram();a!=e&&n.useProgram(e),n.uniform3fv(t,r),a!=e&&n.useProgram(a)},r.uniform3i=function(e,t,r,i,n){var a=this._ext,s=a.gl,u=a.cb.getCurrentProgram();u!=e&&s.useProgram(e),s.uniform3i(t,r,i,n),u!=e&&s.useProgram(u)},r.uniform3iv=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentProgram();a!=e&&n.useProgram(e),n.uniform3iv(t,r),a!=e&&n.useProgram(a)},r.uniform4f=function(e,t,r,i,n,a){var s=this._ext,u=s.gl,o=s.cb.getCurrentProgram();o!=e&&u.useProgram(e),u.uniform4f(t,r,i,n,a),o!=e&&u.useProgram(o)},r.uniform4fv=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentProgram();a!=e&&n.useProgram(e),n.uniform4fv(t,r),a!=e&&n.useProgram(a)},r.uniform4i=function(e,t,r,i,n,a){var s=this._ext,u=s.gl,o=s.cb.getCurrentProgram();o!=e&&u.useProgram(e),u.uniform4i(t,r,i,n,a),o!=e&&u.useProgram(o)},r.uniform4iv=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentProgram();a!=e&&n.useProgram(e),n.uniform4iv(t,r),a!=e&&n.useProgram(a)},r.uniformMatrix2fv=function(e,t,r,i){var n=this._ext,a=n.gl,s=n.cb.getCurrentProgram();s!=e&&a.useProgram(e),a.uniformMatrix2fv(t,r,i),s!=e&&a.useProgram(s)},r.uniformMatrix3fv=function(e,t,r,i){var n=this._ext,a=n.gl,s=n.cb.getCurrentProgram();s!=e&&a.useProgram(e),a.uniformMatrix3fv(t,r,i),s!=e&&a.useProgram(s)},r.uniformMatrix4fv=function(e,t,r,i){var n=this._ext,a=n.gl,s=n.cb.getCurrentProgram();s!=e&&a.useProgram(e),a.uniformMatrix4fv(t,r,i),s!=e&&a.useProgram(s)},r.getRenderbufferParameter=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentRenderbuffer(t);a!=e&&n.bindRenderbuffer(t,e);var s=n.getRenderbufferParameter.call(n,t,r);return a!=e&&n.bindRenderbuffer(t,a),s},r.renderbufferStorage=function(e,t,r,i,n){var a=this._ext,s=a.gl,u=a.cb.getCurrentRenderbuffer(t);u!=e&&s.bindRenderbuffer(t,e),s.renderbufferStorage(t,r,i,n),u!=e&&s.bindRenderbuffer(t,u)},r.shaderIsNull=function(e){return null==e},i.textureTargetMap={},i.textureTargetMap[e.TEXTURE_2D]=e.TEXTURE_2D,i.textureTargetMap[e.TEXTURE_CUBE_MAP]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_POSITIVE_X]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_NEGATIVE_X]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_POSITIVE_Y]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_NEGATIVE_Y]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_POSITIVE_Z]=e.TEXTURE_CUBE_MAP,i.textureTargetMap[e.TEXTURE_CUBE_MAP_NEGATIVE_Z]=e.TEXTURE_CUBE_MAP,r.getTexParameter=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb.getCurrentTexture(t);a!=e&&n.bindTexture(t,e);var s=n.getTexParameter(t,r);return a!=e&&n.bindTexture(t,a),s},r.copyTexImage2D=function(e,t,r,i,n,a,s,u,o){var d=this._ext,p=d.gl,c=d.textureTargetMap[t],_=d.cb.getCurrentTexture(c);_!=e&&p.bindTexture(c,e),p.copyTexImage2D(t,r,i,n,a,s,u,o),_!=e&&p.bindTexture(c,_)},r.copyTexSubImage2D=function(e,t,r,i,n,a,s,u,o,d){var p=this._ext,c=p.gl,_=p.textureTargetMap[t],f=p.cb.getCurrentTexture(_);f!=e&&c.bindTexture(_,e),c.copyTexSubImage2D(t,r,i,n,a,s,u,o,d),f!=e&&c.bindTexture(_,f)},r.generateMipmap=function(e,t){var r=this._ext,i=r.gl,n=r.cb.getCurrentTexture(t);n!=e&&i.bindTexture(t,e),i.generateMipmap(t),n!=e&&i.bindTexture(t,n)},r.texImage2D=function(e,t){var r=this._ext,i=r.gl,n=r.textureTargetMap[t],a=r.cb.getCurrentTexture(n);a!=e&&i.bindTexture(n,e);var s=Array.prototype.slice.call(arguments,1);i.texImage2D.apply(i,s),a!=e&&i.bindTexture(n,a)},r.texParameterf=function(e,t,r,i){var n=this._ext,a=n.gl,s=n.cb.getCurrentTexture(t);s!=e&&a.bindTexture(t,e),a.texParameterf(t,r,i),s!=e&&a.bindTexture(t,s)},r.texParameteri=function(e,t,r,i){var n=this._ext,a=n.gl,s=n.cb.getCurrentTexture(t);s!=e&&a.bindTexture(t,e),a.texParameteri(t,r,i),s!=e&&a.bindTexture(t,s)},r.texSubImage2D=function(e,t){var r=this._ext,i=r.gl,n=r.textureTargetMap[t],a=r.cb.getCurrentTexture(n);a!=e&&i.bindTexture(n,e);var s=Array.prototype.slice.call(arguments,1);i.texSubImage2D.apply(i,s),a!=e&&i.bindTexture(n,a)},r.bindTexture=function(e,t,r){var i=this._ext,n=i.gl,a=i.cb,s=a.getCurrentTextureUnit();s!=e&&n.activeTexture(e),n.bindTexture(t,r),s!=e&&n.activeTexture(s)},!0):!1},SpiderGL.WebGL.Context.hijack=function(e){if(e._spidergl)return!1;SpiderGL.WebGL.Context._prepareContex(e),SpiderGL.WebGL.Context._addExtension(e,"SGL_current_binding","cb",SpiderGL.WebGL.Context._setup_SGL_current_binding),SpiderGL.WebGL.Context._addExtension(e,"SGL_wrapper_notify","wn",SpiderGL.WebGL.Context._setup_SGL_wrapper_notify),SpiderGL.WebGL.Context._addExtension(e,"SGL_direct_state_access","dsa",SpiderGL.WebGL.Context._setup_SGL_direct_state_access);var t=e.getExtension("SGL_current_binding"),r=e.getExtension("SGL_wrapper_notify"),i=e.getExtension("SGL_direct_state_access"),n=!!t&&!!r&&!!i;return n},SpiderGL.WebGL.Context.isHijacked=function(e){return!!e&&!!e._spidergl},SpiderGL.WebGL.Context.getHijacked=function(e,t){var r=SpiderGL.WebGL.Context.get(e,t);return SpiderGL.WebGL.Context.hijack(r),r},SpiderGL.WebGL.Context.setStandardGLUnpack=function(e){e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!0),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,WebGLRenderingContext.prototype.NONE)},SpiderGL.WebGL.ObjectGL=function(e,t,r){if(!SpiderGL.WebGL.Context.isHijacked(e))return null;r=SpiderGL.Utility.getDefaultObject({handle:null},r),SpiderGL.Core.ObjectBase.call(this);e.getExtension("SGL_wrapper_notify");this._gl=e,this._cb=e.getExtension("SGL_current_binding"),this._dsa=e.getExtension("SGL_direct_state_access"),this._h=r.handle,this._t=t},SpiderGL.WebGL.ObjectGL.TARGET=WebGLRenderingContext.prototype.NONE,SpiderGL.WebGL.ObjectGL.unbind=function(e){},SpiderGL.WebGL.ObjectGL.prototype={get gl(){return this._gl},get handle(){return this._h},get target(){return this._t},get isValid(){return null!=this._h},get isReady(){return!1},destroy:function(){},bind:function(){},unbind:function(){}},SpiderGL.Type.extend(SpiderGL.WebGL.ObjectGL,SpiderGL.Core.ObjectBase),SpiderGL.WebGL.Buffer=function(e,t,r){if(!SpiderGL.WebGL.Context.isHijacked(e))return null;if(SpiderGL.Type.instanceOf(r,WebGLBuffer)?r={handle:r}:SpiderGL.Type.instanceOf(r,ArrayBuffer)||SpiderGL.Type.isTypedArray(r)?r={data:r}:SpiderGL.Type.isNumber(r)&&(r={size:r}),r=SpiderGL.Utility.getDefaultObject({handle:null,data:null,size:0,usage:SpiderGL.WebGL.Buffer.DEFAULT_USAGE},r),SpiderGL.WebGL.ObjectGL.call(this,e,t,r),this._h&&this._h._spidergl&&this._h._spidergl!=this)return this._h._spidergl;var e=this._gl,i=this._cb,n=(this._dsa,this._t),a=this._h;i.pushBuffer(n),a?(e.bindBuffer(n,a),r.size=e.getBufferParameter(n,e.BUFFER_SIZE),r.usage=e.getBufferParameter(n,e.BUFFER_USAGE)):(a=e.createBuffer(),e.bindBuffer(n,a),this._h=a),i.popBuffer(n),a._spidergl=this,this._size=r.size,this._usage=r.usage,r.data?this.setData(r.data,r.usage):r.size&&this.setSize(r.size,r.usage)},SpiderGL.WebGL.Buffer.TARGET=WebGLRenderingContext.prototype.NONE,SpiderGL.WebGL.Buffer.DEFAULT_USAGE=WebGLRenderingContext.prototype.STATIC_DRAW,SpiderGL.WebGL.Buffer.DEFAULT_SUB_DATA_OFFSET=0,SpiderGL.WebGL.Buffer.unbind=function(e){},SpiderGL.WebGL.Buffer.prototype={_gl_deleteBuffer:function(){this._h=null},_gl_isBuffer:function(){},_gl_bindBuffer:function(){},_gl_getBufferParameter:function(){},_gl_bufferData:function(){var e=arguments[1],t=arguments[2];this._size=SpiderGL.Type.isNumber(e)?e:e.byteLength,this._usage=t},_gl_bufferSubData:function(){},_gl_vertexAttribPointer:function(){},_gl_drawElements:function(){},get isReady(){return this._size>0},get size(){return this._size},get usage(){return this._usage},setSize:function(e,t){t=SpiderGL.Utility.getDefaultValue(t,SpiderGL.WebGL.Buffer.DEFAULT_USAGE),this._dsa.bufferData(this._h,this._t,e,t)},setData:function(e,t){t=SpiderGL.Utility.getDefaultValue(t,SpiderGL.WebGL.Buffer.DEFAULT_USAGE),this._dsa.bufferData(this._h,this._t,e,t)},setSubData:function(e,t){t=SpiderGL.Utility.getDefaultValue(t,SpiderGL.WebGL.Buffer.DEFAULT_SUB_DATA_OFFSET),this._dsa.bufferSubData(this._h,this._t,t,e)},destroy:function(){this._gl.deleteBuffer(this._h)},bind:function(){this._gl.bindBuffer(this._t,this._h)},unbind:function(){this._gl.bindBuffer(this._t,null)}},SpiderGL.Type.extend(SpiderGL.WebGL.Buffer,SpiderGL.WebGL.ObjectGL),SpiderGL.WebGL.VertexBuffer=function(e,t){return SpiderGL.WebGL.Context.isHijacked(e)?(SpiderGL.WebGL.Buffer.call(this,e,SpiderGL.WebGL.VertexBuffer.TARGET,t),this._h&&this._h._spidergl&&this._h._spidergl!=this?this._h._spidergl:void 0):null},SpiderGL.WebGL.VertexBuffer.TARGET=WebGLRenderingContext.prototype.ARRAY_BUFFER,SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_INDEX=0,SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_SIZE=3,SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_TYPE=WebGLRenderingContext.prototype.FLOAT,SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_NORMALIZED=!1,SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_STRIDE=0,SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_OFFSET=0,SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_ENABLE=!0,SpiderGL.WebGL.VertexBuffer.unbind=function(e){e.bindBuffer(SpiderGL.WebGL.VertexBuffer.TARGET,null)},SpiderGL.WebGL.VertexBuffer.prototype={vertexAttribPointer:function(e){e=SpiderGL.Utility.getDefaultObject({index:SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_INDEX,size:SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_SIZE,glType:SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_TYPE,normalized:SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_NORMALIZED,stride:SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_STRIDE,offset:SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_OFFSET,enable:SpiderGL.WebGL.VertexBuffer.DEFAULT_ATTRIBUTE_ENABLE},e),this._dsa.vertexAttribPointer(this._h,e.index,e.size,e.glType,e.normalized,e.stride,e.offset),e.enable&&this._gl.enableVertexAttribArray(e.index)}},SpiderGL.Type.extend(SpiderGL.WebGL.VertexBuffer,SpiderGL.WebGL.Buffer),SpiderGL.WebGL.IndexBuffer=function(e,t){return SpiderGL.WebGL.Context.isHijacked(e)?(SpiderGL.WebGL.Buffer.call(this,e,SpiderGL.WebGL.IndexBuffer.TARGET,t),this._h&&this._h._spidergl&&this._h._spidergl!=this?this._h._spidergl:void 0):null},SpiderGL.WebGL.IndexBuffer.TARGET=WebGLRenderingContext.prototype.ELEMENT_ARRAY_BUFFER,SpiderGL.WebGL.IndexBuffer.DEFAULT_DRAW_ELEMENTS_MODE=WebGLRenderingContext.prototype.TRIANGLES,SpiderGL.WebGL.IndexBuffer.DEFAULT_DRAW_ELEMENTS_COUNT=-1,SpiderGL.WebGL.IndexBuffer.DEFAULT_DRAW_ELEMENTS_TYPE=WebGLRenderingContext.prototype.UNSIGNED_SHORT,SpiderGL.WebGL.IndexBuffer.DEFAULT_DRAW_ELEMENTS_OFFSET=0,SpiderGL.WebGL.IndexBuffer.unbind=function(e){e.bindBuffer(SpiderGL.WebGL.IndexBuffer.TARGET,null)},SpiderGL.WebGL.IndexBuffer.prototype={drawElements:function(e){if(e=SpiderGL.Utility.getDefaultObject({glMode:SpiderGL.WebGL.IndexBuffer.DEFAULT_DRAW_ELEMENTS_MODE,count:SpiderGL.WebGL.IndexBuffer.DEFAULT_DRAW_ELEMENTS_COUNT,glType:SpiderGL.WebGL.IndexBuffer.DEFAULT_DRAW_ELEMENTS_TYPE,offset:SpiderGL.WebGL.IndexBuffer.DEFAULT_DRAW_ELEMENTS_OFFSET},e),e.count<1){var t=SpiderGL.Type.typeSizeFromGL(e.glType);e.count=(this._size-e.offset)/t}this._dsa.drawElements(this._h,e.glMode,e.count,e.glType,e.offset)}},SpiderGL.Type.extend(SpiderGL.WebGL.IndexBuffer,SpiderGL.WebGL.Buffer),SpiderGL.WebGL.Framebuffer=function(e,t){if(!SpiderGL.WebGL.Context.isHijacked(e))return null;SpiderGL.Type.instanceOf(t,WebGLFramebuffer)&&(t={handle:t}),t=SpiderGL.Utility.getDefaultObject({handle:null,autoViewport:SpiderGL.WebGL.Framebuffer.DEFAULT_AUTO_VIEWPORT},t);SpiderGL.WebGL.ObjectGL.call(this,e,SpiderGL.WebGL.Framebuffer.TARGET,t);if(this._h&&this._h._spidergl&&this._h._spidergl!=this)return this._h._spidergl;var e=this._gl,r=this._cb,i=(this._dsa,this._t),n=this._h,a=!1;if(n?a=!0:(n=e.createFramebuffer(),this._h=n),n._spidergl=this,this._attachments={},this._status=0,this._autoViewport=t.autoViewport,this._viewport=[0,0,1,1],r.pushFramebuffer(i),e.bindFramebuffer(i,n),a){var s=null,u=0,o=0,d=0;for(var p in SpiderGL.WebGL.Framebuffer._attachmentName)switch(s=e.getFramebufferAttachmentParameter(i,att,e.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME),u=e.getFramebufferAttachmentParameter(i,att,e.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)){case e.RENDERBUFFER:d=e.RENDERBUFFER,this._importRenderbuffer(i,p,d,s);break;case e.TEXTURE:o=e.getFramebufferAttachmentParameter(i,att,e.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL),d=e.getFramebufferAttachmentParameter(i,att,e.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE),0==d&&(d=e.TEXTURE_2D),this._importTexture(i,p,d,s,o)}}this._status=e.checkFramebufferStatus(i),r.popFramebuffer(i),this.setAttachments(t)},SpiderGL.WebGL.Framebuffer.TARGET=WebGLRenderingContext.prototype.FRAMEBUFFER,SpiderGL.WebGL.Framebuffer.DEFAULT_AUTO_VIEWPORT=!0,SpiderGL.WebGL.Framebuffer.DEFAULT_ATTACHMENT_TEXTURE_LEVEL=0,SpiderGL.WebGL.Framebuffer.DEFAULT_ATTACHMENT_CUBE_MAP_FACE=WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_POSITIVE_X,SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_X=0,SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_Y=0,SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_WIDTH=-1,SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_HEIGHT=-1,SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_FORMAT=WebGLRenderingContext.prototype.RGBA,SpiderGL.WebGL.Framebuffer.DEFAULT_CLEAR_MASK=WebGLRenderingContext.prototype.COLOR_BUFFER_BIT|WebGLRenderingContext.prototype.DEPTH_BUFFER_BIT|WebGLRenderingContext.prototype.STENCIL_BUFFER_BIT,SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_TYPE=WebGLRenderingContext.prototype.UNSIGNED_BYTE,SpiderGL.WebGL.Framebuffer.unbind=function(e){e.bindFramebuffer(SpiderGL.WebGL.Framebuffer.TARGET,null)},SpiderGL.WebGL.Framebuffer._attachmentName={},SpiderGL.WebGL.Framebuffer._attachmentName[WebGLRenderingContext.prototype.COLOR_ATTACHMENT0]="color",SpiderGL.WebGL.Framebuffer._attachmentName[WebGLRenderingContext.prototype.DEPTH_ATTACHMENT]="depth",SpiderGL.WebGL.Framebuffer._attachmentName[WebGLRenderingContext.prototype.STENCIL_ATTACHMENT]="stencil",SpiderGL.WebGL.Framebuffer._attachmentName[WebGLRenderingContext.prototype.DEPTH_STENCIL_ATTACHMENT]="depthStencil",SpiderGL.WebGL.Framebuffer.prototype={_gl_deleteFramebuffer:function(e){this._h=null},_gl_isFramebuffer:function(e){},_gl_bindFramebuffer:function(e,t){},_gl_checkFramebufferStatus:function(e){},_gl_getFramebufferAttachmentParameter:function(e,t,r){},_gl_framebufferRenderbuffer:function(e,t,r,i){this._importRenderbuffer.apply(this,arguments),this._status=this._gl.checkFramebufferStatus(this._t)},_gl_framebufferTexture2D:function(e,t,r,i,n){this._importTexture.apply(this,arguments),this._status=this._gl.checkFramebufferStatus(this._t)},_gl_clear:function(e){},_gl_readPixels:function(e,t,r,i,n,a,s){},_importTexture:function(e,t,r,i,n){var a=SpiderGL.WebGL.Framebuffer._attachmentName[t];if(a){if(!i)return void delete this._attachments[a];var s=this._gl,u={attachment:t,resource:null,target:r,level:n,face:s.NONE};this._attachments[a]=u,r==s.TEXTURE_2D?u.resource=new SpiderGL.WebGL.Texture2D(s,{handle:i}):(u.resource=new SpiderGL.WebGL.TextureCubeMap(s,{handle:i}),u.face=r),this._viewport=[0,0,SpiderGL.Math.max(u.resource.width,1),SpiderGL.Math.max(u.resource.height,1)]}},_importRenderbuffer:function(e,t,r,i){var n=SpiderGL.WebGL.Framebuffer._attachmentName[t];if(n){if(!i)return void delete this._attachments[n];var a=this._gl,s={attachment:t,resource:null,target:r,level:0,face:a.NONE};this._attachments[n]=s,s.resource=new SpiderGL.WebGL.Renderbuffer(a,{handle:i}),this._viewport=[0,0,SpiderGL.Math.max(s.resource.width,1),SpiderGL.Math.max(s.resource.height,1)]}},_setAttachment:function(e,t){var r=SpiderGL.WebGL.Framebuffer._attachmentName[e];if(!r)return!1;var i=this._gl,n=!t||"resource"in t&&!t.resource;if(n){var a=this._attachments[r];return void(a&&(a.target===i.RENDERBUFFER?i.framebufferRenderbuffer(o,a.attachment,i.RENDERBUFFER,null):i.framebufferTexture2D(o,a.attachment,i.TEXTURE_2D,null,0)))}var s=i.NONE;SpiderGL.Type.instanceOf(t,WebGLTexture)?(t={resource:t},s=i.TEXTURE):SpiderGL.Type.instanceOf(t,WebGLRenderbuffer)?(t={resource:t},s=i.RENDERBUFFER):SpiderGL.Type.instanceOf(t,SpiderGL.WebGL.Texture)?(t={resource:t.handle},s=i.TEXTURE):SpiderGL.Type.instanceOf(t,SpiderGL.WebGL.Renderbuffer)&&(t={resource:t.handle},s=i.RENDERBUFFER);var u=!!t&&"undefined"!=typeof t.face;t=SpiderGL.Utility.getDefaultObject({resource:null,level:SpiderGL.WebGL.Framebuffer.DEFAULT_ATTACHMENT_TEXTURE_LEVEL,face:SpiderGL.WebGL.Framebuffer.DEFAULT_ATTACHMENT_CUBE_MAP_FACE},t);var o=this._t;switch(s){case i.TEXTURE:var d=SpiderGL.Type.instanceOf(t,SpiderGL.WebGL.TextureCubeMap)||u,p=d?t.face:i.TEXTURE_2D;i.framebufferTexture2D(o,e,p,t.resource,t.level);break;case i.RENDERBUFFER:i.framebufferRenderbuffer(o,e,i.RENDERBUFFER,t.resource)}return!0},get isReady(){return this.isComplete},get status(){return this._status},get isComplete(){return this._status===this._gl.FRAMEBUFFER_COMPLETE},get viewport(){return this._viewport.slice()},get width(){return this._viewport[2]},get height(){return this._viewport[3]},get autoViewport(){return this._autoViewport},set autoViewport(e){this._autoViewport=!!e},setAttachments:function(e){e=e||{};var t=this._gl,r=this._cb,i=this._t,n=this._h;return r.pushFramebuffer(i),t.bindFramebuffer(i,n),"color"in e&&this._setAttachment(t.COLOR_ATTACHMENT0,e.color),"depthStencil"in e?(this._setAttachment(t.DEPTH_ATTACHMENT,null),this._setAttachment(t.STENCIL_ATTACHMENT,null),this._setAttachment(t.DEPTH_STENCIL_ATTACHMENT,e.depthStencil)):"depth"in e?(this._setAttachment(t.DEPTH_STENCIL_ATTACHMENT,null),this._setAttachment(t.STENCIL_ATTACHMENT,null),this._setAttachment(t.DEPTH_ATTACHMENT,e.depth)):"stencil"in e&&(this._setAttachment(t.DEPTH_STENCIL_ATTACHMENT,null),this._setAttachment(t.DEPTH_ATTACHMENT,null),this._setAttachment(t.STENCIL_ATTACHMENT,e.stencil)),this._status=t.checkFramebufferStatus(i),r.popFramebuffer(i),this.isComplete},getAttachments:function(){var e={},t=null;for(var r in this._attachments)t=this._attachments[r],e[r]={attachment:t.attachment,resource:t.resource,target:t.target,level:t.level};return e},detachAll:function(){this.setAttachments({color:null,depthStencil:null})},get colorTarget(){var e=this._attachments.color;return e?e.resource:null},set colorTarget(e){this.setAttachments({color:e})},get depthTarget(){var e=this._attachments.depth;return e?e.resource:null},set depthTarget(e){this.setAttachments({depth:e})},get stencilTarget(){var e=this._attachments.stencil;return e?e.resource:null},set stencilTarget(e){this.setAttachments({stencil:e})},get depthStencilTarget(){var e=this._attachments.depthStencil;return e?e.resource:null},set depthStencilTarget(e){this.setAttachments({depthStencil:e})},clear:function(e){e=SpiderGL.Utility.getDefaultValue(e,SpiderGL.WebGL.Framebuffer.DEFAULT_CLEAR_MASK),this._dsa.clear(this._h,e)},readPixels:function(e,t){t=SpiderGL.Utility.getDefaultObject({x:SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_X,y:SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_Y,width:SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_WIDTH,height:SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_HEIGHT,format:SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_FORMAT,type:SpiderGL.WebGL.Framebuffer.DEFAULT_READ_PIXELS_TYPE},t),t.width<0&&(t.width=this._viewport[2]),t.height<0&&(t.height=this._viewport[3]),this._dsa.readPixels(this._h,t.x,t.y,t.width,t.height,t.format,t.type,e)},applyViewport:function(){var e=this._gl,t=this._viewport;e.viewport(t[0],t[1],t[2],t[3])},destroy:function(){this._gl.deleteFramebuffer(this._h)},bind:function(e){var t=this._gl;t.bindFramebuffer(this._t,this._h);var r=SpiderGL.Utility.getDefaultValue(e,this._autoViewport);if(r){var i=this._viewport;t.viewport(i[0],i[1],i[2],i[3])}},unbind:function(){this._gl.bindFramebuffer(this._t,null)}},SpiderGL.Type.extend(SpiderGL.WebGL.Framebuffer,SpiderGL.WebGL.ObjectGL),SpiderGL.WebGL.Program=function(e,t){if(!SpiderGL.WebGL.Context.isHijacked(e))return null;if(SpiderGL.Type.instanceOf(t,WebGLProgram)&&(t={handle:t}),t=SpiderGL.Utility.getDefaultObject({handle:null,autoLink:SpiderGL.WebGL.Program.DEFAULT_AUTO_LINK},t),SpiderGL.WebGL.ObjectGL.call(this,e,SpiderGL.WebGL.Program.TARGET,t),this._h&&this._h._spidergl&&this._h._spidergl!=this)return this._h._spidergl;var e=this._gl,r=(this._cb,this._dsa,this._h),i=!1,n="",a=!1;if(r?(a=!0,i=!!e.getProgramParameter(r,e.LINK_STATUS),n=e.getProgramInfoLog(r),n||(n="")):(r=e.createProgram(),this._h=r),r._spidergl=this,this._shaders=[],this._linked=i,this._log=n,this._autoLink=t.autoLink,this._attributes={},this._uniforms={},a)for(var s=e.getAttachedShaders(r),u=0,o=s.length;o>u;++u)this._importShader(s[u]);var d=!1;this._addShaders(t.shaders)&&(d=!0),this._setAttributes(t.attributes)&&(d=!0),d&&this._autoLink?this.link():a&&this._postLink(),this.setUniforms(t.uniforms)},SpiderGL.WebGL.Program.TARGET=WebGLRenderingContext.prototype.NONE,SpiderGL.WebGL.Program.DEFAULT_AUTO_LINK=!0,SpiderGL.WebGL.Program.unbind=function(e){e.useProgram(null)},SpiderGL.WebGL.Program._uniformSetFunctions={},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.BOOL]=function(e,t,r){e.uniform1i(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.BOOL_VEC2]=function(e,t,r){e.uniform2iv(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.BOOL_VEC3]=function(e,t,r){e.uniform3iv(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.BOOL_VEC4]=function(e,t,r){e.uniform4iv(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.INT]=function(e,t,r){e.uniform1i(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.INT_VEC2]=function(e,t,r){e.uniform2iv(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.INT_VEC3]=function(e,t,r){e.uniform3iv(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.INT_VEC4]=function(e,t,r){e.uniform4iv(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.FLOAT]=function(e,t,r){e.uniform1f(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.FLOAT_VEC2]=function(e,t,r){e.uniform2fv(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.FLOAT_VEC3]=function(e,t,r){e.uniform3fv(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.FLOAT_VEC4]=function(e,t,r){e.uniform4fv(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.FLOAT_MAT2]=function(e,t,r){e.uniformMatrix2fv(t,this.location,!1,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.FLOAT_MAT3]=function(e,t,r){e.uniformMatrix3fv(t,this.location,!1,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.FLOAT_MAT4]=function(e,t,r){e.uniformMatrix4fv(t,this.location,!1,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.SAMPLER_2D]=function(e,t,r){e.uniform1i(t,this.location,r)},SpiderGL.WebGL.Program._uniformSetFunctions[WebGLRenderingContext.prototype.SAMPLER_CUBE]=function(e,t,r){e.uniform1i(t,this.location,r)},SpiderGL.WebGL.Program.prototype={_gl_deleteProgram:function(e){this._h=null},_gl_isProgram:function(e){},_gl_useProgram:function(e){},_gl_getActiveAttrib:function(e,t){},_gl_getActiveUniform:function(e,t){},_gl_getAttachedShaders:function(e){},_gl_getAttribLocation:function(e,t){},_gl_getProgramParameter:function(e,t){},_gl_getProgramInfoLog:function(e){},_gl_getUniform:function(e,t){},_gl_getUniformLocation:function(e,t){},_gl_attachShader:function(e,t){this._importShader(t)},_gl_bindAttribLocation:function(e,t,r){},_gl_detachShader:function(e,t){if(t){var r=this._shaderHandleIndex(t);0>r||this._shaders.splice(r,1)}},_gl_linkProgram:function(e){this._postLink()},_gl_uniform1f:function(e,t){},_gl_uniform1fv:function(e,t){},_gl_uniform1i:function(e,t){},_gl_uniform1iv:function(e,t){},_gl_uniform2f:function(e,t,r){},_gl_uniform2fv:function(e,t){},_gl_uniform2i:function(e,t,r){},_gl_uniform2iv:function(e,t){},_gl_uniform3f:function(e,t,r,i){},_gl_uniform3fv:function(e,t){},_gl_uniform3i:function(e,t,r,i){},_gl_uniform3iv:function(e,t){},_gl_uniform4f:function(e,t,r,i,n){},_gl_uniform4fv:function(e,t){},_gl_uniform4i:function(e,t,r,i,n){},_gl_uniform4iv:function(e,t){},_gl_uniformMatrix2fv:function(e,t,r){},_gl_uniformMatrix3fv:function(e,t,r){},_gl_uniformMatrix4fv:function(e,t,r){},_gl_validateProgram:function(e){},_shaderHandleIndex:function(e){for(var t=0,r=this._shaders.length;r>t;++t)if(this._shaders[t].handle===e)return t;return-1},_shaderIndex:function(e){if(this._shaders.indexOf)return this._shaders.indexOf(e);for(var t=0,r=this._shaders.length;r>t;++t)if(this._shaders[t]===e)return t;return-1},_importShader:function(e){if(e&&!(this._shaderHandleIndex(e)>=0)){var t=this._gl,r=e._spidergl;if(!r){var i=t.getShaderParameter(e,t.SHADER_TYPE);switch(i){case t.VERTEX_SHADER:r=new SpiderGL.WebGL.VertexShader(t,{handle:e});break;case t.FRAGMENT_SHADER:r=new SpiderGL.WebGL.FragmentShader(t,{handle:e});break;default:return}}this._shaders.push(r)}},_updateActiveInfo:function(){var e=this._gl,t=this._h,r=0,i=null,n=null,a=null,s={};r=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(var u=0;r>u;++u)i=e.getActiveAttrib(t,u),n=i.name,a=e.getAttribLocation(t,n),s[n]={index:u,name:n,size:i.size,type:i.type,location:a};var o={};r=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(var u=0;r>u;++u)if(i=e.getActiveUniform(t,u),n=i.name,a=e.getUniformLocation(t,n),o[n]={index:u,name:n,size:i.size,type:i.type,location:a,setValue:SpiderGL.WebGL.Program._uniformSetFunctions[i.type]},i.size>1){var d=n.lastIndexOf("[0]");if(d==n.length-3)for(var p=n.slice(0,d),c=1;c<i.size;++c){var _=p+"["+c+"]";a=e.getUniformLocation(t,_),o[_]={index:u,name:_,size:i.size,type:i.type,location:a,setValue:SpiderGL.WebGL.Program._uniformSetFunctions[i.type]}}}this._attributes=s,this._uniforms=o},_postLink:function(){var e=this._gl,t=this._h;this._linked=!!e.getProgramParameter(t,e.LINK_STATUS),this._log=e.getProgramInfoLog(t),this._log||(this._log=""),this._updateActiveInfo()},_addShaders:function(e){if(!e)return!1;for(var t=this._gl,r=this._h,i=null,n=null,a=0,s=e.length;s>a;++a)i=e[a],n=null,SpiderGL.Type.instanceOf(i,SpiderGL.WebGL.Shader)&&(n=i.handle),SpiderGL.Type.instanceOf(i,WebGLShader)&&(n=i),n&&t.attachShader(r,n);return!0},_removeShaders:function(e){if(!e)return!1;for(var t=this._gl,r=this._h,i=null,n=null,a=0,s=e.length;s>a;++a)i=e[a],n=null,SpiderGL.Type.instanceOf(i,SpiderGL.WebGL.Shader)&&(n=i.handle),SpiderGL.Type.instanceOf(i,SpiderGL.WebGL.Shader)&&(n=i),n&&t.detachShader(r,n);return!0},_setAttributes:function(e){if(!e)return!1;var t=this._gl,r=this._h;for(var i in e)t.bindAttribLocation(r,e[i],i);return!0},get isReady(){return this.isLinked},get isLinked(){return this._linked},get log(){return this._log},get autoLink(){return this._autoLink},set autoLink(e){this._autoLink=!!e},addShaders:function(e,t){var r=this._addShaders(e);return r?(r=SpiderGL.Utility.getDefaultValue(t,this._autoLink),r?this.link():!0):!0},removeShaders:function(e,t){var r=this._removeShaders(e);return r?(r=SpiderGL.Utility.getDefaultValue(t,this._autoLink),r?this.link():!0):!0},hasShader:function(e){return this._shaderIndex(e)>=0},getShaders:function(){return this._shaders.slice()},link:function(){return this._gl.linkProgram(this._h),this._linked},validate:function(){var e=this._gl,t=this._h;e.validateProgram(t);var r=!!e.getProgramParameter(t,e.VALIDATE_STATUS);return r},setAttributes:function(e){return this._setAttributes(e)?this._autoLink?this.link():!0:!1},getAttributesNames:function(){var e=this._attributes,t=[];for(var r in e)t.push(e[r].name);return t},getAttributesIndices:function(){var e=this._attributes,t={};for(var r in e)t[r]=e[r].location;return t},getAttributesInfo:function(){var e=this._attributes,t=null,r={};for(var i in e)t=e[i],r[i]={index:t.index,name:t.name,size:t.size,type:t.type,location:t.location};return r},setUniforms:function(e){if(!e)return!1;var t=this._gl,r=this._cb,i=this._dsa,n=this._h;r.pushProgram(),t.useProgram(n);var a=this._uniforms,s=null;for(var u in e)s=a[u],s&&s.setValue(i,n,e[u]);return r.popProgram(),!0},getUniformsNames:function(){var e=this._uniforms,t=[];for(var r in e)t.push(e[r].name);return t},getUniformsValues:function(){var e=this._gl,t=this._h,r=this._uniforms,i={};for(var n in r)i[n]=e.getUniform(t,r[n].location);return i},getUniformsInfo:function(){var e=this._uniforms,t=null,r={};for(var i in e)t=e[i],r[i]={index:t.index,name:t.name,size:t.size,type:t.type,location:t.location};return r},destroy:function(){this._gl.deleteProgram(this._h)},bind:function(){this._gl.useProgram(this._h)},unbind:function(){this._gl.useProgram(null)}},SpiderGL.Type.extend(SpiderGL.WebGL.Program,SpiderGL.WebGL.ObjectGL),SpiderGL.WebGL.Renderbuffer=function(e,t){if(!SpiderGL.WebGL.Context.isHijacked(e))return null;if(SpiderGL.Type.instanceOf(n,WebGLRenderbuffer)&&(t={handle:t}),t=SpiderGL.Utility.getDefaultObject({handle:null},t),SpiderGL.WebGL.ObjectGL.call(this,e,SpiderGL.WebGL.Renderbuffer.TARGET,t),this._h&&this._h._spidergl&&this._h._spidergl!=this)return this._h._spidergl;var e=this._gl,r=this._cb,i=(this._dsa,this._t),n=this._h,a=e.NONE,s=0,u=0;n?(r.pushRenderbuffer(i),e.bindRenderbuffer(i,n),a=e.getRenderbufferParameter(i,e.RENDERBUFFER_INTERNAL_FORMAT),s=e.getRenderbufferParameter(i,e.RENDERBUFFER_WIDTH),u=e.getRenderbufferParameter(i,e.RENDERBUFFER_HEIGHT),r.popRenderbuffer(i)):(n=e.createRenderbuffer(),this._h=n),n._spidergl=this,this._width=s,this._height=u,this._format=a,SpiderGL.Type.isNumber(t.internalFormat)&&SpiderGL.Type.isNumber(t.width)&&SpiderGL.Type.isNumber(t.height)&&this.setStorage(t.internalFormat,t.width,t.height,t.format)},SpiderGL.WebGL.Renderbuffer.TARGET=WebGLRenderingContext.prototype.RENDERBUFFER,SpiderGL.WebGL.Renderbuffer.unbind=function(e){e.bindRenderbuffer(SpiderGL.WebGL.Renderbuffer.TARGET,null)},SpiderGL.WebGL.Renderbuffer.prototype={_gl_deleteRenderbuffer:function(e){this._h=null},_gl_isRenderbuffer:function(e){},_gl_bindRenderbuffer:function(e,t){},_gl_getRenderbufferParameter:function(e,t){},_gl_renderbufferStorage:function(e,t,r,i){this._format=t,this._width=r,this._height=i},get isReady(){return this._width>0&&this._height>0},get format(){return this._format},get width(){return this._width},get height(){return this._height},setStorage:function(e,t,r){this._dsa.renderbufferStorage(this._h,this._t,e,t,r)},destroy:function(){this._gl.deleteRenderbuffer(this._h)},bind:function(){this._gl.bindRenderbuffer(this._t,this._h)},unbind:function(){this._gl.bindRenderbuffer(this._t,null)}},SpiderGL.Type.extend(SpiderGL.WebGL.Renderbuffer,SpiderGL.WebGL.ObjectGL),
SpiderGL.WebGL.Shader=function(e,t,r,i){if(!SpiderGL.WebGL.Context.isHijacked(e))return null;if(SpiderGL.Type.instanceOf(i,WebGLShader)?i={handle:i}:SpiderGL.Type.isString(i)&&(i={source:i}),i=SpiderGL.Utility.getDefaultObject({handle:null,source:null,autoCompile:SpiderGL.WebGL.Shader.DEFAULT_AUTO_COMPILE},i),SpiderGL.WebGL.ObjectGL.call(this,e,t,i),this._h&&this._h._spidergl&&this._h._spidergl!=this)return this._h._spidergl;var e=this._gl,n=(this._cb,this._dsa,""),a=!1,s=!1,u="",o=this._h;o?(n=e.getShaderSource(o),n||(n=""),a=!!e.getShaderParameter(o,e.COMPILE_STATUS),s=!!e.getShaderParameter(o,e.DELETE_STATUS),u=e.getShaderInfoLog(o),u||(u="")):(o=e.createShader(r),this._h=o),o._spidergl=this,this._source=n,this._compiled=a,this._log=u,this._autoCompile=i.autoCompile,i.source&&this.setSource(i.source)},SpiderGL.WebGL.Shader.TARGET=WebGLRenderingContext.prototype.NONE,SpiderGL.WebGL.Shader.DEFAULT_AUTO_COMPILE=!0,SpiderGL.WebGL.Shader.unbind=function(e){},SpiderGL.WebGL.Shader.prototype={_gl_deleteShader:function(e){this._h=null},_gl_isShader:function(e){},_gl_getShaderParameter:function(e,t){},_gl_getShaderInfoLog:function(e){},_gl_getShaderSource:function(e){},_gl_compileShader:function(e){this._postCompile()},_gl_shaderSource:function(e,t){this._source=t,this._source||(this._source="")},_postCompile:function(){var e=this._gl,t=this._h;this._compiled=!!e.getShaderParameter(t,e.COMPILE_STATUS),this._log=e.getShaderInfoLog(t),this._log||(this._log="")},get isReady(){return this.isCompiled},get isCompiled(){return this._compiled},get log(){return this._log},get autoCompile(){return this._autoCompile},set autoCompile(e){this._autoCompile=!!e},setSource:function(e,t){var r=this._gl,i=this._h;r.shaderSource(i,e);SpiderGL.Utility.getDefaultValue(t,this._autoCompile);return this.compile()},get source(){return this._source},set source(e){this.setSource(e)},compile:function(){return this._gl.compileShader(this._h),this._compiled},destroy:function(){this._gl.deleteShader(this._h)},bind:function(){},unbind:function(){}},SpiderGL.Type.extend(SpiderGL.WebGL.Shader,SpiderGL.WebGL.ObjectGL),SpiderGL.WebGL.VertexShader=function(e,t){return SpiderGL.WebGL.Context.isHijacked(e)?(SpiderGL.WebGL.Shader.call(this,e,SpiderGL.WebGL.VertexShader.TARGET,e.VERTEX_SHADER,t),this._h&&this._h._spidergl&&this._h._spidergl!=this?this._h._spidergl:void 0):null},SpiderGL.WebGL.VertexShader.TARGET=WebGLRenderingContext.prototype.NONE,SpiderGL.WebGL.VertexShader.unbind=function(e){},SpiderGL.WebGL.VertexShader.prototype={},SpiderGL.Type.extend(SpiderGL.WebGL.VertexShader,SpiderGL.WebGL.Shader),SpiderGL.WebGL.FragmentShader=function(e,t){return SpiderGL.WebGL.Context.isHijacked(e)?(SpiderGL.WebGL.Shader.call(this,e,SpiderGL.WebGL.FragmentShader.TARGET,e.FRAGMENT_SHADER,t),this._h&&this._h._spidergl&&this._h._spidergl!=this?this._h._spidergl:void 0):null},SpiderGL.WebGL.FragmentShader.TARGET=WebGLRenderingContext.prototype.NONE,SpiderGL.WebGL.FragmentShader.unbind=function(e){},SpiderGL.WebGL.FragmentShader.prototype={},SpiderGL.Type.extend(SpiderGL.WebGL.FragmentShader,SpiderGL.WebGL.Shader),SpiderGL.WebGL.Texture=function(e,t,r){if(!SpiderGL.WebGL.Context.isHijacked(e))return null;if(SpiderGL.Type.instanceOf(r,WebGLTexture)?r={handle:r}:SpiderGL.Type.isString(r)&&(r={url:r}),r=SpiderGL.Utility.getDefaultObject({handle:null,magFilter:SpiderGL.WebGL.Texture.DEFAULT_MAG_FILTER,minFilter:SpiderGL.WebGL.Texture.DEFAULT_MIN_FILTER,wrapS:SpiderGL.WebGL.Texture.DEFAULT_WRAP_S,wrapT:SpiderGL.WebGL.Texture.DEFAULT_WRAP_T,flipYPolicy:SpiderGL.WebGL.Context.DEFAULT_UNPACK_FLIP_Y,premultiplyAlphaPolicy:SpiderGL.WebGL.Context.DEFAULT_UNPACK_PREMULTIPLY_ALPHA,colorspaceConversionPolicy:SpiderGL.WebGL.Context.DEFAULT_UNPACK_COLORSPACE_CONVERSION,autoMipmap:SpiderGL.WebGL.Texture.DEFAULT_AUTO_GENERATE_MIPMAP,format:e.NONE,width:0,height:0},r),SpiderGL.WebGL.ObjectGL.call(this,e,t,r),this._h&&this._h._spidergl&&this._h._spidergl!=this)return this._h._spidergl;var e=this._gl,i=this._cb,n=(this._dsa,this._t),a=this._h;a||(a=e.createTexture(),this._h=a),i.pushTexture(n),e.bindTexture(n,a),this._magFilter=e.getTexParameter(n,e.TEXTURE_MAG_FILTER),this._minFilter=e.getTexParameter(n,e.TEXTURE_MIN_FILTER),this._wrapS=e.getTexParameter(n,e.TEXTURE_WRAP_S),this._wrapT=e.getTexParameter(n,e.TEXTURE_WRAP_T),i.popTexture(n),a._spidergl=this,this._format=r.format,this._width=r.width,this._height=r.height,this._flipY=r.flipYPolicy,this._premultiplyAlpha=r.premultiplyAlphaPolicy,this._colorspaceConversion=r.colorspaceConversionPolicy,this._autoMipmap=r.autoMipmap,this._missingFaces=SpiderGL.WebGL.Texture._FACE_ALL_BITS,this.setSampler(r)},SpiderGL.WebGL.Texture.TARGET=WebGLRenderingContext.prototype.NONE,SpiderGL.WebGL.Texture.DEFAULT_BORDER=0,SpiderGL.WebGL.Texture.DEFAULT_FORMAT=WebGLRenderingContext.prototype.RGBA,SpiderGL.WebGL.Texture.DEFAULT_AUTO_GENERATE_MIPMAP=!1,SpiderGL.WebGL.Texture.DEFAULT_INTERNAL_FORMAT=WebGLRenderingContext.prototype.RGBA,SpiderGL.WebGL.Texture.DEFAULT_LEVEL=0,SpiderGL.WebGL.Texture.DEFAULT_MAG_FILTER=WebGLRenderingContext.prototype.LINEAR,SpiderGL.WebGL.Texture.DEFAULT_MIN_FILTER=WebGLRenderingContext.prototype.LINEAR,SpiderGL.WebGL.Texture.DEFAULT_TYPE=WebGLRenderingContext.prototype.UNSIGNED_BYTE,SpiderGL.WebGL.Texture.DEFAULT_WRAP_S=WebGLRenderingContext.prototype.REPEAT,SpiderGL.WebGL.Texture.DEFAULT_WRAP_T=WebGLRenderingContext.prototype.REPEAT,SpiderGL.WebGL.Texture.DEFAULT_X_OFFSET=0,SpiderGL.WebGL.Texture.DEFAULT_Y_OFFSET=0,SpiderGL.WebGL.Texture.DEFAULT_UNPACK_FLIP_Y=!0,SpiderGL.WebGL.Texture.DEFAULT_UNPACK_PREMULTIPLY_ALPHA=!1,SpiderGL.WebGL.Texture.DEFAULT_UNPACK_COLORSPACE_CONVERSION=WebGLRenderingContext.prototype.NONE,SpiderGL.WebGL.Texture.unbind=function(e){},SpiderGL.WebGL.Texture._FACE_POSITIVE_X_BIT=1,SpiderGL.WebGL.Texture._FACE_NEGATIVE_X_BIT=2,SpiderGL.WebGL.Texture._FACE_POSITIVE_Y_BIT=4,SpiderGL.WebGL.Texture._FACE_NEGATIVE_Y_BIT=8,SpiderGL.WebGL.Texture._FACE_POSITIVE_Z_BIT=16,SpiderGL.WebGL.Texture._FACE_NEGATIVE_Z_BIT=32,SpiderGL.WebGL.Texture._FACE_ALL_BITS=SpiderGL.WebGL.Texture._FACE_POSITIVE_X_BIT|SpiderGL.WebGL.Texture._FACE_NEGATIVE_X_BIT|SpiderGL.WebGL.Texture._FACE_POSITIVE_Y_BIT|SpiderGL.WebGL.Texture._FACE_NEGATIVE_Y_BIT|SpiderGL.WebGL.Texture._FACE_POSITIVE_Z_BIT|SpiderGL.WebGL.Texture._FACE_NEGATIVE_Z_BIT,SpiderGL.WebGL.Texture._faceBits={},SpiderGL.WebGL.Texture._faceBits[WebGLRenderingContext.prototype.TEXTURE_2D]=SpiderGL.WebGL.Texture._FACE_ALL_BITS,SpiderGL.WebGL.Texture._faceBits[WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP]=SpiderGL.WebGL.Texture._FACE_ALL_BITS,SpiderGL.WebGL.Texture._faceBits[WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_POSITIVE_X]=SpiderGL.WebGL.Texture._FACE_POSITIVE_X_BIT,SpiderGL.WebGL.Texture._faceBits[WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_NEGATIVE_X]=SpiderGL.WebGL.Texture._FACE_NEGATIVE_X_BIT,SpiderGL.WebGL.Texture._faceBits[WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_POSITIVE_Y]=SpiderGL.WebGL.Texture._FACE_POSITIVE_Y_BIT,SpiderGL.WebGL.Texture._faceBits[WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_NEGATIVE_Y]=SpiderGL.WebGL.Texture._FACE_NEGATIVE_Y_BIT,SpiderGL.WebGL.Texture._faceBits[WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_POSITIVE_Z]=SpiderGL.WebGL.Texture._FACE_POSITIVE_Z_BIT,SpiderGL.WebGL.Texture._faceBits[WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_NEGATIVE_Z]=SpiderGL.WebGL.Texture._FACE_NEGATIVE_Z_BIT,SpiderGL.WebGL.Texture.prototype={_gl_deleteTexture:function(e){this._h=null},_gl_isTexture:function(e){},_gl_bindTexture:function(e,t){},_gl_getTexParameter:function(e,t){},_gl_copyTexImage2D:function(e,t,r,i,n,a,s,u){0==t&&(this._format=r,this._width=a,this._height=s)},_gl_copyTexSubImage2D:function(e,t,r,i,n,a,s,u,o){},_gl_generateMipmap:function(e){},_gl_texImage2D:function(e){var t=arguments.length;6===t?0===arguments[1]&&(this._format=arguments[2],this._width=arguments[5].width,this._height=arguments[5].height):9===t&&0===arguments[1]&&(this._format=arguments[2],this._width=arguments[3],this._height=arguments[4])},_gl_texParameterf:function(e,t,r){this._setTexParameter(t,r)},_gl_texParameteri:function(e,t,r){this._setTexParameter(t,r)},_gl_texSubImage2D:function(e){},_setTexParameter:function(e,t){var r=this._gl;switch(e){case r.TEXTURE_MAG_FILTER:this._magFilter=t;break;case r.TEXTURE_MIN_FILTER:this._minFilter=t;break;case r.TEXTURE_WRAP_S:this._wrapS=t;break;case r.TEXTURE_WRAP_T:this._wrapT=t}},_setImageData:function(e,t,r){r=SpiderGL.Utility.getDefaultObject({internalFormat:SpiderGL.WebGL.Texture.DEFAULT_INTERNAL_FORMAT,border:SpiderGL.WebGL.Texture.DEFAULT_BORDER,xoffset:SpiderGL.WebGL.Texture.DEFAULT_X_OFFSET,yoffset:SpiderGL.WebGL.Texture.DEFAULT_Y_OFFSET,level:SpiderGL.WebGL.Texture.DEFAULT_LEVEL,format:SpiderGL.WebGL.Texture.DEFAULT_FORMAT,type:SpiderGL.WebGL.Texture.DEFAULT_TYPE,width:0,height:0,generateMipmap:this._autoMipmap,flipY:this._flipY,premultiplyAlpha:this._premultiplyAlpha,colorspaceConversion:this._colorspaceConversion,data:null,url:null,onCancel:null,onError:null,onProgress:null,onSuccess:null},r);var i=!!r.url,n=!1;i||(n=!r.data||SpiderGL.Type.isTypedArray(r.data));var a=!1;i||n||(a=SpiderGL.Type.instanceOf(r.data,HTMLImageElement)||SpiderGL.Type.instanceOf(r.data,HTMLCanvasElement)||SpiderGL.Type.instanceOf(r.data,HTMLVideoElement),a||"undefined"!=typeof ImageData&&(a=SpiderGL.Type.instanceOf(r.data,ImageData)));var s=this._gl,u=(this._cb,this._dsa),o=t,d=this._h,p=-1,c=-1,_=-1,f=-1,h=-1,l=-1;(n||a)&&(p=r.flipY,p!=SpiderGL.Core.DONT_CARE&&(c=s.getParameter(s.UNPACK_FLIP_Y_WEBGL),p==c?c=-1:s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,p)),_=r.premultiplyAlpha,_!=SpiderGL.Core.DONT_CARE&&(f=s.getParameter(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL),_==f?f=-1:s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,_)),h=r.colorspaceConversion,h!=SpiderGL.Core.DONT_CARE&&(l=s.getParameter(s.UNPACK_COLORSPACE_CONVERSION_WEBGL),h==l?l=-1:s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,h)));var L=!1;if(i){var S={internalFormat:r.internalFormat,border:r.border,xoffset:r.xoffset,yoffset:r.yoffset,level:r.level,format:r.format,type:r.type,generateMipmap:r.generateMipmap,flipY:r.flipY,premultiplyAlpha:r.premultiplyAlpha,colorspaceConversion:r.colorspaceConversion,data:null},g=this,G=r.onSuccess,m=new SpiderGL.IO.ImageRequest(r.url,{onCancel:r.onCancel,onError:r.onError,onProgress:r.onProgress,onSuccess:function(){S.data=m.image,e?g._setImage(t,S):g._setSubImage(t,S),G&&G()},send:!0});return!0}if(n){if(r.width<=0||r.height<=0)return!1;e?(u.texImage2D(d,o,r.level,r.internalFormat,r.width,r.height,r.border,r.format,r.type,r.data),L=!0):u.texSubImage2D(d,o,r.level,r.xoffset,r.yoffset,r.width,r.height,r.format,r.type,r.data)}else{if(!a)return!1;e?(u.texImage2D(d,o,r.level,r.internalFormat,r.format,r.type,r.data),L=!0):u.texSubImage2D(d,o,r.level,r.xoffset,r.yoffset,r.format,r.type,r.data)}return L&&(this._missingFaces&=~SpiderGL.WebGL.Texture._faceBits[o]),(n||a)&&(-1!=c&&s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,c),-1!=f&&s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,f),-1!=l&&s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,l)),r.generateMipmap&&this.generateMipmap(),!0},_setImage:function(e,t){return this._setImageData(!0,e,t)},_setSubImage:function(e,t){return this._setImageData(!1,e,t)},get isReady(){return 0==this._missingFaces&&this._width>0&&this._height>0},get flipYPolicy(){return this._flipY},set flipYPolicy(e){this._flipY=SpiderGL.Utility.getDefaultValue(e,SpiderGL.WebGL.Context.DEFAULT_UNPACK_FLIP_Y)},get premultuplyAlphaPolicy(){return this._premultuplyAlpha},set premultuplyAlphaPolicy(e){this._premultuplyAlpha=SpiderGL.Utility.getDefaultValue(e,SpiderGL.WebGL.Context.DEFAULT_UNPACK_PREMULTIPLY_ALPHA)},get colorspaceConversionPolicy(){return this._colorspaceConversion},set colorspaceConversionPolicy(e){this._colorspaceConversion=SpiderGL.Utility.getDefaultValue(e,SpiderGL.WebGL.Context.DEFAULT_UNPACK_COLORSPACE_CONVERSION)},get autoMipmap(){return this._autoMipmap},set autoMipmap(e){this._autoMipmap=e},get format(){return this._format},get width(){return this._width},get height(){return this._height},get magFilter(){return this._magFilter},set magFilter(e){e=SpiderGL.Utility.getDefaultValue(w,SpiderGL.WebGL.Texture.DEFAULT_MAG_FILTER),this._dsa.texParameteri(this._h,this._t,gl.TEXTURE_MAG_FILTER,e)},get minFilter(){return this._minFilter},set minFilter(e){e=SpiderGL.Utility.getDefaultValue(w,SpiderGL.WebGL.Texture.DEFAULT_MIN_FILTER),this._dsa.texParameteri(this._h,this._t,gl.TEXTURE_MIN_FILTER,e)},get wrapS(){return this._wrapS},set wrapS(e){e=SpiderGL.Utility.getDefaultValue(e,SpiderGL.WebGL.Texture.DEFAULT_WRAP_S),this._dsa.texParameteri(this._h,this._t,gl.TEXTURE_WRAP_S,e)},get wrapT(){return this._wrapT},set wrapT(e){e=SpiderGL.Utility.getDefaultValue(e,SpiderGL.WebGL.Texture.DEFAULT_WRAP_T),this._dsa.texParameteri(this._h,this._t,gl.TEXTURE_WRAP_T,e)},setSampler:function(e){if(!e)return!1;var t=this._gl,r=this._cb,i=(this._dsa,this._t),n=this._h;r.pushTexture(i),t.bindTexture(i,n);var a=0;return"magFilter"in e&&(a=SpiderGL.Utility.getDefaultValue(e.magFilter,SpiderGL.WebGL.Texture.DEFAULT_MAG_FILTER),t.texParameteri(i,t.TEXTURE_MAG_FILTER,a)),"minFilter"in e&&(a=SpiderGL.Utility.getDefaultValue(e.minFilter,SpiderGL.WebGL.Texture.DEFAULT_MIN_FILTER),t.texParameteri(i,t.TEXTURE_MIN_FILTER,a)),"wrapS"in e&&(a=SpiderGL.Utility.getDefaultValue(e.wrapS,SpiderGL.WebGL.Texture.DEFAULT_WRAP_S),t.texParameteri(i,t.TEXTURE_WRAP_S,a)),"wrapT"in e&&(a=SpiderGL.Utility.getDefaultValue(e.wrapT,SpiderGL.WebGL.Texture.DEFAULT_WRAP_T),t.texParameteri(i,t.TEXTURE_WRAP_T,a)),r.popTexture(i),!0},getSampler:function(){return{magFilter:this._magFilter,minFilter:this._minFilter,wrapS:this._wrapS,wrapT:this._wrapT}},generateMipmap:function(){0==this._missingFaces&&this._dsa.generateMipmap(this._h,this._t)},destroy:function(){this._gl.deleteTexture(this._h)},bind:function(e){var t=this._gl,r=(this._cb,this._dsa);"undefined"==typeof e?t.bindTexture(this._t,this._h):r.bindTexture(t.TEXTURE0+e,this._t,this._h)},unbind:function(e){var t=this._gl,r=(this._cb,this._dsa);"undefined"==typeof e?t.bindTexture(this._t,null):r.bindTexture(t.TEXTURE0+e,this._t,null)}},SpiderGL.Type.extend(SpiderGL.WebGL.Texture,SpiderGL.WebGL.ObjectGL),SpiderGL.WebGL.Texture2D=function(e,t){return SpiderGL.WebGL.Context.isHijacked(e)?(SpiderGL.WebGL.Texture.call(this,e,SpiderGL.WebGL.Texture2D.TARGET,t),this._h&&this._h._spidergl&&this._h._spidergl!=this?this._h._spidergl:(t=t||{},SpiderGL.Type.instanceOf(t,WebGLTexture)?t={handle:t}:SpiderGL.Type.isString(t)&&(t={url:t}),void(("url"in t||"data"in t||"width"in t&&"height"in t)&&this.setImage(t)))):null},SpiderGL.WebGL.Texture2D.TARGET=WebGLRenderingContext.prototype.TEXTURE_2D,SpiderGL.WebGL.Texture2D.unbind=function(e,t){var r=(e.getExtension("SGL_current_binding"),e.getExtension("SGL_direct_state_access"));"undefined"==typeof t?e.bindTexture(SpiderGL.WebGL.Texture2D.TARGET,null):r.bindTexture(e.TEXTURE0+t,SpiderGL.WebGL.Texture2D.TARGET,null)},SpiderGL.WebGL.Texture2D.prototype={setImage:function(e){return this._setImage(this._t,e)},setSubImage:function(e){return this._setSubImage(this._t,e)}},SpiderGL.Type.extend(SpiderGL.WebGL.Texture2D,SpiderGL.WebGL.Texture),SpiderGL.WebGL.TextureCubeMap=function(e,t){if(!SpiderGL.WebGL.Context.isHijacked(e))return null;if(SpiderGL.WebGL.Texture.call(this,e,SpiderGL.WebGL.TextureCubeMap.TARGET,t),this._h&&this._h._spidergl&&this._h._spidergl!=this)return this._h._spidergl;t=t||{},SpiderGL.Type.instanceOf(t,WebGLTexture)?t={handle:t}:SpiderGL.Type.isString(t)&&(t={url:t});var r=SpiderGL.WebGL.TextureCubeMap._faceTargets;if(t.url){var i=t.url,n=t.onSuccess;n&&(t.onSuccess=function(){var e=6;return function(){--e,0==e&&n.apply(t,null)}}());for(var a=0;6>a;++a)t.url=i[a],this.setImage(r[a],t);t.onSuccess=n}else if(t.data)for(var s=t.data,a=0;6>a;++a)t.data=s[a],this.setImage(r[a],t);else if(t.width>0&&t.height>0)for(var a=0;6>a;++a)this.setImage(r[a],t)},SpiderGL.WebGL.TextureCubeMap.TARGET=WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP,SpiderGL.WebGL.TextureCubeMap.unbind=function(e,t){var r=(e.getExtension("SGL_current_binding"),e.getExtension("SGL_direct_state_access"));"undefined"==typeof t?e.bindTexture(SpiderGL.WebGL.TextureCubeMap.TARGET,null):r.bindTexture(e.TEXTURE0+t,SpiderGL.WebGL.TextureCubeMap.TARGET,null)},SpiderGL.WebGL.TextureCubeMap._faceTargets=[WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_POSITIVE_X,WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_NEGATIVE_X,WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_POSITIVE_Y,WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_NEGATIVE_Y,WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_POSITIVE_Z,WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_NEGATIVE_Z],SpiderGL.WebGL.TextureCubeMap.prototype={setImage:function(e,t){return this._setImage(e,t)},setSubImage:function(e,t){return this._setSubImage(e,t)}},SpiderGL.Type.extend(SpiderGL.WebGL.TextureCubeMap,SpiderGL.WebGL.Texture),SpiderGL.Model={},SpiderGL.Model.Model=function(e,t,r){SpiderGL.Core.ObjectBase.call(this),r=SpiderGL.Utility.getDefaultObject({},r),t&&"vertices"in t&&(t=SpiderGL.Model.Model._createSimpleDescriptor(t)),this._descriptor=SpiderGL.Model.Model._fixDescriptor(t),this._gl=null,this._renderData={},e&&(this.updateGL(e,r),this.updateRenderData())},SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_SIZE=3,SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_TYPE=SpiderGL.Type.FLOAT32,SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_NORMALIZED=!1,SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_STRIDE=0,SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_OFFSET=0,SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_MODE=SpiderGL.Type.TRIANGLES,SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_FIRST=0,SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_COUNT=-1,SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_TYPE=SpiderGL.Type.UINT16,SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_OFFSET=0,SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_VERTEX_MAP={},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_VERTEX_MAP.position={size:3,type:SpiderGL.Type.FLOAT32,normalized:!1,semantic:"POSITION",index:0,value:[0,0,0,1]},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_VERTEX_MAP.normal={size:3,type:SpiderGL.Type.FLOAT32,normalized:!1,semantic:"NORMAL",index:0,value:[0,0,1,0]},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_VERTEX_MAP.color={size:4,type:SpiderGL.Type.UINT8,normalized:!0,semantic:"COLOR",index:0,value:[0,0,0,255]},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_VERTEX_MAP.texcoord={size:2,type:SpiderGL.Type.FLOAT32,normalized:!1,semantic:"TEXCOORD",index:0,value:[0,0,0,1]},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_VERTEX_MAP.user={size:3,type:SpiderGL.Type.FLOAT32,normalized:!1,semantic:"USER",index:0,value:[0,0,0,1]},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP={},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP.triangles={mode:SpiderGL.Type.TRIANGLES,type:SpiderGL.Type.UINT16,count:-1,semantic:"FILL"},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP.triangleStrip={mode:SpiderGL.Type.TRIANGLE_STRIP,type:SpiderGL.Type.UINT16,count:-1,semantic:"FILL"},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP.triangleFan={mode:SpiderGL.Type.TRIANGLE_FAN,type:SpiderGL.Type.UINT16,count:-1,semantic:"FILL"},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP.lines={mode:SpiderGL.Type.LINES,type:SpiderGL.Type.UINT16,count:-1,semantic:"LINE"},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP.lineStrip={mode:SpiderGL.Type.LINE_STRIP,type:SpiderGL.Type.UINT16,count:-1,semantic:"LINE"},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP.lineLoop={mode:SpiderGL.Type.LINE_LOOP,type:SpiderGL.Type.UINT16,count:-1,semantic:"LINE"},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP.points={mode:SpiderGL.Type.POINTS,type:SpiderGL.Type.UINT16,count:-1,semantic:"POINT"},SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP.user={mode:SpiderGL.Type.TRIANGLES,type:SpiderGL.Type.UINT16,count:-1,semantic:"FILL"},SpiderGL.Model.Model._fixDescriptor=function(e){return e=SpiderGL.Utility.getDefaultObject({version:"0.0.0.1 EXP",meta:null,data:null,access:null,semantic:null,logic:null},e),e.meta=SpiderGL.Model.Model._fixDescriptorMeta(e.meta),e.data=SpiderGL.Model.Model._fixDescriptorData(e.data),e.access=SpiderGL.Model.Model._fixDescriptorAccess(e.access),e.semantic=SpiderGL.Model.Model._fixDescriptorSemantic(e.semantic),e.logic=SpiderGL.Model.Model._fixDescriptorLogic(e.logic),e},SpiderGL.Model.Model._fixDescriptorMeta=function(e){return e=SpiderGL.Utility.getDefaultObject({author:null,date:null,description:null},e)},SpiderGL.Model.Model._fixDescriptorData=function(e){return e=SpiderGL.Utility.getDefaultObject({vertexBuffers:null,indexBuffers:null},e),e.vertexBuffers=SpiderGL.Model.Model._fixDescriptorDataVertexBuffers(e.vertexBuffers),e.indexBuffers=SpiderGL.Model.Model._fixDescriptorDataIndexBuffers(e.indexBuffers),e},SpiderGL.Model.Model._fixDescriptorDataVertexBuffers=function(e){e=SpiderGL.Utility.getDefaultObject({},e);for(var t in e)e[t]=SpiderGL.Model.Model._fixDescriptorDataVertexBuffer(e[t]);return e},SpiderGL.Model.Model._fixDescriptorDataVertexBuffer=function(e){return SpiderGL.Model.Model._fixDescriptorDataBuffer(e)},SpiderGL.Model.Model._fixDescriptorDataIndexBuffers=function(e){e=SpiderGL.Utility.getDefaultObject({},e);for(var t in e)e[t]=SpiderGL.Model.Model._fixDescriptorDataIndexBuffer(e[t]);return e},SpiderGL.Model.Model._fixDescriptorDataIndexBuffer=function(e){return SpiderGL.Model.Model._fixDescriptorDataBuffer(e)},SpiderGL.Model.Model._fixDescriptorDataBuffer=function(e){return e=SpiderGL.Utility.getDefaultObject({type:SpiderGL.Type.NO_TYPE,glType:WebGLRenderingContext.prototype.NONE,untypedArray:null,typedArray:null,glBuffer:null},e)},SpiderGL.Model.Model._fixDescriptorAccess=function(e){return e=SpiderGL.Utility.getDefaultObject({vertexStreams:null,primitiveStreams:null},e),e.vertexStreams=SpiderGL.Model.Model._fixDescriptorAccessVertexStreams(e.vertexStreams),e.primitiveStreams=SpiderGL.Model.Model._fixDescriptorAccessPrimitiveStreams(e.primitiveStreams),e},SpiderGL.Model.Model._fixDescriptorAccessVertexStreams=function(e){e=SpiderGL.Utility.getDefaultObject({},e);for(var t in e)e[t]=SpiderGL.Model.Model._fixDescriptorAccessVertexStream(e[t]);return e},SpiderGL.Model.Model._fixDescriptorAccessVertexStream=function(e){return e=SpiderGL.Utility.getDefaultObject({buffer:null,size:SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_SIZE,type:SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_TYPE,glType:SpiderGL.Type.typeToGL(SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_TYPE),normalized:SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_NORMALIZED,stride:SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_STRIDE,offset:SpiderGL.Model.Model.DEFAULT_VERTEX_STREAM_OFFSET},e)},SpiderGL.Model.Model._fixDescriptorAccessPrimitiveStreams=function(e){e=SpiderGL.Utility.getDefaultObject({},e);for(var t in e)e[t]=SpiderGL.Model.Model._fixDescriptorAccessPrimitiveStream(e[t]);return e},SpiderGL.Model.Model._fixDescriptorAccessPrimitiveStream=function(e){return e=SpiderGL.Utility.getDefaultObject({buffer:null,mode:SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_MODE,first:SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_FIRST,count:SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_COUNT,type:SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_TYPE,glType:SpiderGL.Type.typeToGL(SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_TYPE),offset:SpiderGL.Model.Model.DEFAULT_PRIMITIVE_STREAM_OFFSET},e)},SpiderGL.Model.Model._fixDescriptorSemantic=function(e){return e=SpiderGL.Utility.getDefaultObject({bindings:null,chunks:null},e),e.bindings=SpiderGL.Model.Model._fixDescriptorSemanticBindings(e.bindings),e.chunks=SpiderGL.Model.Model._fixDescriptorSemanticChunks(e.chunks),e},SpiderGL.Model.Model._fixDescriptorSemanticBindings=function(e){e=SpiderGL.Utility.getDefaultObject({},e);for(var t in e)e[t]=SpiderGL.Model.Model._fixDescriptorSemanticBinding(e[t]);return e},SpiderGL.Model.Model._fixDescriptorSemanticBinding=function(e){return e=SpiderGL.Utility.getDefaultObject({vertexStreams:null,primitiveStreams:null},e),e.vertexStreams=SpiderGL.Model.Model._fixDescriptorSemanticBindingVertexStreams(e.vertexStreams),e.primitiveStreams=SpiderGL.Model.Model._fixDescriptorSemanticBindingPrimitiveStreams(e.primitiveStreams),e},SpiderGL.Model.Model._fixDescriptorSemanticBindingVertexStreams=function(e){e=SpiderGL.Utility.getDefaultObject({},e);for(var t in e)e[t]=SpiderGL.Model.Model._fixDescriptorSemanticBindingVertexStream(e[t]);return e},SpiderGL.Model.Model._fixDescriptorSemanticBindingVertexStream=function(e){return e?SpiderGL.Type.isArray(e)?e.slice():[e]:null},SpiderGL.Model.Model._fixDescriptorSemanticBindingPrimitiveStreams=function(e){e=SpiderGL.Utility.getDefaultObject({},e);for(var t in e)e[t]=SpiderGL.Model.Model._fixDescriptorSemanticBindingPrimitiveStream(e[t]);return e},SpiderGL.Model.Model._fixDescriptorSemanticBindingPrimitiveStream=function(e){return e?SpiderGL.Type.isArray(e)?e.slice():[e]:null},SpiderGL.Model.Model._fixDescriptorSemanticChunks=function(e){e=SpiderGL.Utility.getDefaultObject({},e);for(var t in e)e[t]=SpiderGL.Model.Model._fixDescriptorSemanticChunk(e[t]);return e},SpiderGL.Model.Model._fixDescriptorSemanticChunk=function(e){return e=SpiderGL.Utility.getDefaultObject({techniques:null},e),e.techniques=SpiderGL.Model.Model._fixDescriptorSemanticChunkTechniques(e.techniques),e},SpiderGL.Model.Model._fixDescriptorSemanticChunkTechniques=function(e){e=SpiderGL.Utility.getDefaultObject({},e);for(var t in e)e[t]=SpiderGL.Model.Model._fixDescriptorSemanticChunkTechnique(e[t]);return e},SpiderGL.Model.Model._fixDescriptorSemanticChunkTechnique=function(e){return e=SpiderGL.Utility.getDefaultObject({binding:null},e)},SpiderGL.Model.Model._fixDescriptorLogic=function(e){return e=SpiderGL.Utility.getDefaultObject({parts:null},e),e.parts=SpiderGL.Model.Model._fixDescriptorLogicParts(e.parts),e},SpiderGL.Model.Model._fixDescriptorLogicParts=function(e){e=SpiderGL.Utility.getDefaultObject({},e);for(var t in e)e[t]=SpiderGL.Model.Model._fixDescriptorLogicPart(e[t]);return e},SpiderGL.Model.Model._fixDescriptorLogicPart=function(e){return e=SpiderGL.Utility.getDefaultObject({chunks:null},e),e.chunks=SpiderGL.Model.Model._fixDescriptorLogicPartChunks(e.chunks),e},SpiderGL.Model.Model._fixDescriptorLogicPartChunks=function(e){return e?SpiderGL.Type.isArray(e)?e.slice():[e]:null},SpiderGL.Model.Model._createSimpleDescriptor=function(e){e=SpiderGL.Utility.getDefaultObject({vertices:null,primitives:null,options:null},e);var t="mainBinding",r="mainChunk",i="mainPart",n="VertexBuffer",a="IndexBuffer",s={data:{vertexBuffers:{},indexBuffers:{}},access:{vertexStreams:{},primitiveStreams:{}},semantic:{bindings:{},chunks:{}},logic:{parts:{}}},u={vertexStreams:{},primitiveStreams:{}};s.semantic.bindings[t]=u;var o={techniques:{common:{binding:t}}};s.semantic.chunks[r]=o;var d={chunks:[r]};s.logic.parts[i]=d;var p=-1,c=!1,_=!1;for(var f in e.vertices){var h=e.vertices[f];if(h){(SpiderGL.Type.isArray(h)||SpiderGL.Type.isTypedArray(h)||SpiderGL.Type.instanceOf(h,ArrayBuffer))&&(h={data:h});var l=SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_VERTEX_MAP[f],L=null;l?L=l.semantic:(l=SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_VERTEX_MAP.user,L=f.toUpperCase());var S=SpiderGL.Utility.getDefaultObject({size:l.size,type:l.type,normalized:l.normalized,semantic:L,index:l.index,data:null,value:l.value.slice()},h),g={buffer:null,size:S.size,type:S.type,normalized:S.normalized,stride:0,offset:0,value:S.value.slice()};if(S.data){var G={type:S.type},m=0;if(SpiderGL.Type.isArray(S.data))G.untypedArray=S.data,m=G.untypedArray.length/g.size;else{if(!SpiderGL.Type.isTypedArray(h)&&!SpiderGL.Type.instanceOf(h,ArrayBuffer))continue;G.typedArray=S.data,m=(G.typedArray.byteLength-g.offset)/(g.size*SpiderGL.Type.typeSize(g.type))}m=SpiderGL.Math.floor(m),c=!0,p=p>=0?SpiderGL.Math.min(p,m):m;var b=f+n;s.data.vertexBuffers[b]=G,g.buffer=b}else _=!0;var T=f;s.access.vertexStreams[T]=g;var M=new Array(S.index+1);M[S.index]=T,u.vertexStreams[S.semantic]=M}}var E=0;c?E=p:_&&(E=1);var v=e.primitives;if(SpiderGL.Type.isString(v)&&(v=[v]),SpiderGL.Type.isArray(v)){var x=v;v={};for(var y=0,A=x.length;A>y;++y){var R=x[y];SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP[R]&&(v[R]={})}}for(var f in v){var h=v[f];if(h){(SpiderGL.Type.isArray(h)||SpiderGL.Type.isTypedArray(h)||SpiderGL.Type.instanceOf(h,ArrayBuffer))&&(h={data:h});var l=SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP[f];l||(l=SpiderGL.Model.Model.DEFAULT_SIMPLE_MODEL_PRIMITIVE_MAP.user);var S=SpiderGL.Utility.getDefaultObject({mode:l.mode,type:l.type,count:l.count>=0?l.count:E,semantic:l.semantic},h),g={buffer:null,mode:S.mode,first:0,count:S.count,type:S.type,offset:0};if(S.data){var G={type:S.type},m=0;if(SpiderGL.Type.isArray(S.data))G.untypedArray=S.data,m=G.untypedArray.length;else{if(!SpiderGL.Type.isTypedArray(h)&&!SpiderGL.Type.instanceOf(h,ArrayBuffer))continue;G.typedArray=S.data,m=(G.typedArray.byteLength-g.offset)/SpiderGL.Type.typeSize(g.type)}m=SpiderGL.Math.floor(m);var b=f+a;s.data.indexBuffers[b]=G,g.buffer=b,g.count=m}var T=f;s.access.primitiveStreams[T]=g;var M=new Array(1);M[0]=T,u.primitiveStreams[S.semantic]=M}}return s},SpiderGL.Model.Model.prototype={get descriptor(){return this._descriptor},get isReady(){return!!this._descriptor},get gl(){return this._gl},get renderData(){return this._renderData},updateTypedArrays:function(){var e=this._descriptor;if(!e)return!1;var t=null,r=null,i=e.data.vertexBuffers;for(var n in i)t=i[n],t.untypedArray&&(r=SpiderGL.Type.typeToTypedArrayConstructor(t.type),t.typedArray=new r(t.untypedArray));var a=e.data.indexBuffers;for(var n in a)t=a[n],t.untypedArray&&(r=SpiderGL.Type.typeToTypedArrayConstructor(t.type),t.typedArray=new r(t.untypedArray));return!0},updateGL:function(e,t){if(!e)return!1;var r=this._descriptor;if(!r)return!1;this._gl=e;var i=null,n=null,a=SpiderGL.Utility.getDefaultObject({data:null,usage:SpiderGL.Core.DEFAULT},t);a.data=null;for(var s in r.data.vertexBuffers)i=r.data.vertexBuffers[s],a.data=i.typedArray,a.data||(n=SpiderGL.Type.typeToTypedArrayConstructor(i.type),a.data=new n(i.untypedArray)),i.glBuffer&&(i.glBuffer.destroy(),i.glBuffer=null),i.glBuffer=new SpiderGL.WebGL.VertexBuffer(e,a);for(var s in r.data.indexBuffers)i=r.data.indexBuffers[s],a.data=i.typedArray,a.data||(n=SpiderGL.Type.typeToTypedArrayConstructor(i.type),a.data=new n(i.untypedArray)),i.glBuffer&&(i.glBuffer.destroy(),i.glBuffer=null),i.glBuffer=new SpiderGL.WebGL.IndexBuffer(e,a);var u=null;for(var s in r.access.vertexStreams)u=r.access.vertexStreams[s],u.glType=SpiderGL.Type.typeToGL(u.type);for(var s in r.access.primitiveStreams)u=r.access.primitiveStreams[s],u.glMode=SpiderGL.Type.primitiveToGL(u.mode),u.glType=SpiderGL.Type.typeToGL(u.type);return!0},destroyGL:function(){var e=this._descriptor;if(!e)return!1;var t=null;for(var r in e.data.vertexBuffers)t=e.data.vertexBuffers[r],t.glBuffer&&(t.glBuffer.destroy(),t.glBuffer=null);for(var r in e.data.indexBuffers)t=e.data.indexBuffers[r],t.glBuffer&&(t.glBuffer.destroy(),t.glBuffer=null)},updateRenderData:function(){var e=this._descriptor;if(!e)return!1;var t={partMap:{}};for(var r in e.logic.parts){var i=e.logic.parts[r],n=i.chunks,a={};t.partMap[r]=a;for(var s=0,u=n.length;u>s;++s){var o=n[s],d=e.semantic.chunks[o],p={};a[o]=p;var c=d.techniques;for(var _ in c){var f=c[_],h={vertexStreams:{buffered:[],constant:[]},primitiveStreams:{}};p[_]=h;var l=e.semantic.bindings[f.binding],L=l.vertexStreams,S={};for(var g in L)for(var G=L[g],m=0,b=G.length;b>m;++m){var T=G[m],M=e.access.vertexStreams[T],E={semantic:g,index:m,stream:M},v=M.buffer;v?(S[v]=S[v]||[],S[v].push(E)):h.vertexStreams.constant.push(E)}for(var v in S){var x={buffer:e.data.vertexBuffers[v],streams:S[v].slice()};h.vertexStreams.buffered.push(x)}var L=l.primitiveStreams;for(var g in L){var S={},y={buffered:[],array:[]};h.primitiveStreams[g]=y;for(var G=L[g],m=0,b=G.length;b>m;++m){
var T=G[m],M=e.access.primitiveStreams[T],v=M.buffer;v?(S[v]=S[v]||[],S[v].push(M)):y.array.push(M)}for(var v in S){var x={buffer:e.data.indexBuffers[v],streams:S[v].slice()};y.buffered.push(x)}}}}}this._renderData=t}},SpiderGL.Type.extend(SpiderGL.Model.Model,SpiderGL.Core.ObjectBase),SpiderGL.Model.Technique=function(e,t,r){SpiderGL.Core.ObjectBase.call(this),r=SpiderGL.Utility.getDefaultObject({},r),t&&"vertexShader"in t&&"fragmentShader"in t&&(t=SpiderGL.Model.Technique._createSimpleDescriptor(e,t)),this._descriptor=SpiderGL.Model.Technique._fixDescriptor(t),this._gl=this._descriptor.program.gl,this._renderData={},e&&this.updateRenderData()},SpiderGL.Model.Technique._fixDescriptor=function(e){return e=SpiderGL.Utility.getDefaultObject({name:"common",program:null,semantic:{}},e),e.vertexStreams&&(e.semantic.vertexStreams=e.vertexStreams,delete e.vertexStreams),e.globals&&(e.semantic.globals=e.globals,delete e.globals),e.semantic=SpiderGL.Model.Technique._fixSemantic(e.program,e.semantic),e},SpiderGL.Model.Technique._fixSemantic=function(e,t){return t=SpiderGL.Utility.getDefaultObject({vertexStreams:null,globals:null},t),t.vertexStreams=SpiderGL.Model.Technique._fixVertexStreams(e,t.vertexStreams),t.globals=SpiderGL.Model.Technique._fixGlobals(e,t.globals),t},SpiderGL.Model.Technique._fixVertexStreams=function(e,t){for(var r="0123456789",i=e.getAttributesNames(),n={},a=0,s=i.length;s>a;++a){for(var u=i[a],o="",d="",p=u.length-1;p>=0;--p){var c=u.charAt(p);if(-1==r.indexOf(c,0)){o=u.substring(0,p+1);break}d=c+d}var _=d.length>0?parseInt(d):0,f=o.length;if(f>=2&&"a"==o.charAt(0)){var c=o.charAt(1);"_"==c&&f>2?o=o.substring(2):c==o.charAt(1).toUpperCase()&&(o=o.substring(1))}var h=o.toUpperCase();n[u]={semantic:h,index:_,value:[0,0,0,1]}}var l={};for(var L in t){var S=n[L];if(S){var g=t[L];SpiderGL.Type.isString(g)?g={semantic:g}:SpiderGL.Type.isArray(g)||SpiderGL.Type.isTypedArray(g)?g={value:g}:SpiderGL.Type.isNumber(g)&&(g={value:[g,g,g,g]}),l[L]=SpiderGL.Utility.getDefaultObject({semantic:S.semantic,index:S.index,value:S.value},g)}}return t=SpiderGL.Utility.getDefaultObject(n,l)},SpiderGL.Model.Technique._fixGlobals=function(e,t){var r=e.getUniformsValues(),i={};for(var n in r){var a=n,s=a.length;if(s>=2&&"u"==a.charAt(0)){var u=a.charAt(1);"_"==u&&s>2?a=a.substring(2):u==a.charAt(1).toUpperCase()&&(a=a.substring(1))}var o=a.toUpperCase();i[n]={semantic:o,value:r[n]}}return t=SpiderGL.Utility.getDefaultObject(i,t)},SpiderGL.Model.Technique._createSimpleDescriptor=function(e,t){t=SpiderGL.Utility.getDefaultObject({name:"common",vertexShader:null,fragmentShader:null,attributes:null,uniforms:null,semantic:{},vertexStreams:null,globals:null,options:null},t),t.vertexStreams&&(t.semantic.vertexStreams=t.vertexStreams,delete t.vertexStreams),t.globals&&(t.semantic.globals=t.globals,delete t.globals);var r={name:t.name,program:null,semantic:t.semantic};if(!e)return r;var i=t.vertexShader,n=t.fragmentShader;if(!i||!n)return r;if(SpiderGL.Type.isString(i))i=new SpiderGL.WebGL.VertexShader(e,i);else if(!SpiderGL.Type.instanceOf(i,SpiderGL.WebGL.VertexShader))return r;if(SpiderGL.Type.isString(n))n=new SpiderGL.WebGL.FragmentShader(e,n);else if(!SpiderGL.Type.instanceOf(n,SpiderGL.WebGL.FragmentShader))return r;var a=new SpiderGL.WebGL.Program(e,{shaders:[i,n],attributes:t.attributes,uniforms:t.uniforms});return r.program=a,r},SpiderGL.Model.Technique.prototype={get descriptor(){return this._descriptor},get isReady(){return!!this._descriptor},get gl(){return this._gl},get name(){return this._descriptor.name},get renderData(){return this._renderData},get program(){return this._descriptor.program},setUniforms:function(e){this._descriptor.program.setUniforms(e)},updateRenderData:function(){var e=this._descriptor,t={};this._renderData=t;var r={};t.attributesMap=r;var i=e.program.getAttributesIndices();for(var n in e.semantic.vertexStreams){var a=e.semantic.vertexStreams[n],s=a.semantic,u=r[s];u||(u=[],r[s]=u),u[a.index]={index:i[n],value:a.value}}var o={};t.globalsMap=o;for(var d in e.semantic.globals){var a=e.semantic.globals[d];o[a.semantic]={name:d,value:a.value}}}},SpiderGL.Model.ModelRenderer=function(e){this._gl=e,this._vertexAttributesCount=e.getParameter(e.MAX_VERTEX_ATTRIBS),this._textureUnitsCount=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this._internalFramebuffer=new SpiderGL.WebGL.Framebuffer(e),this._reset()},SpiderGL.Model.ModelRenderer.prototype={_reset:function(){this._technique=null,this._model=null,this._partName=null,this._chunkName=null,this._primMode=null,this._framebuffer=null,this._inBegin=!1,this._enabledArrays=[],this._boundTextures=[],this._attribValues=[],this._primitiveStreams=[],this._techniqueDirty=!0,this._modelDirty=!0,this._modelPartDirty=!0,this._modelChunkDirty=!0,this._primModeDirty=!0,this._framebufferDirty=!0,this._viewportDirty=!0,this._dirty=!0},_resetContext:function(){for(var e=this._gl,t=0,r=this._vertexAttributesCount;r>t;++t)e.disableVertexAttribArray(t);for(var t=this._textureUnitsCount-1;t>=0;--t)e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,null),e.bindTexture(e.TEXTURE_CUBE_MAP,null);SpiderGL.WebGL.VertexBuffer.unbind(e),SpiderGL.WebGL.IndexBuffer.unbind(e),SpiderGL.WebGL.Program.unbind(e),SpiderGL.WebGL.Framebuffer.unbind(e)},_update:function(){if(!this._dirty)return!0;var e=this._gl;if(this._techniqueDirty){var t=this._technique;if(!t)return!1;var r=t.renderData,i=r.attributesMap,n=[];for(var a in i){var s=i[a];for(var u in s){var o=s[u],d=null;o&&(d={index:o.index,value:o.value}),n.push(d)}}this._attribValues=n,t.program.bind(),this._techniqueDirty=!1}if(this._modelDirty){var p=this._model;if(!p)return!1;for(var n=this._attribValues,u=0,c=n.length;c>u;++u){var d=n[u];d&&e.vertexAttrib4fv(d.index,d.value)}var _=p.renderData,t=this._technique;if(!t)return!1;var r=t.renderData;if(!r)return!1;var i=r.attributesMap;if(this._modelPartDirty){var f=this._partName;if(!f)return!1;this._modelPartDirty=!1}if(this._modelChunkDirty){var h=this._chunkName;if(!h)return!1;var l=_.partMap[this._partName];if(!l)return!1;var L=l[h];if(!L)return!1;var S=L[t.name];if(S||(S=L.common),!S)return!1;for(var g=this._enabledArrays,u=0,c=g.length;c>u;++u)e.disableVertexAttribArray(g[u]);g=[];for(var G=S.vertexStreams.buffered,u=0,c=G.length;c>u;++u){var m=G[u],b=m.buffer.glBuffer;b.bind();for(var T=m.streams,M=0,E=T.length;E>M;++M){var v=T[M];if(i[v.semantic]&&i[v.semantic][v.index]){var x=i[v.semantic][v.index].index,y=v.stream;y.index=x,g.push(x),b.vertexAttribPointer(y)}}}this._enabledArrays=g;for(var T=S.vertexStreams.constant,M=0,c=T.length;c>M;++M){var v=T[M];if(i[v.semantic]&&i[v.semantic][v.index]){var x=i[v.semantic][v.index].index,y=v.stream;e.vertexAttrib4fv(x,y.value)}}this._modelChunkDirty=!1}if(this._primModeDirty){var A=this._primMode;if(!A)return!1;var l=_.partMap[this._partName];if(!l)return!1;var L=l[this._chunkName];if(!L)return!1;var S=L[t.name];if(S||(S=L.common),!S)return!1;var R=S.primitiveStreams[A];if(!R)return!1;this._primitiveStreams=R,this._primModeDirty=!1}this._modelDirty=!1}return this._framebufferDirty&&(this._framebuffer?this._framebuffer.bind():SpiderGL.WebGL.Framebuffer.unbind(e),this._framebufferDirty=!1),this._viewportDirty&&(this._framebuffer&&this._framebuffer.autoViewport&&this._framebuffer.applyViewport(),this._viewportDirty=!1),this._dirty=!1,!0},get gl(){return this._gl},get isValid(){return!!this._gl},destroy:function(){this.end(),this._internalFramebuffer.destroy(),this._internalFramebuffer=null,this._gl=null},begin:function(){this._inBegin||(this._resetContext(),this._inBegin=!0)},end:function(){if(this._inBegin){this._inBegin=!1;for(var e=this._gl,t=this._enabledArrays,r=0,i=t.length;i>r;++r)e.disableVertexAttribArray(t[r]);for(var n=this._boundTextures,r=0,i=n.length;i>r;++r){var a=n[r];a&&(a.target==e.TEXTURE_2D?SpiderGL.WebGL.Texture2D.unbind(e,a.unit):a.target==e.TEXTURE_CUBE_MAP&&SpiderGL.WebGL.TextureCubeMap.unbind(e,a.unit))}this._framebuffer&&SpiderGL.WebGL.Framebuffer.unbind(this._gl),this._internalFramebuffer.detachAll(),this._reset(),this._resetContext()}},get isInBegin(){return this._inBegin},setTechnique:function(e){this._inBegin&&this._technique!=e&&(this._technique=e,this._techniqueDirty=!0,this._dirty=!0,e||SpiderGL.WebGL.Program.unbind(this._gl))},get technique(){return this._technique},setModel:function(e){this._inBegin&&this._model!=e&&(this._model=e,this._modelDirty=!0,this._modelPartDirty=!0,this._modelChunkDirty=!0,this._dirty=!0)},get model(){return this._model},setPart:function(e){this._inBegin&&this._part!=e&&(this._partName=e,this._modelPartDirty=!0,this._modelDirty=!0,this._dirty=!0)},get part(){return this._partName},setChunk:function(e){this._inBegin&&this._chunk!=e&&(this._chunkName=e,this._modelDirty=!0,this._modelChunkDirty=!0,this._primModeDirty=!0,this._dirty=!0)},get chunk(){return this._chunkName},setPrimitiveMode:function(e){this._inBegin&&this._primMode!=e&&(this._primMode=e,this._primModeDirty=!0,this._modelDirty=!0,this._dirty=!0)},get primitiveMode(){return this._primMode},setUniforms:function(e){this._inBegin&&this._technique&&this._technique.program.setUniforms(e)},setDefaultGlobals:function(){if(this._inBegin){var e=this._technique;if(e){var t=e.renderData.globalsMap,r={};for(var i in t){var n=t[i].name,a=t[i].value;r[n]=a}e.program.setUniforms(r)}}},setGlobals:function(e){if(this._inBegin&&e){var t=this._technique;if(t){var r=t.renderData.globalsMap,i={};for(var n in e)if(r[n]){var a=r[n].name,s=e[n];i[a]=s}t.program.setUniforms(i)}}},setFramebuffer:function(e){this._inBegin&&this._framebuffer!=e&&(this._framebuffer=e,this._framebufferDirty=!0,this._viewportDirty=!0,this._dirty=!0,e?e.bind():SpiderGL.WebGL.Framebuffer.unbind(this._gl))},activateOffScreenFramebuffer:function(){this.setFramebuffer(this._internalFramebuffer)},activateMainFramebuffer:function(){return this.setFramebuffer(null)},setFramebufferAttachments:function(e){this._inBegin&&this._framebuffer&&(this._framebuffer.setAttachments(e),this._framebufferDirty=!0,this._viewportDirty=!0)},setColorRenderTarget:function(e){this._inBegin&&this._framebuffer&&(this._framebuffer.colorTarget=e,this._viewportDirty=!0,this._dirty=!0)},setDepthRenderTarget:function(e){this._inBegin&&this._framebuffer&&(this._framebuffer.depthTarget=e,this._viewportDirty=!0,this._dirty=!0)},setStencilRenderTarget:function(e){this._inBegin&&this._framebuffer&&(this._framebuffer.stencilTarget=e,this._viewportDirty=!0,this._dirty=!0)},setDepthStencilRenderTarget:function(e){this._inBegin&&this._framebuffer&&(this._framebuffer.depthStencilTarget=e,this._viewportDirty=!0,this._dirty=!0)},clearFramebuffer:function(e){if(this._inBegin&&e){var t=this._gl,r=0;if(SpiderGL.Type.isNumber(e))r=e;else{if("color"in e){var i=e.color;i&&t.clearColor(i[0],i[1],i[2],i[3]),r|=t.COLOR_BUFFER_BIT}if("depth"in e){var n=e.depth;SpiderGL.Type.isNumber(n)&&t.clearDepth(n),r|=t.DEPTH_BUFFER_BIT}if("stencil"in e){var a=e.stencil;SpiderGL.Type.isNumber(a)&&t.clearStencil(a),r|=t.Stencil_BUFFER_BIT}}if(r){var s=this._framebuffer;s?s.clear(r):t.clear(r)}}},setViewport:function(e,t,r,i){if(this._inBegin){var n=this._gl;n.viewport(e,t,r,i)}},setTexture:function(e,t){if(t)t.bind(e);else{var r=this._gl;SpiderGL.WebGL.Texture2D.unbind(r,e),SpiderGL.WebGL.TextureCubeMap.unbind(r,e)}},get canRender(){return!!(this._inBegin&&this._technique&&this._model&&this._partName&&this._chunkName&&this._primMode)},render:function(){if(this.canRender&&this._update()){for(var e=this._gl,t=this._primitiveStreams,r=t.buffered,i=t.array,n=0,a=r.length;a>n;++n){var s=r[n],u=s.buffer.glBuffer;u.bind();for(var o=s.streams,d=0,p=o.length;p>d;++d){var c=o[d];u.drawElements(c)}}for(var d=0,a=i.length;a>d;++d){var c=i[d];e.drawArrays(c.glMode,c.first,c.count)}}},renderModelPart:function(e){var t=this.model.descriptor.logic.parts[e];this.setPart(e);for(var r in t.chunks){var i=t.chunks[r];this.setChunk(i),this.render()}},renderModel:function(){var e=this.model.descriptor.logic.parts;for(var t in e){var r=e[t];this.setPart(t);for(var i in r.chunks){var n=r.chunks[i];this.setChunk(n),this.render()}}}},SpiderGL.UserInterface={},SpiderGL.UserInterface.CanvasHandler=function(e,t,r){SpiderGL.Core.ObjectBase.call(this),r=r||{};var i=this,n=e.canvas;this._gl=e,this._canvas=n,this._handler=t,this._ignoreKeyRepeat=SpiderGL.Utility.getDefaultValue(r.ignoreKeyRepeat,SpiderGL.UserInterface.CanvasHandler.DEFAULT_IGNORE_KEY_REPEAT),this._keysDown={},this._mouseButtonsDown=[!1,!1,!1],this._dragging=[!1,!1,!1],this._dragStartPos=[[0,0],[0,0],[0,0]],this._dragEndPos=[[0,0],[0,0],[0,0]],this._dragDeltaPos=[[0,0],[0,0],[0,0]],this._cursorPos=[0,0],this._cursorPrevPos=[0,0],this._cursorDeltaPos=[0,0],this._drawEventPending=!1,this._drawEventHandler=function(){i._onDraw()},this._postDrawEventFunction=function(){i._postDrawEvent()},this._animateTime=Date.now(),this._animatePrevTime=this._animateTime,this._animateDeltaTime=0,this._animateRate=0,this._animateID=null,this._animateEventHandler=function(){i._onAnimate()},this._animateMS=-1,this._animateWithTimeout=!1,this._fastAnimate=!1,this._fpsUpdateMS=1e3,this._fpsTime=0,this._fpsCount=0,this._fps=0,this._delegateDraw=function(e){i._onDraw(e)};var a=function(e){e.source==window&&(e.data==SpiderGL.UserInterface.CanvasHandler._FAST_ANIMATE_MESSAGE_NAME?(e.stopPropagation(),i._onAnimate()):e.data==SpiderGL.UserInterface.CanvasHandler._FAST_DRAW_MESSAGE_NAME&&(e.stopPropagation(),i._onDraw()))};window.addEventListener("message",a,!0),n.tabIndex=0,n.addEventListener("unload",function(e){i._onTerminate(e)},!1),n.addEventListener("keydown",function(e){i._onKeyDown(e)},!1),n.addEventListener("keyup",function(e){i._onKeyUp(e)},!1),n.addEventListener("keypress",function(e){i._onKeyPress(e)},!1),n.addEventListener("mousedown",function(e){i._onMouseButtonDown(e)},!1),n.addEventListener("mouseup",function(e){i._onMouseButtonUp(e)},!1),n.addEventListener("mousemove",function(e){i._onMouseMove(e)},!1),n.addEventListener("mouseout",function(e){i._onMouseOut(e)},!1),n.addEventListener("click",function(e){i._onClick(e)},!1),n.addEventListener("dblclick",function(e){i._onDoubleClick(e)},!1),n.addEventListener("resize",function(e){i._onResize(e)},!1),n.addEventListener("DOMMouseScroll",function(e){i._onMouseWheel(e)},!1),n.addEventListener("mousewheel",function(e){i._onMouseWheel(e)},!1),n.addEventListener("blur",function(e){i._onBlur(e)},!1),window.addEventListener("mouseup",function(e){i._onWindowMouseButtonUp(e)},!1),window.addEventListener("mousemove",function(e){i._onWindowMouseMove(e)},!1),n.addEventListener("touchstart",SpiderGL.UserInterface.CanvasHandler._touchHandler,!1),n.addEventListener("touchend",SpiderGL.UserInterface.CanvasHandler._touchHandler,!1),n.addEventListener("touchmove",SpiderGL.UserInterface.CanvasHandler._touchHandler,!1),window.addEventListener("pointerup",function(e){"touch"==e.pointerType?SpiderGL.UserInterface.CanvasHandler._touchHandler(e):i._onWindowMouseButtonUp(e)},!1),window.addEventListener("pointermove",function(e){"touch"==e.pointerType?SpiderGL.UserInterface.CanvasHandler._touchHandler(e):i._onWindowMouseMove(e)},!1),n.addEventListener("pointerdown",function(e){"touch"==e.pointerType?SpiderGL.UserInterface.CanvasHandler._touchHandler(e):i._onMouseButtonDown(e)},!1),n.addEventListener("pointerup",function(e){"touch"==e.pointerType?SpiderGL.UserInterface.CanvasHandler._touchHandler(e):i._onMouseButtonUp(e)},!1),n.addEventListener("pointermove",function(e){"touch"==e.pointerType?SpiderGL.UserInterface.CanvasHandler._touchHandler(e):i._onMouseMove(e)},!1);var s=SpiderGL.Utility.getDefaultValue(r.standardGLUnpack,SpiderGL.UserInterface.CanvasHandler.DEFAULT_STANDARD_GL_UNPACK);s&&SpiderGL.WebGL.Context.setStandardGLUnpack(e),this.animateRate=SpiderGL.Utility.getDefaultValue(r.animateRate,SpiderGL.UserInterface.CanvasHandler.DEFAULT_ANIMATE_RATE)},SpiderGL.UserInterface.CanvasHandler._FAST_DRAW_MESSAGE_NAME="spidergl-fast-draw-message",SpiderGL.UserInterface.CanvasHandler._FAST_ANIMATE_MESSAGE_NAME="spidergl-fast-animate-message",SpiderGL.UserInterface.CanvasHandler.DEFAULT_ANIMATE_RATE=0,SpiderGL.UserInterface.CanvasHandler.DEFAULT_IGNORE_KEY_REPEAT=!0,SpiderGL.UserInterface.CanvasHandler.DEFAULT_STANDARD_GL_UNPACK=!0,SpiderGL.UserInterface.CanvasHandler.DEFAULT_PROPERTY_NAME="ui",SpiderGL.UserInterface.CanvasHandler._multiTouch={tmp:0,touches:[],evt:null,pan:!1,btn:0,phase:0},SpiderGL.UserInterface.CanvasHandler._touchHandler=function(e){var t,r,n=1,a=0,s="";if("pointerdown"==e.type)SpiderGL.UserInterface.CanvasHandler._multiTouch.touches.push(e);else for(i=0;i<SpiderGL.UserInterface.CanvasHandler._multiTouch.touches.length;i++)e.pointerId==SpiderGL.UserInterface.CanvasHandler._multiTouch.touches[i].pointerId&&(SpiderGL.UserInterface.CanvasHandler._multiTouch.touches[i]=e);switch(navigator.userAgent.toLowerCase().indexOf("trident")>-1?(t=SpiderGL.UserInterface.CanvasHandler._multiTouch.touches,r=t[0]):(t=e.touches,r=e.changedTouches[0]),e.type){case"touchstart":case"pointerdown":s="mousedown";break;case"touchmove":case"pointermove":s="mousemove";break;case"touchend":case"pointerup":s="mouseup";break;default:return}var u=document.createEvent("MouseEvent");if(t.length>=2){if(navigator.userAgent.toLowerCase().indexOf("trident")<=-1&&("draw-canvas"!=t[0].target.id||"draw-canvas"!=t[1].target.id))return;var o=Math.sqrt(Math.pow(t[0].clientX-t[1].clientX,2)+Math.pow(t[0].clientY-t[1].clientY,2)),n=o-SpiderGL.UserInterface.CanvasHandler._multiTouch.tmp;if(SpiderGL.UserInterface.CanvasHandler._multiTouch.tmp=o,"pointerup"==e.type)a=SpiderGL.UserInterface.CanvasHandler._multiTouch.btn,s="mousedown";else{if(!(-.995>n||n>.995))return;n=n>0?1:-1,s="mousewheel"}}else{if(!("pointerup"!=e.type&&"pointermove"!=e.type||r&&e.pointerId==r.pointerId))return;if(0!=SpiderGL.UserInterface.CanvasHandler._multiTouch.tmp&&"touchend"==e.type&&(a=SpiderGL.UserInterface.CanvasHandler._multiTouch.btn,s="mousedown"),"mousedown"==s)SpiderGL.UserInterface.CanvasHandler._multiTouch.evt=e;else if("mouseup"==s)SpiderGL.UserInterface.CanvasHandler._multiTouch.pan&&(a=1,SpiderGL.UserInterface.CanvasHandler._multiTouch.pan=!1,SpiderGL.UserInterface.CanvasHandler._multiTouch.phase=0,navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&SpiderGL.UserInterface.CanvasHandler._touchHandler(e));else if("mousemove"==s)if(SpiderGL.UserInterface.CanvasHandler._multiTouch.pan)switch(SpiderGL.UserInterface.CanvasHandler._multiTouch.phase){case 0:n=-1,s=navigator.userAgent.toLowerCase().indexOf("firefox")>-1?"mousemove":"mouseup",SpiderGL.UserInterface.CanvasHandler._multiTouch.phase++;break;case 1:a=1,s="mousedown",SpiderGL.UserInterface.CanvasHandler._multiTouch.phase++;break;default:a=1}else{var d;d=navigator.userAgent.toLowerCase().indexOf("trident")>-1?SpiderGL.UserInterface.CanvasHandler._multiTouch.evt:SpiderGL.UserInterface.CanvasHandler._multiTouch.evt.touches[0],Math.sqrt(Math.pow(r.clientX-d.clientX,2)+Math.pow(r.clientY-d.clientY,2))<=2&&e.timeStamp-SpiderGL.UserInterface.CanvasHandler._multiTouch.evt.timeStamp>400&&(SpiderGL.UserInterface.CanvasHandler._multiTouch.pan=!0)}SpiderGL.UserInterface.CanvasHandler._multiTouch.tmp=0,SpiderGL.UserInterface.CanvasHandler._multiTouch.btn=a}if(r&&(u.initMouseEvent(s,!0,!0,window,n,r.screenX,r.screenY,r.clientX,r.clientY,!1,!1,!1,!1,a,null),r.target.dispatchEvent(u)),"pointerup"==e.type)for(i=0;i<SpiderGL.UserInterface.CanvasHandler._multiTouch.touches.length;i++)SpiderGL.UserInterface.CanvasHandler._multiTouch.touches[i].pointerId>=e.pointerId&&(i+1==SpiderGL.UserInterface.CanvasHandler._multiTouch.touches.length?SpiderGL.UserInterface.CanvasHandler._multiTouch.touches.pop():SpiderGL.UserInterface.CanvasHandler._multiTouch.touches[i]=SpiderGL.UserInterface.CanvasHandler._multiTouch.touches[i+1]);e.preventDefault(),e.stopPropagation()},SpiderGL.UserInterface.CanvasHandler.prototype={_firstNotify:function(){this._onInitialize(),this._animateRate>0&&this._onAnimate(),this.postDrawEvent()},_dispatch:function(){var e=arguments[0],t=this._handler,r=t[e];if(r){var i=Array.prototype.slice.call(arguments,1);r.apply(t,i)}},_postDrawEvent:function(){this._postDrawCount=5,this._drawEventPending||(this._drawEventPending=!0,requestAnimationFrame(this._delegateDraw))},_getMouseClientPos:function(e){var t=this._canvas.getBoundingClientRect(),r=this._canvas.width,i=this._canvas.height,n=e.clientX-t.left,a=i-(e.clientY-t.top),s=0>n||n>=r||0>a||a>=i;return[n,a,s]},_onInitialize:function(){this._dispatch("onInitialize")},_onTerminate:function(){this._dispatch("onTerminate")},_onBlur:function(e){var t=(this._gl,this._keysDown);for(var r in t)t[r]&&(t[r]=!1,this._dispatch("onKeyUp",r,null))},_onKeyDown:function(e){var t=e.keyCode;if(t>=48&&90>=t){var r=String.fromCharCode(t);t=r.toUpperCase()}var i=this._keysDown[t];this._keysDown[t]=!0,i&&this._ignoreKeyRepeat||this._dispatch("onKeyDown",t,e)},_onKeyUp:function(e){var t=e.keyCode;if(t>=48&&90>=t){var r=String.fromCharCode(t);t=r.toUpperCase()}this._keysDown[t]=!1,this._dispatch("onKeyUp",t,e)},_onKeyPress:function(e){var t=e.keyCode;if(t>=48&&90>=t){var r=String.fromCharCode(t);t=r.toUpperCase()}this._dispatch("onKeyPress",t,e)},_onMouseButtonDown:function(e){this._canvas.focus();var t=this._getMouseClientPos(e);this._cursorPos=t;var r=e.button;this._mouseButtonsDown[r]=!0,this._dragStartPos[r]=[t[0],t[1]],this._dispatch("onMouseButtonDown",r,t[0],t[1],e),e.stopPropagation()},_onMouseButtonUp:function(e){var t=this._getMouseClientPos(e);this._cursorPos=t;var r=e.button;if(this._mouseButtonsDown[r]=!1,!(navigator.userAgent.toLowerCase().indexOf("firefox")>-1)||e.isTrusted){if(this._dispatch("onMouseButtonUp",r,t[0],t[1],e),this._dragging[r]){this._dragging[r]=!1;var i=this._dragStartPos[r],n=[t[0],t[1]];this._dragEndPos[r]=n,this._dragDeltaPos[r]=[n[0]-i[0],n[1]-i[1]],this._dispatch("onDragEnd",r,n[0],n[1])}e.stopPropagation()}},_onWindowMouseButtonUp:function(e){var t=this._getMouseClientPos(e);this._cursorPos=t;var r=e.button;if(this._mouseButtonsDown[r]&&(this._mouseButtonsDown[r]=!1,!(navigator.userAgent.toLowerCase().indexOf("firefox")>-1)||e.isTrusted)){if(this._dispatch("onMouseButtonUp",r,t[0],t[1],e),this._dragging[r]){this._dragging[r]=!1;var i=this._dragStartPos[r],n=[t[0],t[1]];this._dragEndPos[r]=n,this._dragDeltaPos[r]=[n[0]-i[0],n[1]-i[1]],this._dispatch("onDragEnd",r,n[0],n[1])}e.stopPropagation()}},_onMouseMove:function(e){this._cursorPrevPos=this._cursorPos;var t=this._getMouseClientPos(e);this._cursorPos=t,this._cursorDeltaPos=[this._cursorPos[0]-this._cursorPrevPos[0],this._cursorPos[1]-this._cursorPrevPos[1]];for(var r=0;3>r;++r)if(this._mouseButtonsDown[r]&&(0!=this._cursorDeltaPos[0]||0!=this._cursorDeltaPos[1])){var i=this._dragStartPos[r],n=[t[0],t[1]];this._dragEndPos[r]=n,this._dragDeltaPos[r]=[n[0]-i[0],n[1]-i[1]],this._dragging[r]?this._dispatch("onDrag",r,n[0],n[1]):(this._dragging[r]=!0,this._dispatch("onDragStart",r,i[0],i[1]))}this._dispatch("onMouseMove",t[0],t[1],e),e.stopPropagation()},_onWindowMouseMove:function(e){this._cursorPrevPos=this._cursorPos;var t=this._getMouseClientPos(e);this._cursorPos=t,this._cursorDeltaPos=[this._cursorPos[0]-this._cursorPrevPos[0],this._cursorPos[1]-this._cursorPrevPos[1]];for(var r=0;3>r;++r)if(this._dragging[r]){var i=this._dragStartPos[r],n=[t[0],t[1]];this._dragEndPos[r]=n,this._dragDeltaPos[r]=[n[0]-i[0],n[1]-i[1]],this._dispatch("onDrag",r,n[0],n[1])}t[2]||(this._dispatch("onMouseMove",t[0],t[1],e),e.stopPropagation())},_onMouseWheel:function(e){var t=this._getMouseClientPos(e),r=0;e||(e=window.event),e.wheelDelta?(r=e.wheelDelta/120,window.opera&&(r=-r)):e.detail&&(r=-e.detail/3),r&&this._dispatch("onMouseWheel",r,t[0],t[1],e),e.preventDefault&&e.preventDefault(),e.stopPropagation()},_onMouseOut:function(e){var t=this._getMouseClientPos(e);this._dispatch("onMouseOut",t[0],t[1],e)},_onClick:function(e){var t=this._getMouseClientPos(e);this._dispatch("onClick",e.button,t[0],t[1],e)},_onDoubleClick:function(e){var t=this._getMouseClientPos(e);this._dispatch("onDoubleClick",e.button,t[0],t[1],e)},_onResize:function(e){this._dispatch("onResize",this._canvas.width,this._canvas.height,e)},_onAnimate:function(){this._animatePrevTime=this._animateTime,this._animateTime=Date.now(),this._animateDeltaTime=this._animateTime-this._animatePrevTime,this._dispatch("onAnimate",this._animateDeltaTime/1e3),this._animateMS>=0?this._animateWithTimeout&&setTimeout(this._animateEventHandler,this._animateMS):this._fastAnimate&&window.postMessage(SpiderGL.UserInterface.CanvasHandler._FAST_ANIMATE_MESSAGE_NAME,"*")},_onDraw:function(e){if(this._drawEventPending=!1,this._fpsTime&&5!=this.postDrawCount){this._fpsCount++;var t=e-this._fpsTime;this._fps=.8*this._fps+.2*(1e3/t)}else this._fpsCount=0;this._fpsTime=e,this._dispatch("onDraw"),this._postDrawCount-- >0&&(this._drawEventPending=!0,requestAnimationFrame(this._delegateDraw))},get gl(){return this._gl},get canvas(){return this._canvas},get width(){return this._canvas.width},get height(){return this._canvas.height},get postDrawEvent(){return this._postDrawEventFunction},get animateTime(){return this._animateTime},get animatePrevTime(){return this._animatePrevTime},get animateDeltaTime(){return this._animateDeltaTime},get animateRate(){return this._animateRate},set animateRate(e){e=SpiderGL.Utility.getDefaultValue(e,SpiderGL.UserInterface.CanvasHandler.DEFAULT_ANIMATE_RATE),this._animateRate!==e&&(this._fastAnimate=!1,this._animateMS=-1,this._animateTime=Date.now(),this._animatePrevTime=this._animateTime,this._animateDeltaTime=0,this._animateID&&(clearInterval(this._animateID),this._animateID=null),this._animateRate=e,e>0?(this._animateMS=SpiderGL.Math.floor(1e3/e),this._animateWithTimeout?setTimeout(this._animateEventHandler,this._animateMS):this._animateID=setInterval(this._animateEventHandler,this._animateMS)):0>e&&(this._fastAnimate=!0,window.postMessage(SpiderGL.UserInterface.CanvasHandler._FAST_ANIMATE_MESSAGE_NAME,"*")))},get framesPerSecond(){return this._fps},get ignoreKeyRepeat(){return this._ignoreKeyRepeat},set ignoreKeyRepeat(e){this._ignoreKeyRepeat=SpiderGL.Utility.getDefaultValue(e,SpiderGL.UserInterface.CanvasHandler.DEFAULT_IGNORE_KEY_REPEAT)},isKeyDown:function(e){return e.toUpperCase&&(e=e.toUpperCase()),this._keysDown[e]},isMouseButtonDown:function(e){return this._mouseButtonsDown[e]},isDragging:function(e){var t=!1;if(void 0!==e)t=this._dragging[e];else for(i=0;i<3;i++)if(this._dragging[i])return!0;return t},dragStartX:function(e){return this._dragStartPos[e][0]},dragStartY:function(e){return this._dragStartPos[e][1]},dragEndX:function(e){return this._dragEndPos[e][0]},dragEndY:function(e){return this._dragEndPos[e][1]},dragDeltaX:function(e){return this._dragDeltaPos[e][0]},dragDeltaY:function(e){return this._dragDeltaPos[e][1]},get cursorX(){return this._cursorPos[0]},get cursorY(){return this._cursorPos[1]},get cursorPrevX(){return this._cursorPrevPos[0]},get cursorPrevY(){return this._cursorPrevPos[1]},get cursorDeltaX(){return this._cursorDeltaPos[0]},get cursorDeltaY(){return this._cursorDeltaPos[1]},draw:function(){this._onDraw()}},SpiderGL.Type.extend(SpiderGL.UserInterface.CanvasHandler,SpiderGL.Core.ObjectBase),SpiderGL.UserInterface.handleCanvas=function(e,t,r){if(!e||!t)return!1;r=r||{};var i=SpiderGL.WebGL.Context.getHijacked(e,r);if(!i)return!1;var n=new SpiderGL.UserInterface.CanvasHandler(i,t,r);if(!n)return!1;var a=SpiderGL.Utility.getDefaultValue(r.uiName,SpiderGL.UserInterface.CanvasHandler.DEFAULT_PROPERTY_NAME);return t[a]=n,n._firstNotify(),!0},SpiderGL.UserInterface.handleCanvasOnLoad=function(e,t,r){function i(){SpiderGL.UserInterface.handleCanvas(e,t,r),n&&n()}if(!e||!t)return!1;r=r||{};var n=SpiderGL.Utility.getDefaultValue(r.onLoad,null);return window.addEventListener("load",i,!1),!0};
SpiderGL.openNamespace();const SGL_TRACKBALL_NO_ACTION=0,SGL_TRACKBALL_ROTATE=1,SGL_TRACKBALL_PAN=2,SGL_TRACKBALL_DOLLY=3,SGL_TRACKBALL_SCALE=4,HOP_ALL=256;Presenter=function(e){this._isDebugging=!1,this._lightDirection=[0,0,-1],this._supportsWebGL=sglHandleCanvas(e,this)},Presenter.prototype={_parseScene:function(e){e=e||{};var i={background:this._parseBackground(e.background),meshes:this._parseMeshes(e.meshes),texturedQuads:this._parseTexturedQuads(e.texturedQuads),modelInstances:this._parseModelInstances(e.modelInstances),spots:this._parseSpots(e.spots),trackball:this._parseTrackball(e.trackball),space:this._parseSpace(e.space)};return i},_parseBackground:function(e){e=e||{};var i=sglGetDefaultObject({image:null,isEnvironment:!1,color:[0,0,0,0]},e);return i},_parseMeshes:function(e){var i={};for(var t in e)i[t]=this._parseMesh(e[t]);return i},_parseMesh:function(e){var i=sglGetDefaultObject({url:null,transform:null},e);return i.transform=this._parseTransform(i.transform),i},_parseTexturedQuads:function(e){var i={};for(var t in e)i[t]=this._parseTexturedQuad(e[t]);return i},_parseTexturedQuad:function(e){return e},_parseModelInstances:function(e){var i={};for(var t in e)i[t]=this._parseModelInstance(e[t]);return i},_parseModelInstance:function(e){var i=sglGetDefaultObject({mesh:null,color:[1,1,1],useSolidColor:!1,alpha:.5,useTransparency:!1,cursor:"default",ID:0,transform:null,visible:!0,tags:[]},e);return i.transform=this._parseTransform(i.transform),i.ID=this._instancesProgressiveID,i.color[3]&&(i.alpha=i.color[3]),this._instancesProgressiveID+=1,i},_parseSpots:function(e){var i={};for(var t in e)i[t]=this._parseSpot(e[t]);return i},_parseSpot:function(e){var i=sglGetDefaultObject({mesh:null,color:[0,.25,1],useSolidColor:!0,alpha:.5,useTransparency:!0,cursor:"pointer",ID:0,transform:null,visible:!0,tags:[]},e);return i.transform=this._parseTransform(i.transform),i.ID=this._spotsProgressiveID,i.color[3]&&(i.alpha=i.color[3]),this._spotsProgressiveID+=1,i},_parseTrackball:function(e){var i=sglGetDefaultObject({type:TurnTableTrackball,trackOptions:{}},e);return i},_parseSpace:function(e){e=e||{};var i=sglGetDefaultObject({centerMode:"first",radiusMode:"first",whichInstanceCenter:"",whichInstanceRadius:"",explicitCenter:[0,0,0],explicitRadius:1,transform:null,cameraFOV:60,cameraNearFar:[.1,10]},e);return i.transform=this._parseTransform(i.transform),i.cameraFOV<2&&(i.cameraFOV=2),i.cameraFOV>88&&(i.cameraFOV=88),i},_parseTransform:function(e){var i=sglGetDefaultObject({matrix:SglMat4.identity()},e);return i},_createStandardPointNXSProgram:function(){var e=this.ui.gl,i=new SglVertexShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   mat4 uWorldViewProjectionMatrix;                            \n            uniform   mat3 uViewSpaceNormalMatrix;                                \n                                                                                  \n            attribute vec3 aPosition;                                             \n            attribute vec3 aNormal;                                               \n            attribute vec3 aColor;                                                \n            attribute float aPointSize;                                           \n                                                                                  \n            varying   vec3 vNormal;                                               \n            varying   vec3 vColor;                                                \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                vNormal     = uViewSpaceNormalMatrix * aNormal;                   \n                vColor      = aColor;                                             \n                                                                                  \n                gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n				gl_PointSize = 1.5 * aPointSize;								  \n            }                                                                     \n        ");this._isDebugging&&console.log("NXS POINT Vertex Shader Log:\n"+i.log);var t=new SglFragmentShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   vec3 uViewSpaceLightDirection;                              \n            uniform   float uAlpha;                                               \n            uniform   bool uUseSolidColor;                                        \n            uniform   vec3 uSolidColor;                                           \n                                                                                  \n            varying   vec3 vNormal;                                               \n            varying   vec3 vColor;                                                \n			#extension GL_EXT_frag_depth : enable								  \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n        		float a = pow(2.0*(gl_PointCoord.x - 0.5), 2.0);				  \n		        float b = pow(2.0*(gl_PointCoord.y - 0.5), 2.0);				  \n        		float c = 1.0 - (a + b);										  \n        		if(c < 0.0) { discard; }										  \n						                                                          \n				vec3 diffuse;                                                     \n				if(uUseSolidColor)                                                \n                  diffuse = uSolidColor;                                          \n				else                                                              \n                  diffuse = vColor;                                               \n				if(vNormal[0] != 0.0 || vNormal[1] != 0.0 || vNormal[2] != 0.0) { \n  				  vec3  normal  = normalize(vNormal);                             \n                  float nDotL   = dot(normal, -uViewSpaceLightDirection);         \n                  float lambert = max(0.0, nDotL);                                \n                  diffuse = diffuse * lambert;        						      \n                }                                                                 \n                gl_FragColor  = vec4(diffuse, uAlpha);                            \n	       		gl_FragDepthEXT = gl_FragCoord.z + 0.0001*(1.0-pow(c, 2.0));	  \n            }                                                                     \n        ");this._isDebugging&&console.log("NXS POINT Fragment Shader Log:\n"+t.log);var n=new SglProgram(e,{shaders:[i,t],attributes:{aPosition:0,aNormal:1,aColor:2,aPointSize:4},uniforms:{uWorldViewProjectionMatrix:SglMat4.identity(),uViewSpaceNormalMatrix:SglMat3.identity(),uViewSpaceLightDirection:this._lightDirection,uAlpha:1,uUseSolidColor:!1,uSolidColor:[1,1,1]}});return this._isDebugging&&console.log("NXS POINT Program Log:\n"+n.log),n},_createStandardNXSProgram:function(){var e=this.ui.gl,i=new SglVertexShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   mat4 uWorldViewProjectionMatrix;                            \n            uniform   mat3 uViewSpaceNormalMatrix;                                \n                                                                                  \n            attribute vec3 aPosition;                                             \n            attribute vec3 aNormal;                                               \n            attribute vec3 aColor;                                                \n                                                                                  \n            varying   vec3 vNormal;                                               \n            varying   vec3 vColor;                                                \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                vNormal     = uViewSpaceNormalMatrix * aNormal;                   \n                vColor      = aColor;                                             \n                                                                                  \n                gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n            }                                                                     \n        ");this._isDebugging&&console.log("NXS Vertex Shader Log:\n"+i.log);var t=new SglFragmentShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   vec3 uViewSpaceLightDirection;                              \n            uniform   float uAlpha;                                               \n            uniform   bool uUseSolidColor;                                        \n            uniform   vec3 uSolidColor;                                           \n                                                                        		  \n            varying   vec3 vNormal;                                               \n            varying   vec3 vColor;                                                \n			#extension GL_EXT_frag_depth : enable								  \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                vec3  normal  = normalize(vNormal);                               \n                float nDotL   = dot(normal, -uViewSpaceLightDirection);           \n				                                                                  \n				vec3  diffuse;                                                    \n				if(uUseSolidColor)                                                \n                  diffuse = uSolidColor;                                          \n				else                                                              \n                  diffuse = vColor;                                               \n                if(gl_FrontFacing)                                                \n                  diffuse = diffuse * max(0.0, nDotL);                            \n				else                                                              \n                  diffuse = diffuse * vec3(0.4, 0.3, 0.3) * abs(nDotL);           \n				                                                                  \n                gl_FragColor  = vec4(diffuse, uAlpha);                            \n            }                                                                     \n        ");this._isDebugging&&console.log("NXS Fragment Shader Log:\n"+t.log);var n=new SglProgram(e,{shaders:[i,t],attributes:{aPosition:0,aNormal:1,aColor:2},uniforms:{uWorldViewProjectionMatrix:SglMat4.identity(),uViewSpaceNormalMatrix:SglMat3.identity(),uViewSpaceLightDirection:this._lightDirection,uAlpha:1,uUseSolidColor:!1,uSolidColor:[1,1,1]}});return this._isDebugging&&console.log("NXS Program Log:\n"+n.log),n},_createXYZPointNXSProgram:function(){var e=this.ui.gl,i=new SglVertexShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   mat4 uWorldViewProjectionMatrix;                            \n                                                                                  \n            attribute vec3 aPosition;                                             \n            attribute vec3 aNormal;                                               \n            attribute vec3 aColor;                                                \n            attribute float aPointSize;                                           \n                                                                                  \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n				gl_PointSize = 1.5 * aPointSize;								  \n            }                                                                     \n        ");this._isDebugging&&console.log("Vertex Shader Log:\n"+i.log);var t=new SglFragmentShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   vec4 uColorID;                                              \n			#extension GL_EXT_frag_depth : enable								  \n                                                                                  \n			vec4 pack_depth(const in float depth)                                         \n			{                                                                             \n				const vec4 bit_shift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);  \n				const vec4 bit_mask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);        \n				vec4 res = fract(depth * bit_shift);                                      \n				res -= res.xxyz * bit_mask;                                               \n				return res;                                                               \n			}                                                                             \n																				  \n            void main(void)                                                       \n            {                                                                     \n        		float a = pow(2.0*(gl_PointCoord.x - 0.5), 2.0);				  \n		        float b = pow(2.0*(gl_PointCoord.y - 0.5), 2.0);				  \n        		float c = 1.0 - (a + b);										  \n        		if(c < 0.0) { discard; }										  \n                vec4 myColor;                                                     \n				myColor = pack_depth(gl_FragCoord.z);                             \n				gl_FragColor  = myColor;                                          \n	       		gl_FragDepthEXT = gl_FragCoord.z + 0.0001*(1.0-pow(c, 2.0));	  \n            }                                                                     \n        ");this._isDebugging&&console.log("NXS Fragment Shader Log:\n"+t.log);var n=new SglProgram(e,{shaders:[i,t],attributes:{aPosition:0,aNormal:1,aColor:2,aPointSize:4},uniforms:{uWorldViewProjectionMatrix:SglMat4.identity()}});return this._isDebugging&&console.log("NXS Program Log:\n"+n.log),n},_createXYZNXSProgram:function(){var e=this.ui.gl,i=new SglVertexShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   mat4 uWorldViewProjectionMatrix;                            \n                                                                                  \n            attribute vec3 aPosition;                                             \n            attribute vec3 aNormal;                                               \n            attribute vec3 aColor;                                                \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n            }                                                                     \n        ");this._isDebugging&&console.log("Vertex Shader Log:\n"+i.log);var t=new SglFragmentShader(e,"            precision highp float;                                                \n                                                                                  \n			vec4 pack_depth(const in float depth)                                         \n			{                                                                             \n				const vec4 bit_shift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);  \n				const vec4 bit_mask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);        \n				vec4 res = fract(depth * bit_shift);                                      \n				res -= res.xxyz * bit_mask;                                               \n				return res;                                                               \n			}                                                                             \n																				  \n            void main(void)                                                       \n            {                                                                     \n                vec4 myColor;                                                     \n				myColor = pack_depth(gl_FragCoord.z);                             \n				gl_FragColor  = myColor;                                          \n            }                                                                     \n        ");this._isDebugging&&console.log("NXS Fragment Shader Log:\n"+t.log);var n=new SglProgram(e,{shaders:[i,t],attributes:{aPosition:0,aNormal:1,aColor:2},uniforms:{uWorldViewProjectionMatrix:SglMat4.identity()}});return this._isDebugging&&console.log("NXS Program Log:\n"+n.log),n},_createColorCodedIDPointNXSProgram:function(){var e=this.ui.gl,i=new SglVertexShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   mat4 uWorldViewProjectionMatrix;                            \n                                                                                  \n            attribute vec3 aPosition;                                             \n            attribute vec3 aNormal;                                               \n            attribute vec3 aColor;                                                \n            attribute float aPointSize;                                           \n                                                                                  \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n				gl_PointSize = 1.5 * aPointSize;								  \n            }                                                                     \n        ");this._isDebugging&&console.log("Vertex Shader Log:\n"+i.log);var t=new SglFragmentShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   vec3 uViewSpaceLightDirection;                              \n                                                                                  \n            uniform   vec4 uColorID;                                              \n			#extension GL_EXT_frag_depth : enable								  \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n        		float a = pow(2.0*(gl_PointCoord.x - 0.5), 2.0);				  \n		        float b = pow(2.0*(gl_PointCoord.y - 0.5), 2.0);				  \n        		float c = 1.0 - (a + b);										  \n        		if(c < 0.0) { discard; }										  \n																				  \n                gl_FragColor  = uColorID;                                         \n	       		gl_FragDepthEXT = gl_FragCoord.z + 0.0001*(1.0-pow(c, 2.0));	  \n            }                                                                     \n        ");this._isDebugging&&console.log("Fragment Shader Log:\n"+t.log);var n=new SglProgram(e,{shaders:[i,t],attributes:{aPosition:0,aNormal:1,aColor:2,aPointSize:4},uniforms:{uWorldViewProjectionMatrix:SglMat4.identity(),uColorID:[1,.5,0,1]}});return this._isDebugging&&console.log("Program Log:\n"+n.log),n},_createColorCodedIDNXSProgram:function(){var e=this.ui.gl,i=new SglVertexShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   mat4 uWorldViewProjectionMatrix;                            \n                                                                                  \n            attribute vec3 aPosition;                                             \n            attribute vec3 aNormal;                                               \n            attribute vec3 aColor;                                                \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n            }                                                                     \n        ");this._isDebugging&&console.log("Vertex Shader Log:\n"+i.log);var t=new SglFragmentShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   vec4 uColorID;                                              \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                gl_FragColor  = uColorID;                                         \n            }                                                                     \n        ");this._isDebugging&&console.log("Fragment Shader Log:\n"+t.log);var n=new SglProgram(e,{shaders:[i,t],attributes:{aPosition:0,aNormal:1,aColor:2},uniforms:{uWorldViewProjectionMatrix:SglMat4.identity(),uColorID:[1,.5,0,1]}});return this._isDebugging&&console.log("Program Log:\n"+n.log),n},_createColorShadedPointNXSProgram:function(){var e=this.ui.gl,i=new SglVertexShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   mat4 uWorldViewProjectionMatrix;                            \n            uniform   mat3 uViewSpaceNormalMatrix;                                \n                                                                                  \n            attribute vec3 aPosition;                                             \n            attribute vec3 aNormal;                                               \n            attribute vec3 aColor;                                                \n            attribute float aPointSize;                                           \n                                                                                  \n            varying   vec3 vNormal;                                               \n            varying   vec3 vColor;                                                \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                vNormal     = uViewSpaceNormalMatrix * aNormal;                   \n                vColor      = aColor;                                             \n                                                                                  \n                gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n				gl_PointSize = 1.5 * aPointSize;								  \n            }                                                                     \n        ");this._isDebugging&&console.log("Vertex Shader Log:\n"+i.log);var t=new SglFragmentShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   vec3 uViewSpaceLightDirection;                              \n            uniform   vec4 uColorID;                                              \n                                                                                  \n            varying   vec3 vNormal;                                               \n            varying   vec3 vColor;                                                \n			#extension GL_EXT_frag_depth : enable								  \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n        		float a = pow(2.0*(gl_PointCoord.x - 0.5), 2.0);				  \n		        float b = pow(2.0*(gl_PointCoord.y - 0.5), 2.0);				  \n        		float c = 1.0 - (a + b);										  \n        		if(c < 0.0) { discard; }										  \n						                                                          \n				vec3 diffuse = vec3(uColorID[0], uColorID[1], uColorID[2]);       \n				if(vNormal[0] != 0.0 || vNormal[1] != 0.0 || vNormal[2] != 0.0) { \n  				  vec3  normal  = normalize(vNormal);                             \n                  float nDotL   = dot(normal, -uViewSpaceLightDirection);         \n                  float lambert = max(-nDotL, nDotL);                             \n                  diffuse = (diffuse*0.5) + (diffuse * lambert * 0.5);            \n                }                                                                 \n                gl_FragColor  = vec4(diffuse, uColorID[3]);                       \n	       		gl_FragDepthEXT = gl_FragCoord.z + 0.0001*(1.0-pow(c, 2.0));	  \n            }                                                                     \n        ");this._isDebugging&&console.log("Fragment Shader Log:\n"+t.log);var n=new SglProgram(e,{shaders:[i,t],attributes:{aPosition:0,aNormal:1,aColor:2,aPointSize:4},uniforms:{uWorldViewProjectionMatrix:SglMat4.identity(),uViewSpaceNormalMatrix:SglMat3.identity(),uViewSpaceLightDirection:this._lightDirection,uColorID:[1,.5,0,1]}});return this._isDebugging&&console.log("Program Log:\n"+n.log),n},_createColorShadedNXSProgram:function(){var e=this.ui.gl,i=new SglVertexShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   mat4 uWorldViewProjectionMatrix;                            \n            uniform   mat3 uViewSpaceNormalMatrix;                                \n                                                                                  \n            attribute vec3 aPosition;                                             \n            attribute vec3 aNormal;                                               \n            attribute vec3 aColor;                                                \n                                                                                  \n            varying   vec3 vNormal;                                               \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                vNormal     = uViewSpaceNormalMatrix * aNormal;                   \n                gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n            }                                                                     \n        ");this._isDebugging&&console.log("Vertex Shader Log:\n"+i.log);var t=new SglFragmentShader(e,"            precision highp float;                                                \n                                                                                  \n            uniform   vec3 uViewSpaceLightDirection;                              \n            uniform   vec4 uColorID;                                              \n                                                                                  \n            varying   vec3 vNormal;                                               \n                                                                                  \n            void main(void)                                                       \n            {                                                                     \n                vec3  normal  = normalize(vNormal);                               \n                float nDotL   = dot(normal, -uViewSpaceLightDirection);           \n				float lambert   = max(-nDotL, nDotL);                             \n																				  \n				vec3  baseColor = vec3(uColorID[0], uColorID[1], uColorID[2]);    \n				vec3  diffuse   = (baseColor*0.5) + (baseColor * lambert * 0.5);  \n                                                                                  \n                gl_FragColor  = vec4(diffuse, uColorID[3]);                       \n            }                                                                     \n        ");this._isDebugging&&console.log("Fragment Shader Log:\n"+t.log);var n=new SglProgram(e,{shaders:[i,t],attributes:{aPosition:0,aNormal:1,aColor:2},uniforms:{uWorldViewProjectionMatrix:SglMat4.identity(),uViewSpaceNormalMatrix:SglMat3.identity(),uViewSpaceLightDirection:this._lightDirection,uColorID:[1,.5,0,1]}});return this._isDebugging&&console.log("Program Log:\n"+n.log),n},_createStandardPLYtechnique:function(){var e=this.ui.gl,i=new SglTechnique(e,{vertexShader:"				precision highp float;                                                \n																					  \n				uniform   mat4 uWorldViewProjectionMatrix;                            \n				uniform   mat3 uViewSpaceNormalMatrix;                                \n																					  \n				attribute vec3 aPosition;                                             \n				attribute vec3 aNormal;                                               \n				attribute vec3 aColor;                                                \n																					  \n				varying   vec3 vNormal;                                               \n				varying   vec3 vColor;                                                \n																					  \n				void main(void)                                                       \n				{                                                                     \n					vNormal     = uViewSpaceNormalMatrix * aNormal;                   \n					vColor      = aColor;                                             \n																					  \n					gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n				}                                                                     \n			",
fragmentShader:"				precision highp float;                                                \n																					  \n				uniform   vec3      uViewSpaceLightDirection;                         \n				uniform   float     uAlpha;                                           \n                uniform   bool uUseSolidColor;                                        \n                uniform   vec3 uSolidColor;                                           \n																					  \n				varying   vec3 vNormal;                                               \n				varying   vec3 vColor;                                                \n																					  \n				void main(void)                                                       \n				{                                                                     \n					vec3  normal    = normalize(vNormal);                             \n					float nDotL     = dot(normal, -uViewSpaceLightDirection);         \n																					  \n					vec3 diffuse;                                                     \n				    if(uUseSolidColor)                                                \n                      diffuse = uSolidColor;                                          \n				    else                                                              \n                      diffuse = vColor;                                               \n                    if(gl_FrontFacing)                                                \n                      diffuse = diffuse * max(0.0, nDotL);                            \n				    else                                                              \n                      diffuse = diffuse * vec3(0.4, 0.3, 0.3) * abs(nDotL);           \n																					  \n					gl_FragColor    = vec4(diffuse, uAlpha);                          \n				}                                                                     \n			",vertexStreams:{aNormal:[0,0,1,0],aColor:[.4,.4,.8,1]},globals:{uWorldViewProjectionMatrix:{semantic:"uWorldViewProjectionMatrix",value:SglMat4.identity()},uViewSpaceNormalMatrix:{semantic:"uViewSpaceNormalMatrix",value:SglMat3.identity()},uViewSpaceLightDirection:{semantic:"uViewSpaceLightDirection",value:[0,0,-1]},uAlpha:{semantic:"uAlpha",value:1},uUseSolidColor:{semantic:"uUseSolidColor",value:!0},uSolidColor:{semantic:"uSolidColor",value:[1,1,1]}}});return i},_createXYZPLYtechnique:function(){var e=this.ui.gl,i=new SglTechnique(e,{vertexShader:"				precision highp float;                                                \n																					  \n				uniform   mat4 uWorldViewProjectionMatrix;                            \n																					  \n				attribute vec3 aPosition;                                             \n				attribute vec3 aNormal;                                               \n				attribute vec3 aColor;                                                \n																					  \n				void main(void)                                                       \n				{                                                                     \n					gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n				}                                                                     \n			",fragmentShader:"				precision highp float;                                                \n																					  \n				vec4 pack_depth(const in float depth)                                         \n				{                                                                             \n					const vec4 bit_shift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);  \n					const vec4 bit_mask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);        \n					vec4 res = fract(depth * bit_shift);                                      \n					res -= res.xxyz * bit_mask;                                               \n					return res;                                                               \n				}                                                                             \n																					  \n				void main(void)                                                       \n				{                                                                     \n					vec4 myColor;                                                     \n					myColor = pack_depth(gl_FragCoord.z);                             \n					gl_FragColor  = myColor;                                          \n				}                                                                     \n			",vertexStreams:{aNormal:[0,0,1,0],aColor:[.4,.4,.8,1]},globals:{uWorldViewProjectionMatrix:{semantic:"uWorldViewProjectionMatrix",value:SglMat4.identity()}}});return i},_createColorCodedIDPLYtechnique:function(){var e=this.ui.gl,i=new SglTechnique(e,{vertexShader:"				precision highp float;                                                \n																					  \n				uniform   mat4 uWorldViewProjectionMatrix;                            \n																					  \n				attribute vec3 aPosition;                                             \n				attribute vec3 aNormal;                                               \n				attribute vec3 aColor;                                                \n																					  \n				void main(void)                                                       \n				{                                                                     \n					gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n				}                                                                     \n			",fragmentShader:"				precision highp float;                                                \n																					  \n                uniform   vec4 uColorID;                                              \n																					  \n				void main(void)                                                       \n				{                                                                     \n					gl_FragColor    = uColorID;                                       \n				}                                                                     \n			",vertexStreams:{aNormal:[0,0,1,0],aColor:[.4,.4,.8,1]},globals:{uWorldViewProjectionMatrix:{semantic:"uWorldViewProjectionMatrix",value:SglMat4.identity()},uColorID:{semantic:"uColorID",value:[1,.5,.25,1]}}});return i},_createColorShadedPLYtechnique:function(){var e=this.ui.gl,i=new SglTechnique(e,{vertexShader:"				precision highp float;                                                \n																					  \n				uniform   mat4 uWorldViewProjectionMatrix;                            \n				uniform   mat3 uViewSpaceNormalMatrix;                                \n																					  \n				attribute vec3 aPosition;                                             \n				attribute vec3 aNormal;                                               \n				attribute vec3 aColor;                                                \n																					  \n				varying   vec3 vNormal;                                               \n																					  \n				void main(void)                                                       \n				{                                                                     \n					vNormal     = uViewSpaceNormalMatrix * aNormal;                   \n					gl_Position = uWorldViewProjectionMatrix * vec4(aPosition, 1.0);  \n				}                                                                     \n			",fragmentShader:"				precision highp float;                                                \n																					  \n                uniform   vec4 uColorID;                                              \n				uniform   vec3 uViewSpaceLightDirection;                              \n																					  \n				varying   vec3 vNormal;                                               \n				varying   vec3 vColor;                                                \n																					  \n				void main(void)                                                       \n				{                                                                     \n					vec3  normal    = normalize(vNormal);                             \n					float nDotL     = dot(normal, -uViewSpaceLightDirection);         \n					float lambert   = max(-nDotL, nDotL);                             \n																					  \n					vec3  baseColor = vec3(uColorID[0], uColorID[1], uColorID[2]);    \n					vec3  diffuse   = (baseColor*0.5) + (baseColor * lambert * 0.5);  \n																					  \n					gl_FragColor    = vec4(diffuse, uColorID[3]);                     \n				}                                                                     \n			",vertexStreams:{aNormal:[0,0,1,0],aColor:[.4,.4,.8,1]},globals:{uWorldViewProjectionMatrix:{semantic:"uWorldViewProjectionMatrix",value:SglMat4.identity()},uViewSpaceNormalMatrix:{semantic:"uViewSpaceNormalMatrix",value:SglMat3.identity()},uViewSpaceLightDirection:{semantic:"uViewSpaceLightDirection",value:[0,0,-1]},uColorID:{semantic:"uColorID",value:[1,.5,.25,1]}}});return i},_createSimpleLinetechnique:function(){var e=this.ui.gl,i=new SglTechnique(e,{vertexShader:"				precision highp float;                                                \n																					  \n				uniform   mat4 uWorldViewProjectionMatrix;                            \n				uniform vec3 uPointA;                                                 \n				uniform vec3 uPointB;                                                 \n																					  \n				attribute vec3 aPosition;                                             \n				attribute vec3 aNormal;                                               \n				attribute vec3 aColor;                                                \n																					  \n				void main(void)                                                       \n				{                                                                     \n					vec3 newPos;                                                      \n					if(aPosition[0]==0.0)                                             \n						newPos = uPointA;                                             \n					else                                                              \n						newPos = uPointB;                                             \n					gl_Position = uWorldViewProjectionMatrix * vec4(newPos, 1.0);     \n					gl_PointSize = 8.0;	                 							  \n				}                                                                     \n			",fragmentShader:"				precision highp float;                                                \n																					  \n                uniform   vec4 uLineColor;                                            \n																					  \n				void main(void)                                                       \n				{                                                                     \n					gl_FragColor    = uLineColor;                                     \n				}                                                                     \n			",vertexStreams:{aNormal:[0,0,1,0],aColor:[1,0,0,1]},globals:{uWorldViewProjectionMatrix:{semantic:"uWorldViewProjectionMatrix",value:SglMat4.identity()},uLineColor:{semantic:"uLineColor",value:[0,1,.5,1]},uPointA:{semantic:"uPointA",value:[0,0,0]},uPointB:{semantic:"uPointB",value:[1,1,1]}}});return i},_isSceneReady:function(){var e=this._scene&&this._sceneParsed&&0==this._objectsToLoad;return e},_testReady:function(){0==this._objectsToLoad&&(this._onLoadedEvent&&"null"!=this._onLoadedEvent&&this._onLoadedEvent(),this.trackball.track(SglMat4.identity(),0,0,0),this.ui.postDrawEvent())},_objectLoaded:function(){this._objectsToLoad--,this._testReady()},_onMeshReady:function(){this._objectLoaded()},_onTextureReady:function(){this._objectLoaded()},_onBackgroundReady:function(){this._objectLoaded()},_pickingRefresh:function(e,i){this._pickpoint[0]=e,this._pickpoint[1]=i;var t,n,r;if((this._onEndMeasurement||this._onPickedSpot||this._onEnterSpot||this._onLeaveSpot)&&(t=this._drawScenePickingSpots(),n=this._Color2ID(t),this._lastSpotID!=n)){var o=this._scene.spots;if(0!=n){for(var a in o)if(o[a].ID==n){this._pickedSpot=a,this._onHover&&(o[this._lastPickedSpot]&&(o[this._lastPickedSpot].alpha-=.2),o[this._pickedSpot].alpha+=.2,r=o[a].cursor,this._isMeasuring||(this._lastCursor=document.getElementById(this.ui.canvas.id).style.cursor,document.getElementById(this.ui.canvas.id).style.cursor=r),this.ui.postDrawEvent(),this._onLeaveSpot&&null!=this._lastPickedSpot&&this._onLeaveSpot(this._lastPickedSpot),this._onEnterSpot&&null!=this._pickedSpot&&this._onEnterSpot(this._pickedSpot)),this._lastPickedSpot=a;break}this._lastSpotID=n}else this._pickedSpot=null,this._onHover&&(o[this._lastPickedSpot]&&(o[this._lastPickedSpot].alpha-=.2),this._isMeasuring||(document.getElementById(this.ui.canvas.id).style.cursor="default"),this.ui.postDrawEvent(),this._onLeaveSpot&&null!=this._lastPickedSpot&&this._onLeaveSpot(this._lastPickedSpot),this._lastPickedSpot=null),this._lastSpotID=n}if(this._onEndMeasurement||this._onPickedInstance||this._onEnterInstance||this._onLeaveInstance){if(t=this._drawScenePickingInstances(),n=this._Color2ID(t),this._lastInstanceID==n&&!(this._onPickedSpot||this._onEnterSpot||this._onLeaveSpot))return;if(0!=n){var s=this._scene.modelInstances;for(var l in s)if(s[l].ID==n){this._pickedInstance=l,this._onHover&&(r=s[l].cursor,this._isMeasuring||(this._lastCursor=r,null==this._pickedSpot&&(document.getElementById(this.ui.canvas.id).style.cursor=r)),this._onLeaveInstance&&null!=this._lastPickedInstance&&this._onLeaveInstance(this._lastPickedInstance),this._onEnterInstance&&null!=this._pickedInstance&&this._onEnterInstance(this._pickedInstance)),this._lastPickedInstance=l;break}}else this._pickedInstance=null,this._onHover&&(this._lastCursor="default",this._isMeasuring||null!=this._pickedSpot||(document.getElementById(this.ui.canvas.id).style.cursor="default"),this._onLeaveInstance&&null!=this._lastPickedInstance&&this._onLeaveInstance(this._lastPickedInstance)),this._lastPickedInstance=null;this._lastInstanceID=n}},_measureRefresh:function(e,i,t,n){if(n.target.id==this.ui.gl.canvas.id&&this._isMeasuring){this._pickpoint[0]=i,this._pickpoint[1]=t;var r=this._drawScenePickingXYZ();null!=r&&2!=this._measurementStage?(this._pointA=r,this._measurementStage=2,this.ui.postDrawEvent()):null!=r&&2==this._measurementStage&&(this._pointB=r,this.measurement=SglVec3.length(SglVec3.sub(this._pointA,this._pointB)),this._measurementStage=3,this.ui.postDrawEvent(),this._onEndMeasurement&&this._onEndMeasurement(this.measurement))}},_startMeasurement:function(){this._isMeasuring||(this._isMeasuring=!0,this._measurementStage=1,this._pointA=[0,0,0],this._pointB=[0,0,0],this.measurement=0,this.ui.postDrawEvent())},_stopMeasurement:function(){this._isMeasuring=!1,this._measurementStage=0,this._pointA=[0,0,0],this._pointB=[0,0,0],this.measurement=0,this.ui.postDrawEvent()},_setSceneCenterRadius:function(){var e=this._scene.meshes,i=this._scene.modelInstances;if(this.sceneCenter=[0,0,0],this.sceneRadiusInv=1,"explicit"==this._scene.space.centerMode)this.sceneCenter=this._scene.space.explicitCenter;else if("specific"==this._scene.space.centerMode&&""!=this._scene.space.whichInstanceCenter){var t=e[i[this._scene.space.whichInstanceCenter].mesh];if(t&&t.renderable){var n=SglVec3.to4(t.renderable.datasetCenter,1);n=SglMat4.mul4(t.transform.matrix,n),n=SglMat4.mul4(i[this._scene.space.whichInstanceCenter].transform.matrix,n),n=SglVec4.to3(n),this.sceneCenter=n}}else if("scene"==this._scene.space.centerMode){var r=SglVec3.maxNumber(),o=SglVec3.minNumber(),a=[0,0,0],s=[0,0,0];for(var l in i){var t=e[i[l].mesh];if(t&&t.renderable){var n=SglVec3.to4(t.renderable.datasetCenter,1);n=SglMat4.mul4(t.transform.matrix,n),n=SglMat4.mul4(i[l].transform.matrix,n),n=SglVec4.to3(n);var c=t.renderable.datasetRadius,u=SglVec3.one();u=SglMat3.mul3(SglMat4.to33(t.transform.matrix),u),u=SglMat3.mul3(SglMat4.to33(i[l].transform.matrix),u);var d=SglVec3.length(u)/SglVec3.length([1,1,1]);c*=d,a[0]=n[0]-c,a[1]=n[1]-c,a[2]=n[2]-c,s[0]=n[0]+c,s[1]=n[1]+c,s[2]=n[2]+c,a[0]<r[0]&&(r[0]=a[0]),a[1]<r[1]&&(r[1]=a[1]),a[2]<r[2]&&(r[2]=a[2]),s[0]>o[0]&&(o[0]=s[0]),s[1]>o[1]&&(o[1]=s[1]),s[2]>o[2]&&(o[2]=s[2])}}this.sceneCenter=[(o[0]+r[0])/2,(o[1]+r[1])/2,(o[2]+r[2])/2]}else for(var l in i){var t=e[i[l].mesh];if(t&&t.renderable){var n=SglVec3.to4(t.renderable.datasetCenter,1);n=SglMat4.mul4(t.transform.matrix,n),n=SglMat4.mul4(i[l].transform.matrix,n),n=SglVec4.to3(n),this.sceneCenter=n;break}}if("explicit"==this._scene.space.radiusMode)this.sceneRadiusInv=1/this._scene.space.explicitRadius;else if("specific"==this._scene.space.radiusMode&&""!=this._scene.space.whichInstanceRadius){var t=e[i[this._scene.space.whichInstanceRadius].mesh];if(t&&t.renderable){var c=t.renderable.datasetRadius,u=SglVec3.one();u=SglMat3.mul3(SglMat4.to33(t.transform.matrix),u),u=SglMat3.mul3(SglMat4.to33(i[this._scene.space.whichInstanceRadius].transform.matrix),u);var d=SglVec3.length(u)/SglVec3.length([1,1,1]);this.sceneRadiusInv=1/(c*d)}}else if("scene"==this._scene.space.radiusMode){var r=SglVec3.maxNumber(),o=SglVec3.minNumber(),a=[0,0,0],s=[0,0,0];for(var l in i){var t=e[i[l].mesh];if(t&&t.renderable){var n=SglVec3.to4(t.renderable.datasetCenter,1);n=SglMat4.mul4(t.transform.matrix,n),n=SglMat4.mul4(i[l].transform.matrix,n),n=SglVec4.to3(n);var c=t.renderable.datasetRadius,u=SglVec3.one();u=SglMat3.mul3(SglMat4.to33(t.transform.matrix),u),u=SglMat3.mul3(SglMat4.to33(i[l].transform.matrix),u);var d=SglVec3.length(u)/SglVec3.length([1,1,1]);c*=d,a[0]=n[0]-c,a[1]=n[1]-c,a[2]=n[2]-c,s[0]=n[0]+c,s[1]=n[1]+c,s[2]=n[2]+c,a[0]<r[0]&&(r[0]=a[0]),a[1]<r[1]&&(r[1]=a[1]),a[2]<r[2]&&(r[2]=a[2]),s[0]>o[0]&&(o[0]=s[0]),s[1]>o[1]&&(o[1]=s[1]),s[2]>o[2]&&(o[2]=s[2])}}var h=[(o[0]+r[0])/2,(o[1]+r[1])/2,(o[2]+r[2])/2];this.sceneRadiusInv=1/SglVec3.length(SglVec3.sub(o,h))}else for(var l in i){var t=e[i[l].mesh];if(t&&t.renderable){var c=t.renderable.datasetRadius,u=SglVec3.one();u=SglMat3.mul3(SglMat4.to33(t.transform.matrix),u),u=SglMat3.mul3(SglMat4.to33(i[l].transform.matrix),u);var d=SglVec3.length(u)/SglVec3.length([1,1,1]);this.sceneRadiusInv=1/(c*d);break}}},_destroyPickFramebuffer:function(){this.pickFramebuffer&&(this.pickFramebuffer.destroy(),this.pickFramebuffer=null),this.pickColorTexture&&(this.pickColorTexture.destroy(),this.pickColorTexture=null),this.pickDepthRenderbuffer&&(this.pickDepthRenderbuffer.destroy(),this.pickDepthRenderbuffer=null)},_createPickFramebuffer:function(e,i){if(!this.pickFramebuffer||this.pickFramebuffer.width!=e||this.pickFramebuffer.height!=i){this._destroyPickFramebuffer();var t=this.ui.gl;this.pickColorTexture=new SglTexture2D(t,{internalFormat:t.RGBA,width:e,height:i}),this.pickDepthRenderbuffer=new SglRenderbuffer(t,{internalFormat:t.DEPTH_COMPONENT16,width:e,height:i}),this.pickFramebuffer=new SglFramebuffer(t,{color:this.pickColorTexture,depth:this.pickDepthRenderbuffer,autoViewport:!0})}},_setupDraw:function(){var e=this.ui.gl,i=this.ui.width,t=this.ui.height,n=this.xform,r=this._scene.space;e.viewport(0,0,i,t);var o=r.cameraFOV,a=r.cameraNearFar[0],s=r.cameraNearFar[1];n.projection.loadIdentity(),n.projection.perspective(sglDegToRad(o),i/t,a,s),n.view.loadIdentity(),n.view.lookAt([0,0,0],[0,0,-1],[0,1,0]),this.viewMatrix=n.viewMatrix,n.model.loadIdentity(),n.model.multiply(this.trackball.matrix),this._setSceneCenterRadius(),n.model.scale([this.sceneRadiusInv,this.sceneRadiusInv,this.sceneRadiusInv]),n.model.translate(SglVec3.neg(this.sceneCenter))},_ID2Color:function(e){var i=0|e,t=i%5,n=(i-t)/5%5,r=((i-t)/5-n)/5%5,o=[.2*t,.2*n,.2*r,1];return o},_Color2ID:function(e){var i=(e[0]+2)/255/.2|0,t=(e[1]+2)/255/.2*5|0,n=(e[2]+2)/255/.2*25|0,r=i+t+n|0;return r},_onPlyLoaded:function(e,i,t){var n=e.buffer,r=importPly(n);i.renderable=new SglModel(t,r),i.renderable.boundingBox=r.extra.boundingBox;var o=i.renderable;o.datasetCenter=[0,0,0],o.datasetRadius=1,o.datasetCenter[0]=(o.boundingBox.max[0]+o.boundingBox.min[0])/2,o.datasetCenter[1]=(o.boundingBox.max[1]+o.boundingBox.min[1])/2,o.datasetCenter[2]=(o.boundingBox.max[2]+o.boundingBox.min[2])/2,o.datasetRadius=Math.sqrt(Math.pow(o.boundingBox.max[0]-o.boundingBox.min[0],2)+Math.pow(o.boundingBox.max[1]-o.boundingBox.min[1],2)+Math.pow(o.boundingBox.max[2]-o.boundingBox.min[2],2))/2,this._onMeshReady()},_drawScene:function(){var e=this.ui.gl,i=this.ui.width,t=this.ui.height,n=this.xform,r=this.renderer,o=this.basicNXSProgram,a=this.pointNXSProgram,s=this.basicPLYTechnique,l=this.colorShadedNXSProgram,c=this.colorShadedPointNXSProgram,u=this.colorShadedPLYtechnique,d=this.simpleLinetechnique,h=this._scene.meshes,m=this._scene.modelInstances,g=this._scene.spots,v=this._scene.space,f=this._scene.background.color;this._setupDraw(),e.clearColor(f[0],f[1],f[2],f[3]),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT|e.STENCIL_BUFFER_BIT);for(var _ in m){var p=m[_],S=h[p.mesh];if(S){var b=S.renderable;if(b&&p.visible&&!p.useTransparency){e.enable(e.DEPTH_TEST),n.model.push(),n.model.multiply(v.transform.matrix),n.model.multiply(p.transform.matrix),n.model.multiply(S.transform.matrix);var P={uWorldViewProjectionMatrix:n.modelViewProjectionMatrix,uViewSpaceNormalMatrix:n.viewSpaceNormalMatrix,uViewSpaceLightDirection:this._lightDirection,uAlpha:1,uUseSolidColor:p.useSolidColor,uSolidColor:[p.color[0],p.color[1],p.color[2]]};if(S.isNexus){if(!b.isReady)continue;var x=b;if(x.modelMatrix=n.modelMatrix,x.viewMatrix=n.viewMatrix,x.projectionMatrix=n.projectionMatrix,x.viewport=[0,0,i,t],x._targetFps&&this.ui.framesPerSecond){var M=x._drawBudget*this.ui.framesPerSecond/x._targetFps;M>x._minDrawBudget&&(M<x._drawBudget||x._drawSize>x._drawBudget)&&(x._drawBudget=.9*x._drawBudget+.1*M)}var w;w=x._header.signature.face.hasIndex?o:a,w.bind(),w.setUniforms(P),x.begin(),x.render(),x.end(),w.unbind()}else r.begin(),r.setTechnique(s),r.setDefaultGlobals(),r.setPrimitiveMode("FILL"),r.setGlobals(P),r.setModel(b),r.renderModel(),r.end();e.disable(e.DEPTH_TEST),n.model.pop()}}}for(var _ in m){var p=m[_],S=h[p.mesh];if(S){var b=S.renderable;if(b&&p.visible&&p.useTransparency){e.enable(e.DEPTH_TEST),e.depthMask(!1),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE),n.model.push(),n.model.multiply(v.transform.matrix),n.model.multiply(p.transform.matrix),n.model.multiply(S.transform.matrix);var P={uWorldViewProjectionMatrix:n.modelViewProjectionMatrix,uViewSpaceNormalMatrix:n.viewSpaceNormalMatrix,uViewSpaceLightDirection:this._lightDirection,uAlpha:p.alpha,uUseSolidColor:p.useSolidColor,uSolidColor:[p.color[0],p.color[1],p.color[2]]};if(S.isNexus){if(!b.isReady)continue;var x=b;if(x.modelMatrix=n.modelMatrix,x.viewMatrix=n.viewMatrix,x.projectionMatrix=n.projectionMatrix,x.viewport=[0,0,i,t],x._targetFps&&this.ui.framesPerSecond){var M=x._drawBudget*this.ui.framesPerSecond/x._targetFps;M>x._minDrawBudget&&(M<x._drawBudget||x._drawSize>x._drawBudget)&&(x._drawBudget=.9*x._drawBudget+.1*M)}var w;w=x._header.signature.face.hasIndex?o:a,w.bind(),w.setUniforms(P),x.begin(),x.render(),x.end(),w.unbind()}else r.begin(),r.setTechnique(s),r.setDefaultGlobals(),r.setPrimitiveMode("FILL"),r.setGlobals(P),r.setModel(b),r.renderModel(),r.end();e.disable(e.BLEND),e.depthMask(!0),e.disable(e.DEPTH_TEST),n.model.pop()}}}if(this._measurementStage>=2){e.enable(e.DEPTH_TEST),e.depthFunc(e.LESS),n.model.push();var C={uWorldViewProjectionMatrix:n.modelViewProjectionMatrix,uLineColor:[.5,1,.5,1],uPointA:this._pointA,uPointB:2==this._measurementStage?this._pointA:this._pointB};r.begin(),r.setTechnique(d),r.setDefaultGlobals(),r.setGlobals(C),r.setPrimitiveMode("LINE"),r.setModel(this.simpleLineModel),r.renderModel(),r.setPrimitiveMode("POINT"),r.setModel(this.simpleLineModel),r.renderModel(),r.end(),C={uWorldViewProjectionMatrix:n.modelViewProjectionMatrix,uLineColor:[.2,.4,.2,.5],uPointA:this._pointA,uPointB:2==this._measurementStage?this._pointA:this._pointB},e.depthFunc(e.GREATER),e.depthMask(!1),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE),r.begin(),r.setTechnique(d),r.setDefaultGlobals(),r.setGlobals(C),r.setPrimitiveMode("LINE"),r.setModel(this.simpleLineModel),r.renderModel(),r.setPrimitiveMode("POINT"),r.setModel(this.simpleLineModel),r.renderModel(),r.end(),e.disable(e.BLEND),e.depthMask(!0),e.depthFunc(e.LESS),e.disable(e.DEPTH_TEST),n.model.pop()}for(var D in g){var L=g[D],S=h[L.mesh];if(S){var b=S.renderable;if(b&&L.visible){e.enable(e.DEPTH_TEST),e.depthMask(!1),e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE),n.model.push(),n.model.multiply(v.transform.matrix),n.model.multiply(L.transform.matrix),n.model.multiply(S.transform.matrix);var P={uWorldViewProjectionMatrix:n.modelViewProjectionMatrix,uViewSpaceNormalMatrix:n.viewSpaceNormalMatrix,uViewSpaceLightDirection:this._lightDirection,uColorID:[L.color[0],L.color[1],L.color[2],L.alpha]};if(S.isNexus){if(!b.isReady)continue;var x=b;x.modelMatrix=n.modelMatrix,x.viewMatrix=n.viewMatrix,x.projectionMatrix=n.projectionMatrix,x.viewport=[0,0,i,t];var w;w=x._header.signature.face.hasIndex?l:c,w.bind(),w.setUniforms(P),x.begin(),x.render(),x.end(),w.unbind()}else r.begin(),r.setTechnique(u),r.setDefaultGlobals(),r.setPrimitiveMode("FILL"),r.setGlobals(P),r.setModel(b),r.renderModel(),r.end();e.disable(e.BLEND),e.depthMask(!0),e.disable(e.DEPTH_TEST),n.model.pop()}}}},_drawScenePickingXYZ:function(){var e=this.ui.gl,i=this.ui.width,t=this.ui.height,n=this.xform,r=this.renderer,o=this.colorCodedXYZNXSProgram,a=this.colorCodedXYZPointNXSProgram,s=this.colorCodedXYZPLYtechnique,l=this._scene.meshes,c=this._scene.modelInstances,u=this._scene.space,d=new Uint8Array(4);this._createPickFramebuffer(i,t),this._setupDraw(),this.pickFramebuffer.bind(),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT|e.STENCIL_BUFFER_BIT),this.pickFramebuffer.unbind();for(var h in c){var m=c[h],g=l[m.mesh];if(g){var v=g.renderable;if(v&&m.visible){e.enable(e.DEPTH_TEST),n.model.push(),n.model.multiply(u.transform.matrix),n.model.multiply(m.transform.matrix),n.model.multiply(g.transform.matrix);var f={uWorldViewProjectionMatrix:n.modelViewProjectionMatrix};if(g.isNexus){if(!v.isReady)continue;var _=v;_.modelMatrix=n.modelMatrix,_.viewMatrix=n.viewMatrix,_.projectionMatrix=n.projectionMatrix,_.viewport=[0,0,i,t],this.pickFramebuffer.bind();var p;p=_._header.signature.face.hasIndex?o:a,p.bind(),p.setUniforms(f),_.begin(),_.render(),_.end(),p.unbind(),this.pickFramebuffer.unbind()}else r.begin(),r.setFramebuffer(this.pickFramebuffer),r.setTechnique(s),r.setDefaultGlobals(),r.setPrimitiveMode("FILL"),r.setGlobals(f),r.setModel(v),r.renderModel(),r.end();e.disable(e.DEPTH_TEST),n.model.pop()}}}this.pickFramebuffer.readPixels(d,{x:this._pickpoint[0],y:this._pickpoint[1],width:1,height:1,format:e.RGBA,type:e.UNSIGNED_BYTE});var S,b=d[0]/255,P=d[1]/255,x=d[2]/255,M=d[3]/255,w=M+x/256+P/65536+b/16777216;return 0==b&&0==P&&0==x?null:(S=n.unproject([this._pickpoint[0]/i,this._pickpoint[1]/t,w]),[S[0],S[1],S[2]])},_drawScenePickingInstances:function(){var e=this.ui.gl,i=this.ui.width,t=this.ui.height,n=this.xform,r=this.renderer,o=this.colorCodedIDNXSProgram,a=this.colorCodedIDPointNXSProgram,s=this.colorCodedIDPLYtechnique,l=this._scene.meshes,c=this._scene.modelInstances,u=this._scene.space,d=new Uint8Array(4);this._createPickFramebuffer(i,t),this._setupDraw(),this.pickFramebuffer.bind(),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT|e.STENCIL_BUFFER_BIT),this.pickFramebuffer.unbind();for(var h in c){var m=c[h],g=l[m.mesh];if(g){var v=g.renderable;if(v&&m.visible){e.enable(e.DEPTH_TEST),n.model.push(),n.model.multiply(u.transform.matrix),n.model.multiply(m.transform.matrix),n.model.multiply(g.transform.matrix);var f=this._ID2Color(m.ID),_={uWorldViewProjectionMatrix:n.modelViewProjectionMatrix,uColorID:f};if(g.isNexus){if(!v.isReady)continue;var p=v;p.modelMatrix=n.modelMatrix,p.viewMatrix=n.viewMatrix,p.projectionMatrix=n.projectionMatrix,p.viewport=[0,0,i,t],this.pickFramebuffer.bind();var S;S=p._header.signature.face.hasIndex?o:a,S.bind(),S.setUniforms(_),p.begin(),p.render(),p.end(),S.unbind(),this.pickFramebuffer.unbind()}else r.begin(),r.setFramebuffer(this.pickFramebuffer),r.setTechnique(s),r.setDefaultGlobals(),r.setPrimitiveMode("FILL"),r.setGlobals(_),r.setModel(v),r.renderModel(),r.end();e.disable(e.DEPTH_TEST),n.model.pop()}}}return this.pickFramebuffer.readPixels(d,{x:this._pickpoint[0],y:this._pickpoint[1],width:1,height:1,format:e.RGBA,type:e.UNSIGNED_BYTE}),d},_drawScenePickingSpots:function(){var e=this.ui.gl,i=this.ui.width,t=this.ui.height,n=this.xform,r=this.renderer,o=this.colorCodedIDNXSProgram,a=this.colorCodedIDPointNXSProgram,s=this.colorCodedIDPLYtechnique,l=this._scene.meshes,c=this._scene.spots,u=this._scene.modelInstances,d=this._scene.space,h=new Uint8Array(4);this._createPickFramebuffer(i,t),this._setupDraw(),this.pickFramebuffer.bind(),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT|e.STENCIL_BUFFER_BIT),this.pickFramebuffer.unbind();for(var m in u){var g=u[m],v=l[g.mesh];if(v){var f=v.renderable;if(f&&g.visible){e.enable(e.DEPTH_TEST),n.model.push(),n.model.multiply(d.transform.matrix),n.model.multiply(g.transform.matrix),n.model.multiply(v.transform.matrix);var _={uWorldViewProjectionMatrix:n.modelViewProjectionMatrix,uColorID:[0,0,0,0]};if(v.isNexus){if(!f.isReady)continue;var p=f;p.modelMatrix=n.modelMatrix,p.viewMatrix=n.viewMatrix,p.projectionMatrix=n.projectionMatrix,p.viewport=[0,0,i,t],this.pickFramebuffer.bind();var S;S=p._header.signature.face.hasIndex?o:a,S.bind(),S.setUniforms(_),p.begin(),p.render(),p.end(),S.unbind(),this.pickFramebuffer.unbind()}else r.begin(),r.setFramebuffer(this.pickFramebuffer),r.setTechnique(s),r.setDefaultGlobals(),r.setPrimitiveMode("FILL"),r.setGlobals(_),r.setModel(f),r.renderModel(),r.end();e.disable(e.DEPTH_TEST),n.model.pop()}}}for(var b in c){var P=c[b],v=l[P.mesh];if(v){var f=v.renderable;if(f&&P.visible){e.enable(e.DEPTH_TEST),n.model.push(),n.model.multiply(d.transform.matrix),n.model.multiply(P.transform.matrix),n.model.multiply(v.transform.matrix);var x=this._ID2Color(P.ID),_={uWorldViewProjectionMatrix:n.modelViewProjectionMatrix,uColorID:x};if(v.isNexus){if(!f.isReady)continue;var p=f;p.modelMatrix=n.modelMatrix,p.viewMatrix=n.viewMatrix,p.projectionMatrix=n.projectionMatrix,p.viewport=[0,0,i,t],this.pickFramebuffer.bind();var S;S=p._header.signature.face.hasIndex?o:a,S.bind(),S.setUniforms(_),p.begin(),p.render(),p.end(),S.unbind(),this.pickFramebuffer.unbind()}else r.begin(),r.setFramebuffer(this.pickFramebuffer),r.setTechnique(s),r.setDefaultGlobals(),r.setPrimitiveMode("FILL"),r.setGlobals(_),r.setModel(f),r.renderModel(),r.end();e.disable(e.DEPTH_TEST),n.model.pop()}}}return this.pickFramebuffer.readPixels(h,{x:this._pickpoint[0],y:this._pickpoint[1],width:1,height:1,format:e.RGBA,type:e.UNSIGNED_BYTE}),h},_drawNull:function(){var e=this.ui.gl;e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT|e.STENCIL_BUFFER_BIT)},_createLineModel:function(){var e=this.ui.gl;this.simpleLineModel=new SglModel(e,{vertices:{position:[0,0,0,1,1,1],normal:[0,0,0,0,0,0],color:{value:[1,0,0]}},primitives:["lines","points"]})},onInitialize:function(){var e=this.ui.gl;e.getExtension("EXT_frag_depth"),e.clearColor(.5,.5,.5,1);var i=new SglTransformationStack,t=new SglModelRenderer(e),n=SglMat4.identity();this.basicNXSProgram=this._createStandardNXSProgram(),this.pointNXSProgram=this._createStandardPointNXSProgram(),this.colorCodedIDNXSProgram=this._createColorCodedIDNXSProgram(),this.colorCodedIDPointNXSProgram=this._createColorCodedIDPointNXSProgram(),this.colorCodedXYZNXSProgram=this._createXYZNXSProgram(),this.colorCodedXYZPointNXSProgram=this._createXYZPointNXSProgram(),this.basicPLYTechnique=this._createStandardPLYtechnique(),this.colorCodedIDPLYtechnique=this._createColorCodedIDPLYtechnique(),this.colorCodedXYZPLYtechnique=this._createXYZPLYtechnique(),this.colorShadedNXSProgram=this._createColorShadedNXSProgram(),this.colorShadedPointNXSProgram=this._createColorShadedPointNXSProgram(),this.colorShadedPLYtechnique=this._createColorShadedPLYtechnique(),
this.simpleLinetechnique=this._createSimpleLinetechnique(),this.renderer=t,this.xform=i,this.viewMatrix=n,this.sceneCenter=[0,0,0],this.sceneRadiusInv=1,this.ui.animateRate=0,this.diff=0,this.x=0,this.y=0,this.dstartx=0,this.dstarty=0,this.dendx=0,this.dendy=0,this.ax1=0,this.ay1=0,this._scene=null,this._sceneParsed=!1,this._objectsToLoad=0,this._targetInstanceName=null,this._targetHotSpotName=null,this._instancesProgressiveID=1,this._spotsProgressiveID=1,this._animating=!1,this._movingLight=!1,this._clickable=!1,this._onHover=!1,this._lastCursor="default",this._pickedInstance=null,this._pickedSpot=null,this._lastPickedInstance=null,this._lastPickedSpot=null,this._lastInstanceID=0,this._lastSpotID=0,this._pickpoint=[10,10],this._isMeasuring=!1,this._measurementStage=0,this._pointA=[0,0,0],this._pointB=[0,0,0],this.measurement=0,this._onPickedInstance=0,this._onPickedSpot=0,this._onEnterInstance=0,this._onEnterSpot=0,this._onLeaveInstance=0,this._onLeaveSpot=0,this._onEndMeasurement=0},onDrag:function(e,i,t,n){var r=this.ui;if(this.ax1=i/(r.width-1)*2-1,this.ay1=t/(r.height-1)*2-1,this._movingLight&&r.isMouseButtonDown(0))return void this.rotateLight(this.ax1/2,this.ay1/2);this.dstartx==r.dragStartX(e)&&(this.diff=r.dragEndX(e)-this.dendx,0!=r.dragDeltaX(e)&&(this.x+=this.diff/500)),this.dstarty==r.dragStartY(e)&&(this.diff=r.dragEndY(e)-this.dendy,0!=r.dragDeltaY(e)&&(this.y+=this.diff/500));var o=SGL_TRACKBALL_NO_ACTION;r.isMouseButtonDown(0)&&r.isKeyDown(17)||r.isMouseButtonDown(1)?o=SGL_TRACKBALL_PAN:r.isMouseButtonDown(0)&&(o=SGL_TRACKBALL_ROTATE);var a=this.trackball._matrix.slice();this.trackball.action=o,this.trackball.track(this.viewMatrix,this.x,this.y,0);for(var s,l=0;l<a.length;l++)if(a[l]!=this.trackball._matrix[l]){s=!0;break}s&&r.postDrawEvent(),this.dstartx=r.dragStartX(e),this.dstarty=r.dragStartY(e),this.dendx=r.dragEndX(e),this.dendy=r.dragEndY(e)},onMouseMove:function(e,i,t){t.target.id==this.ui.gl.canvas.id&&(!this._onHover||this.ui.isDragging(0)||this.isAnimate()||this._pickingRefresh(e,i))},onMouseOut:function(e,i){this._onHover&&!this.ui.isDragging(0)&&this._pickingRefresh()},onMouseButtonDown:function(e,i,t,n){this._clickable=!0},onMouseButtonUp:function(e,i,t,n){this._clickable&&!this.ui.isDragging(0)&&0==e&&-1!=n.detail&&(this._pickingRefresh(i,t),this._onPickedSpot&&null!=this._pickedSpot&&this._onPickedSpot(this._pickedSpot),this._onPickedInstance&&null!=this._pickedInstance&&this._onPickedInstance(this._pickedInstance),this._measureRefresh(e,i,t,n)),this._clickable=!1},onKeyPress:function(e,i){this._isDebugging&&(("80"==i.charCode||"112"==i.charCode)&&console.log(this.trackball.getState()),"49"==i.charCode&&(Nexus.Debug.nodes=!Nexus.Debug.nodes,this.ui.postDrawEvent()))},onMouseWheel:function(e,i,t,n){var r=this.ui,o=SGL_TRACKBALL_SCALE,a=0>e?.9:1.1,s=this.trackball._matrix.slice();this.trackball.action=o,this.trackball.track(this.viewMatrix,0,0,a),this.trackball.action=SGL_TRACKBALL_NO_ACTION;for(var l,c=0;c<s.length;c++)if(s[c]!=this.trackball._matrix[c]){l=!0;break}l&&r.postDrawEvent()},onAnimate:function(e){this._isSceneReady()&&(this.trackball.tick(e)?this.ui.postDrawEvent():(this.ui.animateRate=0,this._onHover&&!this.ui.isDragging(0)&&this._pickingRefresh(this.ui.cursorX,this.ui.cursorY)))},onDraw:function(){this._isSceneReady()?this._drawScene():this._drawNull()},supportsWebGL:function(){return this._supportsWebGL},toggleDebugMode:function(){this._isDebugging=!this._isDebugging},setScene:function(e){if(e){var i=this._parseScene(e);if(i){this._scene=i,this._objectsToLoad=0;for(var t in i.meshes){var n=i.meshes[t];n.url&&this._objectsToLoad++}for(var r in i.texturedQuads){var o=i.texturedQuads[r];o.url&&this._objectsToLoad++}i.background.image&&this._objectsToLoad++;var a=new this._scene.trackball.type;a.setup(this._scene.trackball.trackOptions),this.trackball=a;var s=this,l=this.ui.gl;for(var t in i.meshes){var n=i.meshes[t];if(n.url)if(String(n.url).lastIndexOf(".nxs")==String(n.url).length-4){var c=new Nexus.Renderer(l);n.renderable=c,n.isNexus=!0,c.targetError=1,c._targetFps=25,c.onSceneReady=function(){s._onMeshReady()},c.onUpdate=this.ui.postDrawEvent,c.open(n.url)}else n.renderable=null,n.isNexus=!1,sglRequestBinary(n.url,{onSuccess:function(e){return function(i){s._onPlyLoaded(i,e,l)}}(n)})}for(var r in i.texturedQuads){var o=i.texturedQuads[r];o.url&&(i.background.texture=new SglTexture2D(l,{internalFormat:l.RGBA,format:l.RGBA,type:l.UNSIGNED_BYTE,generateMipmap:!0,onSuccess:function(){s._onTextureReady()},url:o.url}))}i.background.image&&(i.background.texture=new SglTexture2D(l,{internalFormat:l.RGBA,format:l.RGBA,type:l.UNSIGNED_BYTE,generateMipmap:!0,onSuccess:function(){s._onBackgroundReady()},url:i.background.image})),this._createLineModel(),this._testReady(),this._sceneParsed=!0}}},resetTrackball:function(){this.trackball.reset(),this.trackball.track(SglMat4.identity(),0,0,0),this._lightDirection=[0,0,-1],this.ui.postDrawEvent()},getTrackballPosition:function(){return this.trackball.getState()},setTrackballPosition:function(e){this.trackball.setState(e),this.ui.postDrawEvent()},animateToTrackballPosition:function(e){this.ui.animateRate=30,this.trackball.animateToState(e),this.ui.postDrawEvent()},isAnimate:function(){return this.ui.animateRate>0?this._animating=!0:this._animating=!1,this._animating},setInstanceSolidColorByName:function(e,i,t,n){var r=this.ui,o=this._scene.modelInstances;if(e==HOP_ALL){for(var a in o)o[a].useSolidColor=i;n&&(o[e].color=n)}else o[e]&&(o[e].useSolidColor=i,n&&(o[e].color=n));t&&r.postDrawEvent()},setInstanceSolidColor:function(e,i,t,n){var r=this.ui,o=this._scene.modelInstances;for(var a in o)if(e==HOP_ALL)o[a].useSolidColor=i,n&&(o[a].color=n);else for(var s in o[a].tags)o[a].tags[s]==e&&(o[a].useSolidColor=i,n&&(o[a].color=n));t&&r.postDrawEvent()},toggleInstanceSolidColorByName:function(e,i){var t=this.ui,n=this._scene.modelInstances;if(e==HOP_ALL)for(var r in n)n[r].useSolidColor=!n[r].useSolidColor;else n[e]&&(n[e].useSolidColor=!n[e].useSolidColor);i&&t.postDrawEvent()},toggleInstanceSolidColor:function(e,i){var t=this.ui,n=this._scene.modelInstances;for(var r in n)if(e==HOP_ALL)n[r].useSolidColor=!n[r].useSolidColor;else for(var o in n[r].tags)n[r].tags[o]==e&&(n[r].useSolidColor=!n[r].useSolidColor);i&&t.postDrawEvent()},setInstanceTransparencyByName:function(e,i,t,n){var r=this.ui,o=this._scene.modelInstances;if(e==HOP_ALL){for(var a in o)o[a].useTransparency=i;n&&(o[a].alpha=n)}else o[e]&&(o[e].useTransparency=i,n&&(o[e].alpha=n));t&&r.postDrawEvent()},setInstanceTransparency:function(e,i,t,n){var r=this.ui,o=this._scene.modelInstances;for(var a in o)if(e==HOP_ALL)o[a].useTransparency=i,n&&(o[a].alpha=n);else for(var s in o[a].tags)o[a].tags[s]==e&&(o[a].useTransparency=i,n&&(o[a].alpha=n));t&&r.postDrawEvent()},toggleInstanceTransparencyByName:function(e,i){var t=this.ui,n=this._scene.modelInstances;if(e==HOP_ALL)for(var r in n)n[r].useTransparency=!n[r].useTransparency;else n[e]&&(n[e].useTransparency=!n[e].useTransparency);i&&t.postDrawEvent()},toggleInstanceTransparency:function(e,i){var t=this.ui,n=this._scene.modelInstances;for(var r in n)if(e==HOP_ALL)n[r].useTransparency=!n[r].useTransparency;else for(var o in n[r].tags)n[r].tags[o]==e&&(n[r].useTransparency=!n[r].useTransparency);i&&t.postDrawEvent()},setInstanceVisibilityByName:function(e,i,t){var n=this.ui,r=this._scene.modelInstances;if(e==HOP_ALL)for(var o in r)r[o].visible=i;else r[e]&&(r[e].visible=i);t&&n.postDrawEvent()},setInstanceVisibility:function(e,i,t){var n=this.ui,r=this._scene.modelInstances;for(var o in r)if(e==HOP_ALL)r[o].visible=i;else for(var a in r[o].tags)r[o].tags[a]==e&&(r[o].visible=i);t&&n.postDrawEvent()},toggleInstanceVisibilityByName:function(e,i){var t=this.ui,n=this._scene.modelInstances;if(e==HOP_ALL)for(var r in n)n[r].visible=!n[r].visible;else n[e]&&(n[e].visible=!n[e].visible);i&&t.postDrawEvent()},toggleInstanceVisibility:function(e,i){var t=this.ui,n=this._scene.modelInstances;for(var r in n)if(e==HOP_ALL)n[r].visible=!n[r].visible;else for(var o in n[r].tags)n[r].tags[o]==e&&(n[r].visible=!n[r].visible);i&&t.postDrawEvent()},isInstanceVisibilityEnabledByName:function(e){var i=!1,t=this._scene.modelInstances;if(e&&e!=HOP_ALL){if(t[e]&&t[e].visible)return i=!0}else for(var n in t)if(t[n].visible)return i=!0;return i},isInstanceVisibilityEnabled:function(e){var i=!1,t=this._scene.modelInstances;for(var n in t)if(e&&e!=HOP_ALL){for(var r in t[n].tags)if(t[n].tags[r]==e&&t[n].visible)return i=!0}else if(t[n].visible)return i=!0;return i},setSpotVisibilityByName:function(e,i,t){var n=this.ui,r=this._scene.spots;if(e==HOP_ALL)for(var o in r)r[o].visible=i;else r[e]&&(r[e].visible=i);t&&n.postDrawEvent()},setSpotVisibility:function(e,i,t){var n=this.ui,r=this._scene.spots;for(var o in r)if(e==HOP_ALL)r[o].visible=i;else for(var a in r[o].tags)r[o].tags[a]==e&&(r[o].visible=i);t&&n.postDrawEvent()},toggleSpotVisibilityByName:function(e,i){var t=this.ui,n=this._scene.spots;if(e==HOP_ALL)for(var r in n)n[r].visible=!n[r].visible;else n[e]&&(n[e].visible=!n[e].visible);i&&t.postDrawEvent()},toggleSpotVisibility:function(e,i){var t=this.ui,n=this._scene.spots;for(var r in n)if(e==HOP_ALL)n[r].visible=!n[r].visible;else for(var o in n[r].tags)n[r].tags[o]==e&&(n[r].visible=!n[r].visible);i&&t.postDrawEvent()},isSpotVisibilityEnabledByName:function(e){var i=!1,t=this._scene.spots;if(e&&e!=HOP_ALL){if(t[e]&&t[e].visible)return i=!0}else for(var n in t)if(t[n].visible)return i=!0;return i},isSpotVisibilityEnabled:function(e){var i=!1,t=this._scene.spots;for(var n in t)if(e&&e!=HOP_ALL){for(var r in t[n].tags)if(t[n].tags[r]==e&&t[n].visible)return i=!0}else if(t[n].visible)return i=!0;return i},zoomIn:function(){this.onMouseWheel(-1)},zoomOut:function(){this.onMouseWheel(1)},rotateLight:function(e,i){e*=2,i*=2;var t=Math.sqrt(e*e+i*i);t>=1&&(e/=t,i/=t,t=.999);var n=Math.sqrt(1-t*t);this._lightDirection=[-e,-i,-n],this.ui.postDrawEvent()},enableLightTrackball:function(e){this._movingLight=e},isLightTrackballEnabled:function(){return this._movingLight},enableOnHover:function(e){this._onHover=e},isOnHoverEnabled:function(){return this._onHover},enableMeasurementTool:function(e){this._isMeasuring=e,e?this._startMeasurement():this._stopMeasurement()},isMeasurementToolEnabled:function(){return this._isMeasuring}};
var parsePly=function(){function trim(e){for(var t=e,n=t.length,r=0,s=" \n\r	";n>r&&s.indexOf(t.charAt(r))>=0;)r++;for(t=t.substring(r,t.length),r=t.length-1;r>0&&s.indexOf(t.charAt(r))>=0;)r--;return t=t.substring(0,r+1)}function extractHeader(e){if(!e||!e.view||!e.view.buffer)return null;var t=new Uint8Array(e.view.buffer),n="end_header",r="",s=!1,i=null,a=null,o=e.pos,u=0,l=0;for(o=0,l=t.byteLength;l>o;++o){if(i=String.fromCharCode(t[o]),r+=i,"\n"===i&&o>=n.length&&(u=o-n.length,"\r"==a&&u--,r.substring(u,u+n.length)==n)){s=!0;break}a=i}return e.pos=o,s?(e.pos++,r):null}function splitHeader(e){for(var t=e.split("\n"),n=[],r=null,s=null,i=0,a=t.length;a>i;++i)if(s=trim(t[i]),s&&(r=s.split(" "),r.length>0)){for(var o=0,u=r.length;u>o;++o)r[o]=trim(r[o]);n.push(r)}return n}function parseHeader(e){if(!e||e.length<=0)return null;if("ply"!=e[0][0])return null;for(var t=null,n=null,r=null,s=null,i=0,a={format:null,elements:[],elementMap:{},comments:[],others:[]},o=1;o<e.length-1;++o)switch(r=e[o],i=r.length,s=r[0].toLowerCase()){case"format":i>=3&&(a.format={name:r[1],version:r[2],binary:r[1].toLowerCase().indexOf("binary")>=0,littleEndian:"binary_little_endian"==r[1].toLowerCase()});break;case"comment":a.comments.push(r.slice(1));break;case"element":i>=3&&(t={name:r[1],count:parseInt(r[2]),properties:[],propertyMap:{}},a.elements.push(t),a.elementMap[t.name.toLowerCase()]=t);break;case"property":t&&i>=3&&(n={name:r[i-1],type:r.slice(1,i-1)},t.properties.push(n),t.propertyMap[n.name.toLowerCase()]=n);break;default:a.others.push(r.slice())}return a.format?a:!1}function setupLines(e,t){for(var n=0,r=e.length;r>n;++n)e[n]=t+e[n];return e}function generateReadValue(e,t,n,r,s,i,a,o){var u=[],l=t[n];if("list"==l.toLowerCase()){var p="n"+a,f="v"+a,h="i"+a;o[p]=!0,o[f]=!0,o[h]=!0,a++,n++,u=u.concat(u,generateReadValue(""+p,t,n,r,s,"",a,o)),n++,u.push(f+" = new Array("+p+");"),u.push("for ("+h+"=0; "+h+"<"+p+"; ++"+h+") {"),u=u.concat(generateReadValue(f+"["+h+"]",t,n,r,s,tabStr,a,o)),u.push("}"),u.push(e+" = "+f+";")}else if(r)switch(l){case"char":case"int8":u.push(e+" = view.getInt8(pos, "+s+");"),u.push("pos += 1;");break;case"uchar":case"uint8":u.push(e+" = view.getUint8(pos, "+s+");"),u.push("pos += 1;");break;case"short":case"int16":u.push(e+" = view.getInt16(pos, "+s+");"),u.push("pos += 2;");break;case"ushort":case"uint16":u.push(e+" = view.getUint16(pos, "+s+");"),u.push("pos += 2;");break;case"int":case"int32":u.push(e+" = view.getInt32(pos, "+s+");"),u.push("pos += 4;");break;case"uint":case"uint32":u.push(e+" = view.getUint32(pos, "+s+");"),u.push("pos += 4;");break;case"float":case"float32":u.push(e+" = view.getFloat32(pos, "+s+");"),u.push("pos += 4;");break;case"double":case"float64":u.push(e+" = view.getFloat64(pos, "+s+");"),u.push("pos += 8;")}else switch(l){case"char":case"int8":case"uchar":case"uint8":case"short":case"int16":case"ushort":case"uint16":case"int":case"int32":case"uint":case"uint32":u.push(e+" = parseInt(view[pos]);"),u.push("pos += 1;");break;case"float":case"float32":case"double":case"float64":u.push(e+" = parseFloat(view[pos]);"),u.push("pos += 1;")}return setupLines(u,i),u}function generateReadProperty(e,t,n,r,s,i,a){var o=generateReadValue(e,t,0,n,r,"",i,a);return o}function generateReadElement(e,t,n,r,s,i,a){for(var o=null,u=[],l=0,p=t.length;p>l;++l)o=t[l],u=u.concat(generateReadProperty(e+'["'+o.name+'"]',o.type,n,r,"",i,a)),u.push("");return setupLines(u,s),u}function generateReadElements(e,t,n,r,s,i,a){var o=[],u="n"+i,l="i"+i;return i++,a[u]=!0,a[l]=!0,a.element=!0,a.elem=!0,a.args=!0,o.push("element = info.elements["+e+"];"),o.push(u+" = element.count;"),o.push("elem = { };"),o.push("args = [ info, element, 0, elem];"),o.push("callbacks.onBeginElements.call(handler, info, element);"),o.push("for ("+l+"=0; "+l+"<"+u+"; ++"+l+") {"),o=o.concat(generateReadElement("elem",t.properties,n,r,tabStr,i,a)),o.push(tabStr+"args[2] = "+l+";"),o.push(tabStr+"callbacks.onElement.apply(handler, args);"),o.push("}"),o.push("callbacks.onEndElements.call(handler, info, element);"),setupLines(o,s),o}function generateReadMesh(e,t,n){var r=[];r.push("function (data, info, callbacks, handler) {"),r.push(tabStr+"var view = data.view;"),r.push(tabStr+"var pos  = data.pos;"),r.push("");for(var s={},i=[],a=0,o=e.length;o>a;++a)i=i.concat(generateReadElements(a,e[a],t,n,tabStr,0,s)),i.push("");var u=[];for(var l in s)u.push(l);u.sort(),r.push(tabStr+"var "+u.join(", ")+";"),r.push(""),r.push(tabStr+"callbacks.onBeginContent.call(handler, info);"),r=r.concat(i),r.push(tabStr+"callbacks.onEndContent.call(handler, info);"),r.push(tabStr+"data.pos = pos;"),r.push("}"),setupLines(r,"");for(var p="",a=0,o=r.length;o>a;++a)p+=r[a]+"\n";return p}function getMeshInfo(e){if(!e)return null;var t=extractHeader(e);if(!t)return null;var n=splitHeader(t);if(!n)return null;var r=parseHeader(n);return r?r:null}function mainParsePly(buffer,handler){function emptyFunc(){}if(!buffer)return null;handler=handler||{};var callbacks={onBegin:handler.onBegin||emptyFunc,onHeader:handler.onHeader||emptyFunc,onBeginContent:handler.onBeginContent||emptyFunc,onBeginElements:handler.onBeginElements||emptyFunc,onElement:handler.onElement||emptyFunc,onEndElements:handler.onEndElements||emptyFunc,onEndContent:handler.onEndContent||emptyFunc,onEnd:handler.onEnd||emptyFunc},dataView=new DataView(buffer),data={view:dataView,pos:0},info=getMeshInfo(data);if(!info)return!1;info.format.binary||(data.view=Array.prototype.map.call(new Uint8Array(buffer,data.pos),function(e){return String.fromCharCode(e)}).join("").split(" "),data.pos=0);var readMeshStr=generateReadMesh(info.elements,info.format.binary,info.format.littleEndian),readMeshFunc=eval("("+readMeshStr+")");for(var e in info.elements)for(var p in info.elements[e].propertyMap)info.elements[e].propertyMap[p].canonicType=canonicTypes[info.elements[e].propertyMap[p].type];return callbacks.onBegin.call(handler),callbacks.onHeader.call(handler,info),readMeshFunc(data,info,callbacks,handler),callbacks.onEnd.call(handler),!0}var canonicTypes={"char":"int8",int8:"int8",uchar:"uint8",uint8:"uint8","short":"int16",int16:"int16",ushort:"uint16",uint16:"uint16","int":"int32",int32:"int32",uint:"uint32",uint32:"uint32","float":"float32",float32:"float32","double":"float64",float64:"float64"},tabStr="	";return mainParsePly}(),importPly=function(){function emptyFunction(){}function propertiesTypes(){for(var e=[],t={},n=null,r=0;r<arguments.length;++r){if(n=arguments[r],!n)return e;t[n.canonicType]=1}for(var s in t)e.push(s);return e}function PlyHandler(e){this._buffer=e,this._modelDescriptor=null,this._verticesCount=0,this._vertexAttributes=null,this._vertexStride=0,this._vertexBuffer=null,this._handleVertex=emptyFunction,this._facesCount=0,this._indexBuffer=null,this._handleFace=emptyFunction,this._view=null,this._boundingBox={min:[1e6,1e6,1e6],max:[-1e6,-1e6,-1e6]}}function mainImportPly(e,t){var n=new PlyHandler(e,t);parsePly(e,n);var r=n.modelDescriptor;return r}return PlyHandler.prototype={get modelDescriptor(){return this._modelDescriptor},onBegin:function(){},onHeader:function(header){var tabStr="	",elem=null,props=null,ptypes=null,verticesCount=0,vertexLines=null,vertexAttributes={},vertexStride=0;if(elem=header.elementMap.vertex,elem&&elem.count>0){if(verticesCount=elem.count,props=elem.propertyMap,vertexLines=[],vertexLines.push("function (header, elementInfo, index, element) {"),vertexLines.push(tabStr+"var littleEndian = SpiderGL.Type.LITTLE_ENDIAN;"),vertexLines.push(tabStr+"var sf32         = SpiderGL.Type.SIZEOF_FLOAT32;"),vertexLines.push(tabStr+"var sui8         = SpiderGL.Type.SIZEOF_UINT8;"),vertexLines.push(tabStr+"var offset       = index * this._vertexStride;"),vertexLines.push(tabStr+"var view         = this._view;"),vertexLines.push(""),ptypes=propertiesTypes(props.x,props.y,props.z),1==ptypes.length)switch(ptypes[0]){case"float32":vertexLines.push(tabStr+"view.setFloat32(offset, element.x, littleEndian); offset += sf32;"),vertexLines.push(tabStr+"view.setFloat32(offset, element.y, littleEndian); offset += sf32;"),vertexLines.push(tabStr+"view.setFloat32(offset, element.z, littleEndian); offset += sf32;"),vertexLines.push(""),vertexAttributes.position={size:3,type:SpiderGL.Type.FLOAT32,offset:vertexStride},vertexStride+=3*SpiderGL.Type.SIZEOF_FLOAT32}if(ptypes=propertiesTypes(props.nx,props.ny,props.nz),1==ptypes.length)switch(ptypes[0]){case"float32":vertexLines.push(tabStr+"view.setFloat32(offset, element.nx, littleEndian); offset += sf32;"),vertexLines.push(tabStr+"view.setFloat32(offset, element.ny, littleEndian); offset += sf32;"),vertexLines.push(tabStr+"view.setFloat32(offset, element.nz, littleEndian); offset += sf32;"),vertexLines.push(""),vertexAttributes.normal={size:3,type:SpiderGL.Type.FLOAT32,offset:vertexStride},vertexStride+=3*SpiderGL.Type.SIZEOF_FLOAT32}if(ptypes=propertiesTypes(props.red,props.green,props.blue),1==ptypes.length)switch(ptypes[0]){case"uint8":vertexLines.push(tabStr+"view.setUint8(offset, element.red  ); offset += sui8;"),vertexLines.push(tabStr+"view.setUint8(offset, element.green); offset += sui8;"),vertexLines.push(tabStr+"view.setUint8(offset, element.blue ); offset += sui8;"),vertexLines.push(tabStr+"view.setUint8(offset, 255          ); offset += sui8;"),vertexLines.push(""),vertexAttributes.color={size:4,type:SpiderGL.Type.UINT8,offset:vertexStride,normalized:!0},vertexStride+=4*SpiderGL.Type.SIZEOF_UINT8;break;case"float32":vertexLines.push(tabStr+"view.setFloat32(offset, element.red,   littleEndian); offset += sf32;"),vertexLines.push(tabStr+"view.setFloat32(offset, element.green, littleEndian); offset += sf32;"),vertexLines.push(tabStr+"view.setFloat32(offset, element.blue,  littleEndian); offset += sf32;"),vertexLines.push(tabStr+"view.setFloat32(offset, 1.0,           littleEndian); offset += sf32;"),vertexLines.push(""),vertexAttributes.color={size:4,type:SpiderGL.Type.FLOAT32,offset:vertexStride},vertexStride+=4*SpiderGL.Type.SIZEOF_FLOAT32}if(ptypes=propertiesTypes(props.texture_u,props.texture_v),1==ptypes.length)switch(ptypes[0]){case"float32":vertexLines.push(tabStr+"view.setFloat32(offset, element.texture_u, littleEndian); offset += sf32;"),vertexLines.push(tabStr+"view.setFloat32(offset, element.texture_v, littleEndian); offset += sf32;"),vertexLines.push(""),vertexAttributes.texcoord={size:2,type:SpiderGL.Type.FLOAT32,offset:vertexStride},vertexStride+=2*SpiderGL.Type.SIZEOF_FLOAT32}vertexLines.push("}")}var facesCount=0,faceLines=null;if(elem=header.elementMap.face,elem&&elem.count>0&&(facesCount=elem.count,props=elem.propertyMap,faceLines=[],faceLines.push("function (header, elementInfo, index, element) {"),faceLines.push(tabStr+"var littleEndian = SpiderGL.Type.LITTLE_ENDIAN;"),faceLines.push(tabStr+"var sui32        = SpiderGL.Type.SIZEOF_UINT32;"),faceLines.push(tabStr+"var offset       = index * 3 * sui32;"),faceLines.push(tabStr+"var view         = this._view;"),faceLines.push(""),props.vertex_indices?(faceLines.push(tabStr+"view.setUint32(offset, element.vertex_indices[0], littleEndian); offset += sui32;"),faceLines.push(tabStr+"view.setUint32(offset, element.vertex_indices[1], littleEndian); offset += sui32;"),faceLines.push(tabStr+"view.setUint32(offset, element.vertex_indices[2], littleEndian); offset += sui32;")):facesCount=0,faceLines.push("}")),this._mesh=null,this._verticesCount=verticesCount,this._vertexAttributes=vertexAttributes,this._vertexStride=vertexStride,this._vertexBuffer=null,this._handleVertex=emptyFunction,vertexStride>0){var vertexFuncStr=vertexLines.join("\n");this._handleVertex=eval("("+vertexFuncStr+")")}if(this._facesCount=facesCount,this._indexBuffer=null,this._handleFace=emptyFunction,facesCount>0){var faceFuncStr=faceLines.join("\n");this._handleFace=eval("("+faceFuncStr+")")}},onBeginContent:function(e){},onBeginElements:function(e,t){switch(t.name){case"vertex":this._vertexBuffer=new ArrayBuffer(this._verticesCount*this._vertexStride),this._view=new DataView(this._vertexBuffer),this._handleElement=this._handleVertex;break;case"face":this._indexBuffer=new ArrayBuffer(3*this._facesCount*SpiderGL.Type.SIZEOF_UINT32),this._view=new DataView(this._indexBuffer),this._handleElement=this._handleFace;break;default:this._view=null,this._handleElement=emptyFunction}},onElement:function(e,t,n,r){"vertex"==t.name&&(r.x<this._boundingBox.min[0]&&(this._boundingBox.min[0]=r.x),r.y<this._boundingBox.min[1]&&(this._boundingBox.min[1]=r.y),r.z<this._boundingBox.min[2]&&(this._boundingBox.min[2]=r.z),r.x>this._boundingBox.max[0]&&(this._boundingBox.max[0]=r.x),r.y>this._boundingBox.max[1]&&(this._boundingBox.max[1]=r.y),r.z>this._boundingBox.max[2]&&(this._boundingBox.max[2]=r.z)),this._handleElement(e,t,n,r)},onEndElements:function(e,t){this._view=null,this._handleElement=emptyFunction},onEndContent:function(){},onEnd:function(){if(!(this._verticesCount<=0&&this._facesCount<=0)){var e=(this._gl,{version:"0.0.1.0 EXP",meta:{},data:{vertexBuffers:{},indexBuffers:{}},access:{vertexStreams:{},primitiveStreams:{}},semantic:{bindings:{},chunks:{}},logic:{parts:{}},control:{},extra:{}}),t=e.data.vertexBuffers,n=e.data.indexBuffers,r=e.access.vertexStreams,s=e.access.primitiveStreams,i=e.semantic.bindings,a=e.semantic.chunks,o=e.logic.parts;e.extra.boundingBox=this._boundingBox;var u=65535,l="mainVertexBuffer",p="mainIndexBuffer",f="mainBinding",h="mainChunk",c="vertices",d="triangles",v="mainPart";if(this._facesCount>0){for(var m=(SpiderGL.Type.LITTLE_ENDIAN,SpiderGL.Type.SIZEOF_UINT32,Float64Array.BYTES_PER_ELEMENT,this._vertexStride),x=new Uint8Array(this._vertexBuffer),y=new Uint32Array(this._indexBuffer),b=0,S=[],_=[],L=[],g=[],w=this._facesCount,E=0,F=new Uint32Array(3*this._facesCount);w>0;){for(var T=new Uint32Array(this._verticesCount),B=new Uint32Array(u),A=0,C=0,I=0;u-3>=A&&w>0;){for(var k=0;3>k;++k,++E){var U=y[E],O=T[U];O||(B[A++]=U,T[U]=A),F[C++]=U}w--,I++}if(!(0>=I)){for(var G=new ArrayBuffer(A*m),z=new Uint8Array(G),P=new Uint16Array(C),M=0;C>M;++M)P[M]=T[F[M]]-1;for(var N=0,M=0,R=0;A>M;++M,R+=m)N=B[M]*m,z.set(x.subarray(N,N+m),R);S.push(G),_.push(A),L.push(P),g.push(C),b++}}for(var V=new Array(b),M=0;b>M;++M){var H=l+M,D=p+M,Z=f+M,j=h+M;t[H]={typedArray:S[M]};var q={vertexStreams:{},primitiveStreams:{}};i[Z]=q;for(var X in this._vertexAttributes){var Y=this._vertexAttributes[X],J=X+M;r[J]={buffer:H,size:Y.size,type:Y.type,stride:this._vertexStride,offset:Y.offset,normalized:!!Y.normalized},q.vertexStreams[X.toUpperCase()]=[J]}n[D]={typedArray:L[M]};var K=c+M;s[K]={mode:SpiderGL.Type.POINTS,count:_[M]},q.primitiveStreams.POINT=[K];var Q=d+M;s[Q]={buffer:D,mode:SpiderGL.Type.TRIANGLES,count:g[M],type:SpiderGL.Type.UINT16,offset:0},q.primitiveStreams.FILL=[Q];var W={techniques:{common:{binding:Z}}};a[j]=W,V[M]=j}o[v]={chunks:V}}else{var q={vertexStreams:{},primitiveStreams:{}};if(i[f]=q,this._verticesCount>0){var H=l;t[H]={typedArray:this._vertexBuffer};for(var X in this._vertexAttributes){var Y=this._vertexAttributes[X];r[X]={buffer:H,size:Y.size,type:Y.type,stride:this._vertexStride,offset:Y.offset,normalized:!!Y.normalized},q.vertexStreams[X.toUpperCase()]=[X]}s[c]={mode:SpiderGL.Type.POINTS,count:this._verticesCount},q.primitiveStreams.POINT=[c]}(this._verticesCount>0||this._facesCount>0)&&(a[h]={techniques:{common:{binding:f}}},o[v]={chunks:[h]})}this._modelDescriptor=e}}},mainImportPly}();
function PanTiltTrackball(){}PanTiltTrackball.prototype={setup:function(t){t=t||{};var i=sglGetDefaultObject({startCenter:[0,0,0],startPanX:0,startPanY:0,startAngleX:0,startAngleY:0,startDistance:2,minMaxDist:[.2,4],minMaxPanX:[-.7,.7],minMaxPanY:[-.7,.7],minMaxAngleX:[-70,70],minMaxAngleY:[-70,70]},t);this._action=SGL_TRACKBALL_NO_ACTION,this._new_action=!0,this._matrix=SglMat4.identity(),this._center=i.startCenter,this._startPanX=i.startPanX,this._startPanY=i.startPanY,this._startAngleX=sglDegToRad(i.startAngleX),this._startAngleY=sglDegToRad(i.startAngleY),this._startDistance=i.startDistance,this._panX=this._startPanX,this._panY=this._startPanY,this._angleX=this._startAngleX,this._angleY=this._startAngleY,this._distance=this._startDistance,this._targetPanX=this._startPanX,this._targetPanY=this._startPanY,this._targetAngleX=this._startAngleX,this._targetAngleY=this._startAngleY,this._targetDistance=this._startDistance,this._isAnimating=!1,this._speedPanX=0,this._speedPanY=0,this._speedAngleX=0,this._speedAngleY=0,this._speedDistance=0,this._minMaxDist=i.minMaxDist,this._minMaxPanX=i.minMaxPanX,this._minMaxPanY=i.minMaxPanY,this._minMaxAngleX=i.minMaxAngleX,this._minMaxAngleX[0]=sglDegToRad(this._minMaxAngleX[0]),this._minMaxAngleX[1]=sglDegToRad(this._minMaxAngleX[1]),this._minMaxAngleY=i.minMaxAngleY,this._minMaxAngleY[0]=sglDegToRad(this._minMaxAngleY[0]),this._minMaxAngleY[1]=sglDegToRad(this._minMaxAngleY[1]),this._start=[0,0],this.reset()},clamp:function(t,i,s){return i>t?i:t>s?s:t},_computeMatrix:function(){var t=SglMat4.identity();t=SglMat4.mul(t,SglMat4.translation([-this._center[0],-this._center[1],-this._center[2]])),t=SglMat4.mul(t,SglMat4.translation([0,0,-this._distance])),t=SglMat4.mul(t,SglMat4.rotationAngleAxis(this._angleY,[1,0,0])),t=SglMat4.mul(t,SglMat4.rotationAngleAxis(this._angleX,[0,-1,0])),t=SglMat4.mul(t,SglMat4.translation([this._panX,this._panY,0])),this._matrix=t},getState:function(){return[this._panX,this._panY,sglRadToDeg(this._angleX),sglRadToDeg(this._angleY),this._distance]},setState:function(t){this._panX=t[0],this._panY=t[1],this._angleX=sglDegToRad(t[2]),this._angleY=sglDegToRad(t[3]),this._distance=t[4],this._panX=this.clamp(this._panX,this._minMaxPanX[0],this._minMaxPanX[1]),this._panY=this.clamp(this._panY,this._minMaxPanY[0],this._minMaxPanY[1]),this._angleX=this.clamp(this._angleX,this._minMaxAngleX[0],this._minMaxAngleX[1]),this._angleY=this.clamp(this._angleY,this._minMaxAngleY[0],this._minMaxAngleY[1]),this._distance=this.clamp(this._distance,this._minMaxDist[0],this._minMaxDist[1]),this._computeMatrix()},animateToState:function(t){this._isAnimating=!1,this._targetPanX=t[0],this._targetPanY=t[1],this._targetAngleX=sglDegToRad(t[2]),this._targetAngleY=sglDegToRad(t[3]),this._targetDistance=t[4],this._targetPanX=this.clamp(this._targetPanX,this._minMaxPanX[0],this._minMaxPanX[1]),this._targetPanY=this.clamp(this._targetPanY,this._minMaxPanY[0],this._minMaxPanY[1]),this._targetAngleX=this.clamp(this._targetAngleX,this._minMaxAngleX[0],this._minMaxAngleX[1]),this._targetAngleY=this.clamp(this._targetAngleY,this._minMaxAngleY[0],this._minMaxAngleY[1]),this._targetDistance=this.clamp(this._targetDistance,this._minMaxDist[0],this._minMaxDist[1]),this._speedPanX=2,this._speedPanY=2,this._speedAngleX=Math.PI,this._speedAngleY=Math.PI,this._speedDistance=2;var i=Math.abs((this._targetPanX-this._panX)/this._speedPanX),s=Math.abs((this._targetPanY-this._panY)/this._speedPanY),a=Math.abs((this._targetAngleX-this._angleX)/this._speedAngleX),n=Math.abs((this._targetAngleY-this._angleY)/this._speedAngleY),e=Math.abs((this._targetDistance-this._distance)/this._speedDistance),h=Math.max(i,Math.max(s,Math.max(a,Math.max(n,e))));h>1&&(h=1),this._speedPanX*=i/h,this._speedPanY*=s/h,this._speedAngleX*=a/h,this._speedAngleY*=n/h,this._speedDistance*=e/h,this._isAnimating=!0},tick:function(t){if(!this._isAnimating)return!1;var i=this._speedPanX*t,s=this._speedPanY*t,a=this._speedAngleX*t,n=this._speedAngleY*t,e=this._speedDistance*t,h=this._targetPanX-this._panX,_=this._targetPanY-this._panY,g=this._targetAngleX-this._angleX,l=this._targetAngleY-this._angleY,r=this._targetDistance-this._distance;return h>i?this._panX+=i:-i>h?this._panX-=i:this._panX=this._targetPanX,_>s?this._panY+=s:-s>_?this._panY-=s:this._panY=this._targetPanY,g>a?this._angleX+=a:-a>g?this._angleX-=a:this._angleX=this._targetAngleX,l>n?this._angleY+=n:-n>l?this._angleY-=n:this._angleY=this._targetAngleY,r>e?this._distance+=e:-e>r?this._distance-=e:this._distance=this._targetDistance,this._panX==this._targetPanX&&this._panX==this._targetPanX&&this._angleX==this._targetAngleX&&this._angleY==this._targetAngleY&&this._distance==this._targetDistance&&(this._isAnimating=!1),this._computeMatrix(),!0},get action(){return this._action},set action(t){this._action!=t&&(this._new_action=!0),this._action=t},get matrix(){return this._matrix},reset:function(){this._matrix=SglMat4.identity(),this._action=SGL_TRACKBALL_NO_ACTION,this._panX=this._startPanX,this._panY=this._startPanY,this._angleX=this._startAngleX,this._angleY=this._startAngleY,this._distance=this._startDistance,this._isAnimating=!1},track:function(t,i,s,a){this._new_action&&(this._start[0]=i,this._start[1]=s,this._new_action=!1);var n=this._start[0]-i,e=this._start[1]-s;switch(this._start[0]=i,this._start[1]=s,this._action){case SGL_TRACKBALL_ROTATE:this._isAnimating=!1,this.rotate(t,n,e);break;case SGL_TRACKBALL_PAN:this._isAnimating=!1,this.pan(t,n,e);break;case SGL_TRACKBALL_SCALE:this._isAnimating=!1,this.scale(t,a)}return this._computeMatrix()},rotate:function(t,i,s){this._angleX+=i,this._angleY+=s,this._angleX=this.clamp(this._angleX,this._minMaxAngleX[0],this._minMaxAngleX[1]),this._angleY=this.clamp(this._angleY,this._minMaxAngleY[0],this._minMaxAngleY[1])},pan:function(t,i,s){this._panX-=i/2,this._panY-=s/2,this._panX=this.clamp(this._panX,this._minMaxPanX[0],this._minMaxPanX[1]),this._panY=this.clamp(this._panY,this._minMaxPanY[0],this._minMaxPanY[1])},scale:function(t,i){this._distance*=i,this._distance=this.clamp(this._distance,this._minMaxDist[0],this._minMaxDist[1])}};
function SphereTrackball(){}SphereTrackball.prototype={setup:function(t){t=t||{};var s=sglGetDefaultObject({startCenter:[0,0,0],startDistance:2,minMaxDist:[.2,4]},t);this._action=SGL_TRACKBALL_NO_ACTION,this._new_action=!0,this._startDistance=s.startDistance,this._distance=this._startDistance,this._minMaxDist=s.minMaxDist,this._matrix=SglMat4.identity(),this._sphereMatrix=SglMat4.identity(),this._pts=[[0,0],[0,0]],this._start=[0,0],this.reset()},clamp:function(t,s,i){return s>t?s:t>i?i:t},_computeMatrix:function(){var t=SglMat4.identity();t=SglMat4.mul(t,SglMat4.translation([0,0,-this._distance])),t=SglMat4.mul(t,this._sphereMatrix),this._matrix=t},_projectOnSphere:function(s,i){var a=1,e=0,r=sglSqrt(s*s+i*i);return.7071067811865476*a>r?e=sglSqrt(a*a-r*r):(t=a/1.4142135623730951,e=t*t/r),e},_transform:function(t,s,i,a){return SglMat4.mul4(t,[s,i,a,0])},_transformOnSphere:function(t,s,i){var a=this._projectOnSphere(s,i);return this._transform(t,s,i,a)},_translate:function(t,s){var i=SglMat4.inverse(this._sphereMatrix),a=SglVec3.to4(t,0);a=SglMat4.mul4(i,a),a=SglVec4.muls(a,s);var e=SglMat4.translation(a);this._sphereMatrix=SglMat4.mul(this._sphereMatrix,e)},getState:function(){return this._sphereMatrix},setState:function(t){this._sphereMatrix=t,this._computeMatrix()},animateToState:function(t){this._sphereMatrix=t,this._computeMatrix()},get action(){return this._action},set action(t){this._action!=t&&(this._new_action=!0),this._action=t},get matrix(){return this._matrix},reset:function(){this._matrix=SglMat4.identity(),this._sphereMatrix=SglMat4.identity(),this._distance=this._startDistance,this._pts=[[0,0],[0,0]],this._action=SGL_TRACKBALL_NO_ACTION,this._new_action=!0,this._computeMatrix()},track:function(t,s,i,a){this._new_action&&(this._start[0]=s,this._start[1]=i,this._new_action=!1);var e=this._start[0]-s,r=this._start[1]-i;switch(this._start[0]=s,this._start[1]=i,this._pts[0][0]=this._pts[1][0]+e,this._pts[0][1]=this._pts[1][1]+r,this._pts[1][0]=e,this._pts[1][1]=r,this._action){case SGL_TRACKBALL_ROTATE:this.rotate(t);break;case SGL_TRACKBALL_PAN:this.pan(t);break;case SGL_TRACKBALL_DOLLY:this.dolly(t,a);break;case SGL_TRACKBALL_SCALE:this.scale(t,a)}},rotate:function(t){if(this._pts[0][0]!=this._pts[1][0]||this._pts[0][1]!=this._pts[1][1]){var s=SglMat4.inverse(t),i=this._transformOnSphere(s,this._pts[0][0],this._pts[0][1]),a=this._transformOnSphere(s,this._pts[1][0],this._pts[1][1]),a=this._transformOnSphere(s,this._pts[1][0],this._pts[1][1]),a=this._transformOnSphere(s,this._pts[1][0],this._pts[1][1]),e=SglVec3.cross(i,a),r=SglVec3.length(e),n=SglMat4.rotationAngleAxis(r,e);this._sphereMatrix=SglMat4.mul(n,this._sphereMatrix),this._computeMatrix()}},pan:function(t){var s=SglMat4.inverse(t),i=this._transform(s,this._pts[0][0],this._pts[0][1],-1),a=this._transform(s,this._pts[1][0],this._pts[1][1],-1),e=SglVec3.sub(a,i);this._translate(e,2),this._computeMatrix()},dolly:function(t,s){var i=SglMat4.inverse(t),a=this._transform(i,0,0,s);this._translate(a,1),this._computeMatrix()},scale:function(t,s){this._distance*=s,this._distance=this.clamp(this._distance,this._minMaxDist[0],this._minMaxDist[1]),this._computeMatrix()}};
function TurnTableTrackball(){}TurnTableTrackball.prototype={setup:function(t){t=t||{};var i=sglGetDefaultObject({startCenter:[0,0,0],startPhi:0,startTheta:0,startDistance:2,minMaxDist:[.2,4],minMaxPhi:[-180,180],minMaxTheta:[-80,80]},t);this._action=SGL_TRACKBALL_NO_ACTION,this._new_action=!0,this._matrix=SglMat4.identity(),this._center=i.startCenter,this._startPhi=sglDegToRad(i.startPhi),this._startTheta=sglDegToRad(i.startTheta),this._startDistance=i.startDistance,this._phi=this._startPhi,this._theta=this._startTheta,this._distance=this._startDistance,this._targetPhi=this._startPhi,this._targetTheta=this._startTheta,this._targetDistance=this._startDistance,this._isAnimating=!1,this._speedPhi=0,this._speedTheta=0,this._speedDistance=0,this._minMaxDist=i.minMaxDist,-180==i.minMaxPhi[0]&&180==i.minMaxPhi[1]?this._limitPhi=!1:this._limitPhi=!0,this._minMaxPhi=i.minMaxPhi,this._minMaxPhi[0]=sglDegToRad(this._minMaxPhi[0]),this._minMaxPhi[1]=sglDegToRad(this._minMaxPhi[1]),this._minMaxTheta=i.minMaxTheta,this._minMaxTheta[0]=sglDegToRad(this._minMaxTheta[0]),this._minMaxTheta[1]=sglDegToRad(this._minMaxTheta[1]),this._start=[0,0],this.reset()},clamp:function(t,i,h){return i>t?i:t>h?h:t},_computeMatrix:function(){var t=SglMat4.identity();t=SglMat4.mul(t,SglMat4.translation([-this._center[0],-this._center[1],-this._center[2]])),t=SglMat4.mul(t,SglMat4.translation([0,0,-this._distance])),t=SglMat4.mul(t,SglMat4.rotationAngleAxis(this._theta,[1,0,0])),t=SglMat4.mul(t,SglMat4.rotationAngleAxis(this._phi,[0,-1,0])),this._matrix=t},getState:function(){return[sglRadToDeg(this._phi),sglRadToDeg(this._theta),this._distance]},setState:function(t){this._isAnimating=!1,this._phi=sglDegToRad(t[0]),this._theta=sglDegToRad(t[1]),this._distance=t[2],this._limitPhi&&(this._phi=this.clamp(this._phi,this._minMaxPhi[0],this._minMaxPhi[1])),this._theta=this.clamp(this._theta,this._minMaxTheta[0],this._minMaxTheta[1]),this._distance=this.clamp(this._distance,this._minMaxDist[0],this._minMaxDist[1]),this._computeMatrix()},animateToState:function(t){if(this._isAnimating=!1,this._targetPhi=sglDegToRad(t[0]),this._targetTheta=sglDegToRad(t[1]),this._targetDistance=t[2],this._limitPhi&&(this._targetPhi=this.clamp(this._targetPhi,this._minMaxPhi[0],this._minMaxPhi[1])),this._targetTheta=this.clamp(this._targetTheta,this._minMaxTheta[0],this._minMaxTheta[1]),this._targetDistance=this.clamp(this._targetDistance,this._minMaxDist[0],this._minMaxDist[1]),this._speedPhi=Math.PI,this._speedTheta=Math.PI,this._speedDistance=2,!this._limitPhi){for(;this._phi>2*Math.PI;)this._phi-=2*Math.PI;for(;this._phi<0;)this._phi+=2*Math.PI;for(var i=this._targetPhi;i>2*Math.PI;)i-=2*Math.PI;for(;0>i;)i+=2*Math.PI;Math.abs(i-this._phi)<Math.PI?i>this._phi?this.speedphi=Math.PI:this.speedphi=-Math.PI:i>this._phi?(i-=2*Math.PI,this.speedphi=-Math.PI):(i+=2*Math.PI,this.speedphi=Math.PI),this._targetPhi=i}var h=Math.abs((this._targetPhi-this._phi)/this._speedPhi),s=Math.abs((this._targetTheta-this._theta)/this._speedTheta),a=Math.abs((this._targetDistance-this._distance)/this._speedDistance),e=Math.max(h,Math.max(s,a));e>1&&(e=1),this._speedPhi*=h/e,this._speedTheta*=s/e,this._speedDistance*=a/e,this._isAnimating=!0},tick:function(t){if(!this._isAnimating)return!1;var i=this._speedPhi*t,h=this._speedTheta*t,s=this._speedDistance*t,a=this._targetPhi-this._phi,e=this._targetTheta-this._theta,_=this._targetDistance-this._distance;return a>i?this._phi+=i:-i>a?this._phi-=i:this._phi=this._targetPhi,e>h?this._theta+=h:-h>e?this._theta-=h:this._theta=this._targetTheta,_>s?this._distance+=s:-s>_?this._distance-=s:this._distance=this._targetDistance,this._phi==this._targetPhi&&this._theta==this._targetTheta&&this._distance==this._targetDistance&&(this._isAnimating=!1),this._computeMatrix(),!0},get action(){return this._action},set action(t){this._action!=t&&(this._new_action=!0),this._action=t},get matrix(){return this._matrix},reset:function(){this._matrix=SglMat4.identity(),this._action=SGL_TRACKBALL_NO_ACTION,this._phi=this._startPhi,this._theta=this._startTheta,this._distance=this._startDistance,this._isAnimating=!1},track:function(t,i,h,s){this._new_action&&(this._start[0]=i,this._start[1]=h,this._new_action=!1);var a=this._start[0]-i,e=this._start[1]-h;switch(this._start[0]=i,this._start[1]=h,this._action){case SGL_TRACKBALL_ROTATE:this._isAnimating=!1,this.rotate(t,a,e);break;case SGL_TRACKBALL_PAN:break;case SGL_TRACKBALL_SCALE:this._isAnimating=!1,this.scale(t,s)}return this._computeMatrix()},rotate:function(t,i,h){this._phi+=i,this._limitPhi&&(this._phi=this.clamp(this._phi,this._minMaxPhi[0],this._minMaxPhi[1])),this._phi>20&&(this._phi=this._phi-20),this._phi<-20&&(this._phi=this._phi+20),this._theta+=h,this._theta=this.clamp(this._theta,this._minMaxTheta[0],this._minMaxTheta[1])},scale:function(t,i){this._distance*=i,this._distance=this.clamp(this._distance,this._minMaxDist[0],this._minMaxDist[1])}};
function TurntablePanTrackball(){}TurntablePanTrackball.prototype={setup:function(t){t=t||{};var i=sglGetDefaultObject({startCenter:[0,0,0],startPhi:0,startTheta:0,startDistance:2,startPanX:0,startPanY:0,startPanZ:0,minMaxDist:[.2,4],minMaxPhi:[-180,180],minMaxTheta:[-80,80],minMaxPanX:[-1,1],minMaxPanY:[-1,1],minMaxPanZ:[-1,1]},t);this._action=SGL_TRACKBALL_NO_ACTION,this._new_action=!0,this._matrix=SglMat4.identity(),this._center=i.startCenter,this._startPhi=sglDegToRad(i.startPhi),this._startTheta=sglDegToRad(i.startTheta),this._startPanX=i.startPanX,this._startPanY=i.startPanY,this._startPanZ=i.startPanZ,this._startDistance=i.startDistance,this._phi=this._startPhi,this._theta=this._startTheta,this._panX=this._startPanX,this._panY=this._startPanY,this._panZ=this._startPanZ,this._distance=this._startDistance,this._isAnimating=!1,-180==i.minMaxPhi[0]&&180==i.minMaxPhi[1]?this._limitPhi=!1:this._limitPhi=!0,this._minMaxPhi=i.minMaxPhi,this._minMaxPhi[0]=sglDegToRad(this._minMaxPhi[0]),this._minMaxPhi[1]=sglDegToRad(this._minMaxPhi[1]),this._minMaxTheta=i.minMaxTheta,this._minMaxTheta[0]=sglDegToRad(this._minMaxTheta[0]),this._minMaxTheta[1]=sglDegToRad(this._minMaxTheta[1]),this._minMaxPanX=i.minMaxPanX,this._minMaxPanY=i.minMaxPanY,this._minMaxPanZ=i.minMaxPanZ,this._minMaxDist=i.minMaxDist,this._start=[0,0],this.reset()},clamp:function(t,i,a){return i>t?i:t>a?a:t},_computeMatrix:function(){var t=SglMat4.identity();t=SglMat4.mul(t,SglMat4.translation([-this._center[0],-this._center[1],-this._center[2]])),t=SglMat4.mul(t,SglMat4.translation([0,0,-this._distance])),t=SglMat4.mul(t,SglMat4.rotationAngleAxis(this._theta,[1,0,0])),t=SglMat4.mul(t,SglMat4.rotationAngleAxis(this._phi,[0,-1,0])),t=SglMat4.mul(t,SglMat4.translation([-this._panX,-this._panY,-this._panZ])),this._matrix=t},getState:function(){return[sglRadToDeg(this._phi),sglRadToDeg(this._theta),this._panX,this._panY,this._panZ,this._distance]},setState:function(t){this._isAnimating=!1,this._phi=sglDegToRad(t[0]),this._theta=sglDegToRad(t[1]),this._panX=t[2],this._panY=t[3],this._panZ=t[4],this._distance=t[5],this._limitPhi&&(this._phi=this.clamp(this._phi,this._minMaxPhi[0],this._minMaxPhi[1])),this._theta=this.clamp(this._theta,this._minMaxTheta[0],this._minMaxTheta[1]),this._distance=this.clamp(this._distance,this._minMaxDist[0],this._minMaxDist[1]),this._panX=this.clamp(this._panX,this._minMaxPanX[0],this._minMaxPanX[1]),this._panY=this.clamp(this._panY,this._minMaxPanY[0],this._minMaxPanY[1]),this._panZ=this.clamp(this._panZ,this._minMaxPanZ[0],this._minMaxPanZ[1]),this._computeMatrix()},animateToState:function(t){if(this._isAnimating=!1,this._targetPhi=sglDegToRad(t[0]),this._targetTheta=sglDegToRad(t[1]),this._targetPanX=t[2],this._targetPanY=t[3],this._targetPanZ=t[4],this._targetDistance=t[5],this._limitPhi&&(this._targetPhi=this.clamp(this._targetPhi,this._minMaxPhi[0],this._minMaxPhi[1])),this._targetTheta=this.clamp(this._targetTheta,this._minMaxTheta[0],this._minMaxTheta[1]),this._targetPanX=this.clamp(this._targetPanX,this._minMaxPanX[0],this._minMaxPanX[1]),this._targetPanY=this.clamp(this._targetPanY,this._minMaxPanY[0],this._minMaxPanY[1]),this._targetPanZ=this.clamp(this._targetPanZ,this._minMaxPanZ[0],this._minMaxPanZ[1]),this._targetDistance=this.clamp(this._targetDistance,this._minMaxDist[0],this._minMaxDist[1]),this._speedPhi=Math.PI,this._speedTheta=Math.PI,this._speedPanX=1,this._speedPanY=1,this._speedPanZ=1,this._speedDistance=2,!this._limitPhi){for(;this._phi>2*Math.PI;)this._phi-=2*Math.PI;for(;this._phi<0;)this._phi+=2*Math.PI;for(var i=this._targetPhi;i>2*Math.PI;)i-=2*Math.PI;for(;0>i;)i+=2*Math.PI;Math.abs(i-this._phi)<Math.PI?i>this._phi?this.speedphi=Math.PI:this.speedphi=-Math.PI:i>this._phi?(i-=2*Math.PI,this.speedphi=-Math.PI):(i+=2*Math.PI,this.speedphi=Math.PI),this._targetPhi=i}var a=Math.abs((this._targetPhi-this._phi)/this._speedPhi),s=Math.abs((this._targetTheta-this._theta)/this._speedTheta),h=Math.abs((this._targetDistance-this._distance)/this._speedDistance),n=Math.abs((this._targetPanX-this._panX)/this._speedPanX),_=Math.abs((this._targetPanY-this._panY)/this._speedPanY),e=Math.abs((this._targetPanZ-this._panZ)/this._speedPanZ),r=Math.max(a,Math.max(s,Math.max(h,Math.max(n,Math.max(_,e)))));r=this.clamp(r,.5,2),this._speedPhi*=a/r,this._speedTheta*=s/r,this._speedDistance*=h/r,this._speedPanX*=n/r,this._speedPanY*=_/r,this._speedPanZ*=e/r,this._isAnimating=!0},tick:function(t){if(!this._isAnimating)return!1;var i=this._speedPhi*t,a=this._speedTheta*t,s=this._speedDistance*t,h=this._speedPanX*t,n=this._speedPanY*t,_=this._speedPanZ*t,e=this._targetPhi-this._phi,r=this._targetTheta-this._theta,p=this._targetDistance-this._distance,P=this._targetPanX-this._panX,m=this._targetPanY-this._panY,M=this._targetPanZ-this._panZ;return e>i?this._phi+=i:-i>e?this._phi-=i:this._phi=this._targetPhi,r>a?this._theta+=a:-a>r?this._theta-=a:this._theta=this._targetTheta,p>s?this._distance+=s:-s>p?this._distance-=s:this._distance=this._targetDistance,P>h?this._panX+=h:-h>P?this._panX-=h:this._panX=this._targetPanX,m>n?this._panY+=n:-n>m?this._panY-=n:this._panY=this._targetPanY,M>_?this._panZ+=_:-_>M?this._panZ-=_:this._panZ=this._targetPanZ,this._phi==this._targetPhi&&this._theta==this._targetTheta&&this._distance==this._targetDistance&&this._panX==this._targetPanX&&this._panY==this._targetPanY&&this._panZ==this._targetPanZ&&(this._isAnimating=!1),this._computeMatrix(),!0},get action(){return this._action},set action(t){this._action!=t&&(this._new_action=!0),this._action=t},get matrix(){return this._matrix},reset:function(){this._matrix=SglMat4.identity(),this._action=SGL_TRACKBALL_NO_ACTION,this._phi=this._startPhi,this._theta=this._startTheta,this._distance=this._startDistance,this._panX=this._startPanX,this._panY=this._startPanY,this._panZ=this._startPanZ,this._isAnimating=!1},track:function(t,i,a,s){this._new_action&&(this._start[0]=i,this._start[1]=a,this._new_action=!1);var h=this._start[0]-i,n=this._start[1]-a;switch(this._start[0]=i,this._start[1]=a,this._action){case SGL_TRACKBALL_ROTATE:this._isAnimating=!1,this.rotate(t,h,n);break;case SGL_TRACKBALL_PAN:this._isAnimating=!1,this.pan(t,h,n);break;case SGL_TRACKBALL_SCALE:this._isAnimating=!1,this.scale(t,s)}return this._computeMatrix()},pan:function(t,i,a){var s=[1,0,0,1],h=[0,1,0,1],n=[0,0,1,1];s=SglMat4.mul4(SglMat4.rotationAngleAxis(this._phi,[0,-1,0]),s),h=SglMat4.mul4(SglMat4.rotationAngleAxis(this._phi,[0,-1,0]),h),n=SglMat4.mul4(SglMat4.rotationAngleAxis(this._phi,[0,-1,0]),n),s=SglMat4.mul4(SglMat4.rotationAngleAxis(this._theta,[1,0,0]),s),h=SglMat4.mul4(SglMat4.rotationAngleAxis(this._theta,[1,0,0]),h),n=SglMat4.mul4(SglMat4.rotationAngleAxis(this._theta,[1,0,0]),n),this._panX+=i*s[0]+a*s[1],this._panY+=i*h[0]+a*h[1],this._panZ+=i*n[0]+a*n[1],this._panX=this.clamp(this._panX,this._minMaxPanX[0],this._minMaxPanX[1]),this._panY=this.clamp(this._panY,this._minMaxPanY[0],this._minMaxPanY[1]),this._panZ=this.clamp(this._panZ,this._minMaxPanZ[0],this._minMaxPanZ[1])},rotate:function(t,i,a){this._phi+=i,this._limitPhi&&(this._phi=this.clamp(this._phi,this._minMaxPhi[0],this._minMaxPhi[1])),this._phi>20&&(this._phi=this._phi-20),this._phi<-20&&(this._phi=this._phi+20),this._theta+=a,this._theta=this.clamp(this._theta,this._minMaxTheta[0],this._minMaxTheta[1])},scale:function(t,i){this._distance*=i,this._distance=this.clamp(this._distance,this._minMaxDist[0],this._minMaxDist[1])}};
function init3dhop(){var e,t,i,s=0;$("#toolbar img").mouseenter(function(e){t=$(this).attr("id"),i?$(this).css("opacity","1.0"):$(this).css("opacity","0.8")}).mouseout(function(t){clearInterval(e),$(this).css("opacity","0.5")}).mousedown(function(n){i=!0,n.button==s&&(actionsToolbar(t),"zoomin"==t||"zoomout"==t?e=setInterval(function(){actionsToolbar(t)},100):clearInterval(e),$(this).css("opacity","1.0"),s=0)}).mouseup(function(t){i=!1,t.button==s&&(clearInterval(e),$(this).css("opacity","0.8"),s=0)}).on("touchstart",function(e){s=2}).on("touchend",function(e){s=0}),$("#measure-output").on("contextmenu",function(e){e.stopPropagation()}),$("#3dhop").on("contextmenu",function(e){return!1}).on("touchstart",function(e){$("#toolbar img").css("opacity","0.5")}).on("touchend",function(t){clearInterval(e)}).on("touchmove",function(t){clearInterval(e),$("#toolbar img").css("opacity","0.5")}),$("#draw-canvas").mousedown(function(){$("#toolbar img").css("opacity","0.5")}),window.navigator.userAgent.indexOf("Trident/")>0&&($("#full").click(function(e){enterFullscreen()}),$("#full_on").click(function(e){exitFullscreen()})),resizeCanvas($("#3dhop").parent().width(),$("#3dhop").parent().height()),set3dhlg()}function lightSwitch(){var e=presenter.isLightTrackballEnabled();e?($("#light").css("visibility","hidden"),$("#light_on").css("visibility","visible"),$("#light_on").css("opacity","1.0")):($("#light_on").css("visibility","hidden"),$("#light").css("visibility","visible"),$("#light").css("opacity","1.0"))}function measurementSwitch(){var e=presenter.isMeasurementToolEnabled();e?($("#measure").css("visibility","hidden"),$("#measure_on").css("visibility","visible"),$("#measure_on").css("opacity","1.0"),$("#measurebox").css("visibility","visible"),$("#draw-canvas").css("cursor","crosshair")):($("#measure_on").css("visibility","hidden"),$("#measure").css("visibility","visible"),$("#measure").css("opacity","1.0"),$("#measurebox").css("visibility","hidden"),$("#measure-output").html("0.0"),$("#draw-canvas").css("cursor","default"))}function hotspotSwitch(){var e=presenter.isSpotVisibilityEnabled();e?($("#hotspot").css("visibility","hidden"),$("#hotspot_on").css("visibility","visible"),$("#hotspot_on").css("opacity","1.0")):($("#hotspot_on").css("visibility","hidden"),$("#hotspot").css("visibility","visible"),$("#hotspot").css("opacity","1.0"))}function fullscreenSwitch(){"visible"==$("#full").css("visibility")?window.navigator.userAgent.indexOf("Trident/")<0&&enterFullscreen():window.navigator.userAgent.indexOf("Trident/")<0&&exitFullscreen()}function enterFullscreen(){var e=document.getElementById("3dhop");presenter.native_width=presenter.ui.width,presenter.native_height=presenter.ui.height,$("#full").css("visibility","hidden"),$("#full_on").css("visibility","visible"),$("#full_on").css("opacity","0.5"),resizeCanvas(screen.width,screen.height),e.msRequestFullscreen?e.msRequestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen&&e.webkitRequestFullscreen(),presenter.ui.postDrawEvent()}function exitFullscreen(){$("#full_on").css("visibility","hidden"),$("#full").css("visibility","visible"),$("#full").css("opacity","0.5"),resizeCanvas(presenter.native_width,presenter.native_height),document.msExitFullscreen?document.msExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen&&document.webkitExitFullscreen(),presenter.ui.postDrawEvent()}function moveToolbar(e,t){$("#toolbar").css("left",e),$("#toolbar").css("top",t)}function moveMeasurebox(e,t){$("#measurebox").css("right",e),$("#measurebox").css("top",t)}function resizeCanvas(e,t){$("#draw-canvas").attr("width",e),$("#draw-canvas").attr("height",t),$("#3dhop").css("width",e),$("#3dhop").css("height",t)}function set3dhlg(){$("#tdhlg").html("Powered by 3DHOP</br>&nbsp;C.N.R. &nbsp;&ndash;&nbsp; I.S.T.I."),$("#tdhlg").mouseover(function(){$("#tdhlg").animate({height:"25px"},"fast")}).mouseout(function(){$("#tdhlg").animate({height:"13px"},"slow")}),$("#tdhlg").click(function(){window.open("http://vcg.isti.cnr.it/3dhop/","_blank")})}document.addEventListener("MSFullscreenChange",function(){document.msFullscreenElement||exitFullscreen()},!1),document.addEventListener("mozfullscreenchange",function(){document.mozFullScreen||exitFullscreen()},!1),document.addEventListener("webkitfullscreenchange",function(){document.webkitIsFullScreen||exitFullscreen()},!1);
//# sourceMappingURL=3dviewer.min.js.map
